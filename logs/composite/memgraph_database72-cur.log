-- Time: 2024/07/05 16:32:52
-- Database: memgraph_database72
-- Database version: composite
-- seed value: 1720168297047
CREATE (n0 :L2{k17 : 'wq', k16 : 'mW', id : 0, k13 : false, k12 : true, k15 : 1740164636, k14 : true});
CREATE (n0 {id : 1});
CREATE (n0 :L5{k31 : false, k33 : false, id : 2, k32 : -391058720, k35 : -1016107602, k34 : true, k36 : 177563365});
CREATE (n0 :L2{k17 : 'CY', k16 : 'Dzvm8y', id : 3, k13 : true, k12 : true, k15 : 1845845823});
MATCH (n0 {id : 2}), (n1 {id : 2}) MERGE(n0)-[r :T3{k55 : true, id : 4, k54 : false, k57 : 'XbI8b0RW', k56 : false, k59 : false, k58 : false}]->(n1);
MATCH (n0 {id : 1}), (n1 {id : 0}) MERGE(n0)-[r :T4{k60 : false, k61 : false, k64 : false, k63 : 'x', k66 : -131912738, id : 5, k65 : 'VNeHSwqtY'}]->(n1);
MATCH (n0 {id : 1}), (n1 {id : 1}) MERGE(n0)-[r :T0{k39 : -1745471632, k38 : false, k40 : 'ILjT3JMwG', k41 : -1052265015, id : 6, k37 : 'ZyS'}]->(n1);
MATCH (n0 {id : 2}), (n1 {id : 1}) MERGE(n0)-[r :T3{k55 : false, id : 7, k54 : true, k57 : 'B0qo6F9aJ', k56 : false, k59 : true, k58 : true}]->(n1);
CREATE ({id:8})-[ :T0{k41:NULL, id:9}]->(n0{id:10}), (n1{id:11})<-[r0 :T3{k54:true, id:12}]-(n2{id:13}) CREATE (n3{id:14})-[r1 :T3{k54:(NOT true), id:15}]->(n4{id:16})-[r2 :T0{id:17}]->({id:18}), ( :L2{k16:NULL, id:19}) MERGE ({k15:251175836, id:20}) RETURN 1 AS a0, 1 AS a1;
CREATE (m0{ id : reduce(a=8 ,b IN []|a) } )CREATE (m0)- [ : T0 { k41 : NULL , id : reduce(a=9 ,b IN []|a) } ] - > ( n0 { id : 10 } ) CREATE ( n1 { id : 11 } ) < - [ r0 : T3 { k54 : true , id : 12 } ] - ( n2 { id : 13 } ) CREATE ({id:18})<-[ r2 : T0 { id : 17 } ] -(n4{id:16})<-[ r1 : T3 { k54 : ( NOT true ) , id : CASE WHEN FALSE THEN NULL ELSE 15 END } ] -( n3 { id : reduce(a=14 ,b IN []|a) } ) CREATE ( : L2 { k16 : NULL , id : 19 } ) MERGE ( { k15 : reduce(a=251175836 ,b IN []|a) , id : 20 } ) DETACH DELETE NULL RETURN 1 AS a0 , 1 AS a1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CREATE p0=({id:21})-[r0 :T0{id:22}]->(n0{id:23}) CREATE (n1{id:24})-[r1 :T0{id:25}]->(n2{id:26}) CREATE (n3{id:27}), p1=(n4{id:28}) RETURN NULL AS a3, 1 AS a4 ORDER BY NULL;
CREATE p0 = ( { id : 21 } ) - [ r0 : T0 { id : 22 } ] - > ( n0 { id : CASE WHEN FALSE THEN NULL ELSE 23 END } ) CREATE ( n1 { id : 24 } ) - [ r1 : T0 { id : 25 } ] - > ( n2 { id : 26 } ) CREATE ( n3 { id : 27 } ) CREATE p1 = ( n4 { id : 28 } ) WITH * UNWIND [1] as l0 RETURN NULL AS a3 , 1 AS a4 ORDER BY NULL ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
OPTIONAL MATCH (n0)<-[r0]-(n1) MERGE p0=({id:29}) DETACH DELETE n0  RETURN 1 AS a0, p0 AS a1 UNION ALL CREATE p0=(n0{id:30}) CREATE ({id:31})-[r0 :T3{k56:NULL, id:32}]->(n1{id:33})-[ :T3{id:34}]->(n2{id:35}), ({id:36})-[r1 :T3{id:37}]->(n3{id:38})-[ :T4{k66:NULL, id:39}]->(n4{id:40}) CREATE ({id:41}), (n5 :L2{id:42}) RETURN 1 AS a0, 1785452398 AS a1;
OPTIONAL MATCH ( n0 ) < - [ r0 ] - ( n1 ) REMOVE (NULL).FALSE MERGE p0 = ( { id : 29 } ) DETACH DELETE n0 REMOVE (NULL).NULL RETURN 1 AS a0 , p0 AS a1 UNION ALL CREATE p0 = ( n0 { id : 30 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { id : 31 } ) - [ r0 : T3 { k56 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 32 END } ] - > ( n1 { id : reduce(a=33 ,b IN []|a) } ) - [ : T3 { id : 34 } ] - > ( n2 { id : 35 } ) CREATE ( { id : 36 } ) - [ r1 : T3 { id : reduce(a=37 ,b IN []|a) } ] - > ( n3 { id : 38 } ) - [ : T4 { k66 : NULL , id : CASE WHEN TRUE THEN 39 END } ] - > ( n4 { id : reduce(a=40 ,b IN []|a) } ) CREATE ( { id : 41 } ) CREATE ( n5 : L2 { id : 42 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 , reduce(a=1785452398 ,b IN []|a) AS a1 ORDER BY 1 SKIP 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
UNWIND CASE WHEN NULL THEN NULL END AS a1 CREATE ({id:43})<-[ :T3{k55:NULL, id:44}]-(n4{id:45}), ({k12:NULL, id:46})<-[ :T4{id:47}]-(n5{id:48})<-[ :T3{id:49}]-(n6{k30:NULL, id:50}) MERGE ({k13:([['4Bs', 'M']] <= a1), id:51})<-[r1 :T3{k56:true, id:52}]-(n7{id:53}) RETURN r1 AS a2;
UNWIND CASE WHEN NULL THEN NULL END AS a1 WITH * CREATE ( { id : 43 } ) < - [ : T3 { k55 : NULL , id : 44 } ] - ( n4 { id : 45 } ) CREATE (n6{k30:NULL, id:50})-[ : T3 { id : 49 } ] ->(n5{id:48})-[ : T4 { id : 47 } ] ->( { k12 : NULL , id : 46 } ) MERGE ( { k13 : ( [ [ '4Bs' , 'M' ] ] <= a1 ) , id : 51 } ) < - [ r1 : T3 { k56 : true , id : 52 } ] - ( n7 { id : CASE WHEN FALSE THEN NULL ELSE 53 END } ) RETURN r1 AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MERGE (n0 :L2{id:54}) DETACH DELETE n0  CREATE (n1{id:55}) RETURN 1 AS a0, NULL AS a1;
MERGE ( n0 : L2 { id : 54 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE n0 CREATE ( n1 { id : 55 } ) WITH * UNWIND [NULL] as l0 RETURN 1 AS a0 , NULL AS a1 LIMIT 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * CREATE (n0 :L5{k30:'5', id:56})-[ :T3{id:57}]->(n1 :L5{id:58})-[r0 :T3{id:59}]->(n2{id:60}), (n3{id:61})<-[ :T3{id:62}]-({k14:NULL, id:63}) MERGE ( :L5{id:64})-[r1 :T3{id:65}]-(n4{id:66}) RETURN n4 AS a0, n4 AS a1} CREATE ({id:67})-[ :T3{k55:NULL, id:68}]->(n5{id:69}) DETACH DELETE a0  RETURN *, 1 AS a2;
CALL { WITH * CREATE ( n0 : L5 { k30 : '5' , id : 56 } ) - [ : T3 { id : reduce(a=57 ,b IN []|a) } ] - > ( n1 : L5 { id : CASE WHEN TRUE THEN 58 END } ) - [ r0 : T3 { id : 59 } ] - > ( n2 { id : 60 } ) CREATE ( n3 { id : 61 } ) < - [ : T3 { id : CASE WHEN TRUE THEN 62 END } ] - ( { k14 : NULL , id : 63 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( : L5 { id : reduce(a=64 ,b IN []|a) } ) - [ r1 : T3 { id : 65 } ] - ( n4 { id : 66 } ) WITH * UNWIND [NULL] as l0 RETURN CASE WHEN TRUE THEN n4 END AS a0 , n4 AS a1 } UNWIND [1] as l1 CREATE ( { id : CASE WHEN TRUE THEN 67 END } ) - [ : T3 { k55 : NULL , id : 68 } ] - > ( n5 { id : CASE WHEN TRUE THEN 69 END } ) SET (NULL).NULL=1 DETACH DELETE a0 WITH * UNWIND [NULL] as l2 RETURN * , reduce(a=1 ,b IN []|a) AS a2 ORDER BY 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * MATCH (n0)-[]->(), ({k33:NULL})-[r0]-(n1)-[r1]->() MERGE (n2 :L5{k30:'p', id:70}) RETURN 1 AS a0, 1 AS a1 ORDER BY NULL, a0} OPTIONAL MATCH ()-[ :T0{k37:'Y'}]-(n3)<-[]-(n2), p0=()-[*0..0]-(n4) WHERE NULL MERGE ({id:71}) RETURN 1 AS a2, n2 AS a3;
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() MATCH (n0),()-[m0]->(),(nn1),({k33:NULL})-[r0]-(n1)-[r1]->() WHERE exists((n0)-[m0]->(nn1)) OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n2 : L5 { k30 : 'p' , id : 70 } ) DELETE NULL RETURN 1 AS a0 , CASE WHEN FALSE THEN NULL ELSE 1 END AS a1 ORDER BY NULL, a0 SKIP 1 } WITH * OPTIONAL MATCH ( ) - [ : T0 { k37 : reduce(a='Y' ,b IN []|a) } ] - ( n3 ) < - [ ] - ( n2 ) ,p0 = ( ) - [ * 0 .. 0 ] - ( n4 ) WHERE NULL UNWIND [1] as l0 MERGE pp0=( { id : 71 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a2 , reduce(a=n2 ,b IN []|a) AS a3 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH p0=(n0) SET n0.k=NULL MERGE ( :L5{k35:-880134811, id:72})-[ :T3{id:73}]-(n5 :L5{id:74}) RETURN (n5.k33) AS a1, 1 AS a2;
MATCH p0=(n0) SET (NULL).TRUE=1 SET n0 . k = NULL WITH * MERGE ( : L5 { k35 : -880134811 , id : 72 } ) - [ : T3 { id : 73 } ] - ( n5 : L5 { id : CASE WHEN FALSE THEN NULL ELSE 74 END } ) RETURN CASE WHEN TRUE THEN ( n5 . k33 ) END AS a1 , 1 AS a2 LIMIT 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * CREATE (n0{id:75})-[ :T3{k56:('K' CONTAINS reverse(NULL)), id:76}]->( :L5{id:77}), ({id:78})-[r1 :T3{k55:('N' CONTAINS 'b'), id:79}]->({id:80}) MERGE (n3{id:81})-[r2 :T3{k58:false, id:82}]-({id:83}) RETURN 1 AS a0} CREATE (n4{id:84})-[ :T3{k59:false, id:85}]->({id:86}) MERGE (n5{id:87}) RETURN DISTINCT 1 AS a1, 1 AS a2 SKIP 0 UNION WITH DISTINCT reduce(a=NULL,b IN [NULL, NULL]|a) AS a0 MERGE (n0{id:88})-[r0 :T0{id:89}]-(n1{id:90})<-[r1 :T3{id:91}]-({id:92}) CREATE p0=(n2{id:93})<-[ :T3{id:94}]-(n3{id:95}) RETURN 1 AS a1, (r0.k41) AS a2;
CALL { WITH * CREATE ( n0 { id : 75 } ) - [ : T3 { k56 : ( 'K' CONTAINS reverse ( NULL ) ) , id : 76 } ] - > ( : L5 { id : 77 } ) CREATE ({id:80})<-[ r1 : T3 { k55 : ( 'N' CONTAINS 'b' ) , id : 79 } ] -( { id : 78 } ) SET (NULL).TRUE=1 MERGE ( n3 { id : CASE WHEN FALSE THEN NULL ELSE 81 END } ) - [ r2 : T3 { k58 : reduce(a=false ,b IN []|a) , id : 82 } ] - ( { id : 83 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a0 } WITH * CREATE ( n4 { id : 84 } ) - [ : T3 { k59 : false , id : 85 } ] - > ( { id : 86 } ) SET (NULL).TRUE=1 MERGE ( n5 { id : 87 } ) WITH * RETURN DISTINCT 1 AS a1 , 1 AS a2 SKIP 0 UNION WITH DISTINCT reduce ( a = NULL , b IN CASE WHEN TRUE THEN ([]+[ NULL , reduce(a=NULL ,b IN []|a) ] )END | a ) AS a0 MERGE ( n0 { id : 88 } ) - [ r0 : T0 { id : 89 } ] - ( n1 { id : reduce(a=90 ,b IN []|a) } ) < - [ r1 : T3 { id : 91 } ] - ( { id : 92 } ) REMOVE (NULL).k CREATE p0=(n3{id:95})-[ : T3 { id : 94 } ] ->( n2 { id : 93 } ) RETURN 1 AS a1 , ( r0 . k41 ) AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MERGE ({id:96}) CREATE (n0{id:97})-[r0 :T0{id:98}]->(n1{id:99})<-[r1 :T3{id:100}]-( :L5{id:101}) MERGE p0=(n2{id:102})-[r2 :T0{id:103}]-({id:104})<-[r3 :T3{id:105}]-( :L5{k33:('O' < reverse('NOEPRz9a')), id:106}) RETURN n2 AS a0, (r3.k57) AS a1 UNION ALL WITH [NULL, reduce(a=CASE WHEN true THEN NULL END,b IN [endNode(NULL), nodes(NULL)[abs(-225265591)]]|a)] AS a0 WHERE NULL OPTIONAL MATCH (n0)-[*..2]->(a0)-[]-(n1) DETACH DELETE a0  RETURN DISTINCT NULL AS a0, 1 AS a1;
MERGE ( { id : 96 } ) CREATE ( :L5{id:101})-[ r1 : T3 { id : CASE WHEN TRUE THEN 100 END } ] ->(n1{id:99})<-[ r0 : T0 { id : reduce(a=98 ,b IN []|a) } ] -( n0 { id : 97 } ) WITH * MERGE p0 = ( n2 { id : 102 } ) - [ r2 : T0 { id : 103 } ] - ( { id : CASE WHEN TRUE THEN 104 END } ) < - [ r3 : T3 { id : 105 } ] - ( : L5 { k33 : ( 'O' < reverse ( 'NOEPRz9a' ) ) , id : 106 } ) RETURN n2 AS a0 , CASE WHEN FALSE THEN NULL ELSE ( reduce(a=r3 . k57 ,b IN []|a) ) END AS a1 UNION ALL WITH CASE WHEN TRUE THEN [ reduce(a=NULL ,b IN []|a) , CASE WHEN FALSE THEN NULL ELSE reduce ( a = CASE WHEN CASE WHEN FALSE THEN NULL ELSE true END THEN NULL END , b IN ([ endNode ( NULL ) , nodes ( reduce(a=NULL ,b IN []|a) ) [ abs ( -225265591 ) ] ] +[]) | a ) END ] END AS a0 WHERE NULL WITH * OPTIONAL MATCH ( n0 ) - [ * .. 2 ] - > ( a0 ) - [ ] - ( n1 ) OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE a0 WITH * UNWIND [1] as l0 RETURN DISTINCT NULL AS a0 , 1 AS a1 ORDER BY FALSE ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
WITH NULL AS a0 SKIP 1 WHERE true MATCH ()<-[ :T4{k65:'S'}]-(n0)-[]-(), () SET n0.k=false RETURN 1 AS a1, 1 AS a2;
WITH NULL AS a0 SKIP 1 WHERE true UNWIND [NULL] as l0 MATCH (nn0),()<-[m1:T4{k65:'S'}]-(),(n0),()<-[m2]-(),(nn3),() WHERE exists((nn0)<-[m1]-(n0)-[m2]-(nn3)) CREATE (c0{id:-1}) DELETE (c0) SET n0 . k = CASE WHEN FALSE THEN NULL ELSE false END WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a1 , CASE WHEN TRUE THEN 1 END AS a2 ;
