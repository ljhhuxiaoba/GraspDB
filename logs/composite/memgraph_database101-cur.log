-- Time: 2024/07/05 16:33:19
-- Database: memgraph_database101
-- Database version: composite
-- seed value: 1720168297076
CREATE (n0 :L3:L2{k16 : 535831934, k19 : false, k18 : 'jD1AmoW', k20 : -1239865538, k11 : 945369791, id : 0, k13 : true, k12 : 'j', k15 : true, k14 : true});
CREATE (n0 {id : 1});
CREATE (n0 {id : 2});
CREATE (n0 {id : 3});
MATCH (n0 {id : 2}), (n1 {id : 1}) MERGE(n0)-[r :T2{k42 : -2033021174, k41 : true, k44 : true, id : 4, k43 : -47636176, k46 : -799052463, k45 : 171530421, k47 : -352788398}]->(n1);
MATCH (n0 {id : 2}), (n1 {id : 1}) MERGE(n0)-[r :T1{k39 : '9', k40 : 'pEjDyB', id : 5, k35 : 2055301498, k37 : '0', k36 : 1932508622}]->(n1);
MATCH (n0 {id : 1}), (n1 {id : 3}) MERGE(n0)-[r :T1{k39 : 'Q', k38 : -763034823, id : 6, k35 : -197241106, k37 : '3', k36 : 153603203}]->(n1);
OPTIONAL MATCH p0=(n0), (n0) MERGE ({id:7}) MERGE (n1{id:8})<-[r0 :T2{id:9}]-({id:10}) RETURN 1 AS a0, 1 AS a1 LIMIT 0;
OPTIONAL MATCH p0 = ( n0 ) ,( n0 ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( { id : reduce(a=7 ,b IN []|a) } ) REMOVE (NULL).TRUE MERGE ( n1 { id : 8 } ) < - [ r0 : T2 { id : reduce(a=9 ,b IN []|a) } ] - ( { id : 10 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a0 , CASE WHEN TRUE THEN 1 END AS a1 LIMIT 0 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
FOREACH(a0 IN [(n0)-[r0]-(n1)|CASE WHEN NULL THEN n1 END]|CREATE ({id:11}), ({id:12}) MERGE (n2{id:13})<-[r1 :T1{id:14}]-({id:15}) CREATE ({id:16})<-[r2 :T1{id:17}]-(n3{id:18})) CREATE ({id:19})-[ :T1{id:20}]->({id:21}) MERGE (n4{id:22})-[r3 :T1{id:23}]-(n5{id:24}) RETURN (697219122 >= reduce(a=1,b IN [((-529639444/1348160485)/(-363400160+2138613362))]|a)) AS a1, 1 AS a2;
FOREACH ( a0 IN [ ( n0 ) - [ r0 ] - ( n1 ) | CASE WHEN NULL THEN CASE WHEN TRUE THEN n1 END END ] | CREATE ( { id : 11 } ) CREATE ( { id : 12 } ) SET (NULL).NULL=1 MERGE ( n2 { id : 13 } ) < - [ r1 : T1 { id : 14 } ] - ( { id : 15 } ) CREATE ( { id : CASE WHEN FALSE THEN NULL ELSE 16 END } ) < - [ r2 : T1 { id : 17 } ] - ( n3 { id : 18 } ) ) CREATE ( { id : 19 } ) - [ : T1 { id : reduce(a=20 ,b IN []|a) } ] - > ( { id : 21 } ) MERGE ( n4 { id : CASE WHEN TRUE THEN 22 END } ) - [ r3 : T1 { id : 23 } ] - ( n5 { id : reduce(a=24 ,b IN []|a) } ) RETURN ( 697219122 >= reduce ( a = 1 , b IN reduce(a=[ ( ( -529639444 / 1348160485 ) / ( -363400160 + 2138613362 ) ) ] ,b IN []|a) | reduce(a=a ,b IN []|a) ) ) AS a1 , 1 AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * CREATE ({k13:(NULL STARTS WITH NULL), id:25}), (n0{k14:true, id:26}) MERGE (n1 :L2{k19:false, id:27}) RETURN (n1.k15) AS a0} UNWIND [(NULL < NULL), ('v' = 'V')] AS a1 MERGE ( :L3{k18:'tdlSM02', id:28}) RETURN a1 AS a2;
CALL { WITH * CREATE ( { k13 : ( NULL STARTS WITH NULL ) , id : CASE WHEN FALSE THEN NULL ELSE 25 END } ) CREATE ( n0 { k14 : true , id : 26 } ) WITH * MERGE ( n1 : L2 { k19 : false , id : 27 } ) RETURN ( n1 . k15 ) AS a0 } CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND CASE WHEN FALSE THEN NULL ELSE ([]+[ ( CASE WHEN TRUE THEN NULL < NULL END ) , CASE WHEN FALSE THEN NULL ELSE ( 'v' = 'V' ) END ] )END AS a1 UNWIND [1] as l0 MERGE ( : L3 { k18 : CASE WHEN TRUE THEN 'tdlSM02' END , id : 28 } ) WITH * UNWIND [1] as l1 RETURN a1 AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
UNWIND [substring(CASE WHEN true THEN 's' END, abs((1618748173+-827521575)), abs(-1003655575)), reduce(a=NULL,b IN ['l']|a)] AS a0 OPTIONAL MATCH (n0) DETACH DELETE n0  RETURN 1 AS a1 ORDER BY NULL;
UNWIND [ CASE WHEN FALSE THEN NULL ELSE substring ( CASE WHEN FALSE THEN NULL ELSE CASE WHEN true THEN 's' END END , abs ( ( 1618748173 + -827521575 ) ) , abs ( -1003655575 ) ) END , reduce ( a = NULL , b IN [ 'l' ] | a ) ] AS a0 OPTIONAL MATCH ( n0 ) WITH * DETACH DELETE reduce(a=n0 ,b IN []|a) RETURN reduce(a=1 ,b IN []|a) AS a1 ORDER BY NULL ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CREATE ({id:29})-[ :T2{id:30}]->(n0{id:31})-[ :T1{id:32}]->(n1{id:33}) CREATE ({id:34})<-[ :T1{k37:reverse(NULL), id:35}]-({id:36})-[r2 :T2{id:37}]->({id:38}), (n5{id:39}) CREATE (n6{id:40})<-[r3 :T1{id:41}]-(n7{id:42}), ({id:43}) RETURN 1 AS a0;
CREATE ( { id : 29 } ) - [ : T2 { id : 30 } ] - > ( n0 { id : 31 } ) - [ : T1 { id : 32 } ] - > ( n1 { id : reduce(a=33 ,b IN []|a) } ) WITH * CREATE ( { id : 34 } ) < - [ : T1 { k37 : reverse ( NULL ) , id : 35 } ] - ( { id : 36 } ) - [ r2 : T2 { id : 37 } ] - > ( { id : 38 } ) CREATE ( n5 { id : 39 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE (n6{ id : 40 } )CREATE (n6)< - [ r3 : T1 { id : 41 } ] - ( n7 { id : CASE WHEN TRUE THEN 42 END } ) CREATE ( { id : 43 } ) RETURN 1 AS a0 ORDER BY 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
WITH * WHERE ((('c'+('Xx'+('nHwtU'+'NuP0lNU')))+reverse(NULL)) STARTS WITH 'K') MATCH ()-[r0 :T2{k46:NULL}]-(n0)-[r1]-(n1), () MERGE ({id:44}) RETURN 1 AS a0, 1 AS a1;
WITH * WHERE CASE WHEN TRUE THEN ( ( CASE WHEN FALSE THEN NULL ELSE ( 'c' + ( 'Xx' + ( 'nHwtU' + 'NuP0lNU' ) ) ) + reverse ( NULL ) END ) STARTS WITH 'K' ) END REMOVE (NULL).k WITH * MATCH ( ) - [ r0 : T2 { k46 : NULL } ] - ( n0 ) - [ r1 ] - ( n1 ) ,( ) WHERE TRUE DELETE (NULL) MERGE ( { id : 44 } ) REMOVE (NULL).TRUE RETURN 1 AS a0 , 1 AS a1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
FOREACH(a0 IN NULL|CREATE (n0{id:45})-[r0 :T2{id:46}]->(n1{id:47})<-[r1 :T1{id:48}]-(n2{id:49}) MERGE (n3{id:50}) MERGE p0=({id:51})<-[r2 :T1{k40:'Rv', id:52}]-(n4{id:53})) MERGE (n5{id:54})-[ :T1{id:55}]-(n6{id:56}) MERGE (n7{id:57})<-[r3 :T1{k37:'9', id:58}]-(n8{id:59}) RETURN 1 AS a1, 1 AS a2;
FOREACH ( a0 IN NULL | CREATE ( n0 { id : 45 } ) - [ r0 : T2 { id : 46 } ] - > ( n1 { id : CASE WHEN FALSE THEN NULL ELSE 47 END } ) < - [ r1 : T1 { id : 48 } ] - ( n2 { id : 49 } ) DELETE NULL MERGE pp0=( n3 { id : 50 } ) MERGE p0 = ( { id : 51 } ) < - [ r2 : T1 { k40 : 'Rv' , id : reduce(a=52 ,b IN []|a) } ] - ( n4 { id : 53 } ) ) MERGE ( n5 { id : 54 } ) - [ : T1 { id : 55 } ] - ( n6 { id : 56 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n7 { id : CASE WHEN TRUE THEN 57 END } ) < - [ r3 : T1 { k37 : '9' , id : 58 } ] - ( n8 { id : CASE WHEN TRUE THEN 59 END } ) WITH * UNWIND [NULL] as l0 RETURN 1 AS a1 , CASE WHEN TRUE THEN 1 END AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * CREATE ({id:60})<-[ :T1{id:61}]-(n0{id:62}) WITH NULL AS a0 LIMIT 0 RETURN 1 AS a1, 1 AS a2 LIMIT 0} OPTIONAL MATCH (n1), (n2)<-[r0 :T2{k47:a1}]-() SET n2.k='j' RETURN 1 AS a3;
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) CREATE ( { id : 60 } ) < - [ : T1 { id : 61 } ] - ( n0 { id : 62 } ) WITH NULL AS a0 LIMIT 0 SET (NULL).TRUE=1 RETURN 1 AS a1 , reduce(a=1 ,b IN []|a) AS a2 SKIP 1 LIMIT 0 } SET (NULL).NULL=1 WITH * OPTIONAL MATCH ( n1 ) ,(n2)-[*0..0]-( n2 ) < - [ r0 : T2 { k47 : a1 } ] - ( ) WITH * SET n2 . k = 'j' REMOVE (NULL).TRUE RETURN 1 AS a3 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
FOREACH(a0 IN NULL|MERGE (n0 :L3 :L2{k15:false, id:63}) MERGE ( :L3{k12:'0', id:64}) MERGE ( :L3 :L2{k19:true, id:65})) MERGE (n1{id:66}) DETACH DELETE n1  RETURN 1 AS a1 ORDER BY CASE WHEN true THEN NULL END, a1 DESC LIMIT 0;
FOREACH ( a0 IN NULL | MERGE ( n0 : L3 : L2 { k15 : false , id : 63 } ) DELETE NULL MERGE ( : L3 { k12 : '0' , id : 64 } ) MERGE ( : L3 : L2 { k19 : true , id : 65 } ) ) MERGE ( n1 { id : 66 } ) DETACH DELETE CASE WHEN FALSE THEN NULL ELSE n1 END WITH * RETURN 1 AS a1 ORDER BY CASE WHEN true THEN NULL END, a1 DESC LIMIT 0 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
FOREACH(a0 IN [NULL, 'yhepbigW']|CREATE (n0{id:67}), (n1{id:68})<-[ :T2{k44:('kjab' < 'Ics'), id:69}]-(n2{id:70}) MERGE p0=({id:71}) CREATE (n3{id:72})-[r0 :T2{id:73}]->(n4{id:74})) CREATE ({id:75})-[ :T1{k40:'vfe', id:76}]->(n5{id:77})<-[ :T2{id:78}]-({id:79}), (n6{id:80}) MERGE (n7{id:81})-[r1 :T1{id:82}]->({id:83})-[r2 :T1{k39:'h', id:84}]-(n8{id:85}) RETURN r1 AS a1, r2 AS a2 ORDER BY (r2.k39), a2 DESC;
FOREACH ( a0 IN CASE WHEN FALSE THEN NULL ELSE ([]+[ reduce(a=NULL ,b IN []|a) , (''+'yhepbigW' )] )END | CREATE ( n0 { id : 67 } ) CREATE ( n1 { id : CASE WHEN TRUE THEN 68 END } ) < - [ : T2 { k44 : ( CASE WHEN FALSE THEN NULL ELSE (''+'kjab' )< 'Ics' END ) , id : 69 } ] - ( n2 { id : 70 } ) MERGE p0 = ( { id : 71 } ) DETACH DELETE NULL CREATE ( n3 { id : 72 } ) - [ r0 : T2 { id : 73 } ] - > ( n4 { id : reduce(a=74 ,b IN []|a) } ) ) WITH * UNWIND [NULL] as l0 CREATE ( { id : 75 } ) - [ : T1 { k40 : reduce(a='vfe' ,b IN []|a) , id : reduce(a=76 ,b IN []|a) } ] - > ( n5 { id : 77 } ) < - [ : T2 { id : 78 } ] - ( { id : 79 } ) CREATE ( n6 { id : 80 } ) WITH * UNWIND [1] as l1 MERGE ( n7 { id : reduce(a=81 ,b IN []|a) } ) - [ r1 : T1 { id : 82 } ] - > ( { id : 83 } ) - [ r2 : T1 { k39 : reduce(a='h' ,b IN []|a) , id : CASE WHEN FALSE THEN NULL ELSE 84 END } ] - ( n8 { id : 85 } ) RETURN reduce(a=r1 ,b IN []|a) AS a1 , r2 AS a2 ORDER BY (r2.k39), a2 DESC SKIP 1 ;
