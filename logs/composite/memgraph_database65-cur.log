-- Time: 2024/07/05 16:32:46
-- Database: memgraph_database65
-- Database version: composite
-- seed value: 1720168297040
CREATE (n0 :L1:L2{k11 : -970544520, id : 0, k6 : true, k10 : false, k7 : 'lIF', k13 : 1208561089, k8 : false, k12 : false, k9 : true, k15 : false, k14 : false});
CREATE (n0 :L3{k17 : 2130157037, k16 : -1604847518, k19 : false, k18 : true, k20 : 'gxqdLqb6', k22 : 532506580, id : 1, k21 : -1479591726});
CREATE (n0 :L0{k0 : 1684230399, k1 : '9xVJA', k2 : 1433245505, k4 : false, k5 : 'x6', id : 2});
CREATE (n0 {id : 3});
MATCH (n0 {id : 3}), (n1 {id : 3}) MERGE(n0)-[r :T3{k62 : '2H', k64 : 'u', k66 : true, id : 4, k65 : 'owIjP', k67 : 'D2F'}]->(n1);
MATCH (n0 {id : 1}), (n1 {id : 1}) MERGE(n0)-[r :T3{k62 : 'YSwB', k64 : '3', k66 : true, id : 5, k65 : 'Xe', k67 : '2'}]->(n1);
MATCH (n0 {id : 2}), (n1 {id : 3}) MERGE(n0)-[r :T4{k71 : 1386025781, k70 : 349040967, k73 : 463701967, k72 : 's', k74 : 'y', id : 6, k68 : 'l', k69 : false}]->(n1);
UNWIND NULL AS a0 OPTIONAL MATCH p0=( :L3)-[r0]-(n0), ()-[*..2]->() SET n0.k=('bop' CONTAINS ('zic7a0f'+(CASE WHEN false THEN 'P' END+'7'))) RETURN 1 AS a1 LIMIT 1;
UNWIND CASE WHEN TRUE THEN NULL END AS a0 OPTIONAL MATCH p0 = ( : L3 ) - [ r0 ] - ( n0 ) ,( ) - [ * .. 2 ] - > ( ) OPTIONAL MATCH ()-[:TYPE]-() SET n0 . k = ( 'bop' CONTAINS ( 'zic7a0f' + ( reduce(a=CASE WHEN false THEN 'P' END + '7' ,b IN []|a) ) ) ) RETURN 1 AS a1 LIMIT reduce(a=1 ,b IN []|a) ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MERGE ({k4:true, id:7})-[r0 :T4{id:8}]->({id:9})-[r1 :T3{id:10}]->({id:11}) DETACH DELETE r0  MERGE p0=(n0 :L0{id:12})-[r2 :T4{k69:false, id:13}]->({id:14}) RETURN NULL AS a0, p0 AS a1;
MERGE ( { k4 : reduce(a=true ,b IN []|a) , id : CASE WHEN TRUE THEN 7 END } ) - [ r0 : T4 { id : 8 } ] - > ( { id : 9 } ) - [ r1 : T3 { id : CASE WHEN FALSE THEN NULL ELSE 10 END } ] - > ( { id : 11 } ) WITH * UNWIND [NULL] as l0 DETACH DELETE CASE WHEN FALSE THEN NULL ELSE r0 END WITH * UNWIND [1] as l1 MERGE p0 = ( n0 : L0 { id : 12 } ) - [ r2 : T4 { k69 : false , id : 13 } ] - > ( { id : 14 } ) DETACH DELETE NULL RETURN NULL AS a0 , p0 AS a1 SKIP 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MERGE ( :L0{k5:'2', id:15})-[r0 :T4{k68:'xI', id:16}]-(n0{id:17})-[r1 :T3{id:18}]-({id:19}) CREATE ({id:20})<-[ :T3{id:21}]-(n1{id:22}), ({id:23}) CREATE ({id:24})<-[ :T3{k63:(r1.k63), id:25}]-(n2{id:26}) RETURN 1 AS a0, 1 AS a1;
MERGE ( : L0 { k5 : '2' , id : 15 } ) - [ r0 : T4 { k68 : (''+'xI' ), id : 16 } ] - ( n0 { id : 17 } ) - [ r1 : T3 { id : 18 } ] - ( { id : 19 } ) CREATE ( { id : 20 } ) < - [ : T3 { id : CASE WHEN TRUE THEN 21 END } ] - ( n1 { id : reduce(a=22 ,b IN []|a) } ) CREATE ( { id : CASE WHEN FALSE THEN NULL ELSE 23 END } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { id : 24 } ) < - [ : T3 { k63 : ( r1 . k63 ) , id : 25 } ] - ( n2 { id : 26 } ) WITH * UNWIND [NULL] as l0 RETURN reduce(a=1 ,b IN []|a) AS a0 , 1 AS a1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH ( :L0)-[*0..0]-()-[]->(n0), ()-[]->(n1) WHERE NULL DETACH DELETE n0  MERGE p0=({id:27})-[ :T3{k66:false, id:28}]-({id:29})-[ :T4{k68:'b', id:30}]-( :L0{id:31}) RETURN reduce(a=n1,b IN [startNode(relationships(NULL)[abs(-1857842883)])]|a) AS a1, 1 AS a2;
MATCH ( : L0 ) - [ * 0 .. 0 ] - ( ) - [ ] - > ( n0 ) ,( ) - [ ] - > ( n1 ) WHERE NULL OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE reduce(a=n0 ,b IN []|a) WITH * MERGE p0 = ( { id : 27 } ) - [ : T3 { k66 : CASE WHEN FALSE THEN NULL ELSE false END , id : 28 } ] - ( { id : 29 } ) - [ : T4 { k68 : 'b' , id : 30 } ] - ( : L0 { id : CASE WHEN FALSE THEN NULL ELSE 31 END } ) RETURN DISTINCT reduce ( a = reduce(a=n1 ,b IN []|a) , b IN CASE WHEN FALSE THEN NULL ELSE ([]+[ startNode ( relationships ( NULL ) [ abs ( -1857842883 ) ] ) ] )END | a ) AS a1 , 1 AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CREATE ({id:32})<-[r0 :T4{k70:NULL, id:33}]-({id:34}), (n0 :L3{id:35}) MERGE (n1{k18:false, id:36})-[r1 :T4{id:37}]-( :L3{id:38}) SET n1.k=NULL RETURN 1 AS a0 UNION CALL{WITH * UNWIND [true] AS a1 MERGE ({id:39})-[ :T3{id:40}]-(n3{id:41}) RETURN n3 AS a2} CREATE ({id:42})-[r0 :T3{id:43}]->(n4{id:44})<-[r1 :T4{id:45}]-(n5{k3:NULL, id:46}), ({id:47})-[ :T3{id:48}]->(n6{id:49})<-[r2 :T4{id:50}]-(n7{id:51}) DETACH DELETE a2,a2  RETURN 1 AS a0;
CREATE (m0{ id : CASE WHEN TRUE THEN 32 END } )CREATE (m0)< - [ r0 : T4 { k70 : NULL , id : 33 } ] - ( { id : 34 } ) CREATE ( n0 : L3 { id : 35 } ) MERGE ( n1 { k18 : false , id : 36 } ) - [ r1 : T4 { id : 37 } ] - ( : L3 { id : CASE WHEN TRUE THEN 38 END } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() SET n1 . k = NULL WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 UNION CALL { WITH * WITH * UNWIND CASE WHEN FALSE THEN NULL ELSE [ reduce(a=true ,b IN []|a) ] END AS a1 REMOVE (NULL).k MERGE ( { id : 39 } ) - [ : T3 { id : CASE WHEN TRUE THEN 40 END } ] - ( n3 { id : 41 } ) RETURN n3 AS a2 } OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { id : 42 } ) - [ r0 : T3 { id : 43 } ] - > ( n4 { id : reduce(a=44 ,b IN []|a) } ) < - [ r1 : T4 { id : 45 } ] - ( n5 { k3 : CASE WHEN FALSE THEN NULL ELSE NULL END , id : 46 } ) CREATE ( { id : 47 } ) - [ : T3 { id : 48 } ] - > ( n6 { id : 49 } ) < - [ r2 : T4 { id : 50 } ] - ( n7 { id : 51 } ) WITH * DETACH DELETE a2 , a2 CREATE (c0{id:-1}) DELETE (c0) RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a0 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * MERGE (n0{id:52})-[r0 :T3{id:53}]-(n1{id:54}) SET n0.k=(r0.k67) RETURN n1 AS a1, '9' AS a2} UNWIND NULL AS a3 SET a1.k='6qoBvDX0K' RETURN a1 AS a4, 1 AS a5;
CALL { WITH * UNWIND [1] as l0 MERGE ( n0 { id : 52 } ) - [ r0 : T3 { id : 53 } ] - ( n1 { id : CASE WHEN TRUE THEN 54 END } ) WITH * UNWIND [NULL] as l1 SET n0 . k = ( CASE WHEN TRUE THEN r0 . k67 END ) RETURN CASE WHEN FALSE THEN NULL ELSE n1 END AS a1 , '9' AS a2 } CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND NULL AS a3 CREATE (c1{id:-1}) DELETE (c1) SET a1 . k = ('6qoBvDX0K' +'') CREATE (c2{id:-1}) DELETE (c2) RETURN a1 AS a4 , reduce(a=1 ,b IN []|a) AS a5 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * OPTIONAL MATCH (n0)-[*..2]->(n1), ( :L0) CREATE (n2 :L0{id:55})-[r0 :T4{id:56}]->(n3{id:57})-[r1 :T3{id:58}]->({id:59}) RETURN *} UNWIND NULL AS a1 CREATE p0=( :L0{id:60})-[ :T4{id:61}]->({id:62}), p1=({k1:reverse(NULL), id:63})-[r2 :T4{k73:149730194, id:64}]->({id:65}) RETURN 1 AS a2;
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) WITH * OPTIONAL MATCH ( n0 ) - [ * .. 2 ] - > ( n1 ) ,( : L0 ) OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n2 : L0 { id : 55 } ) - [ r0 : T4 { id : reduce(a=56 ,b IN []|a) } ] - > ( n3 { id : 57 } ) - [ r1 : T3 { id : CASE WHEN TRUE THEN 58 END } ] - > ( { id : 59 } ) SET (NULL).FALSE=1 RETURN * } WITH * UNWIND reduce(a=NULL ,b IN []|a) AS a1 CREATE p0 = ( : L0 { id : 60 } ) - [ : T4 { id : CASE WHEN TRUE THEN 61 END } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 62 END } ) CREATE p1 = ( { k1 : reverse ( NULL ) , id : 63 } ) - [ r2 : T4 { k73 : CASE WHEN TRUE THEN 149730194 END , id : 64 } ] - > ( { id : 65 } ) RETURN 1 AS a2 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH p0=(n0), (n0) DETACH DELETE n0  CREATE (n1{id:66}) RETURN DISTINCT 1 AS a3;
MATCH p0 = ( n0 ) ,( n0 ) OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE n0 WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n1 { id : 66 } ) RETURN DISTINCT 1 AS a3 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CREATE (n0{id:67}), p0=( :L2{id:68}) MERGE p1=( :L2{k15:false, id:69}) CREATE ({id:70}), ( :L1 :L2{id:71}) RETURN *, 1 AS a0;
CREATE ( n0 { id : 67 } ) CREATE p0 = ( : L2 { id : CASE WHEN TRUE THEN 68 END } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE p1 = ( : L2 { k15 : false , id : 69 } ) WITH * CREATE ( { id : 70 } ) CREATE ( : L1 : L2 { id : 71 } ) REMOVE (NULL).k RETURN * , 1 AS a0 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MERGE (n0 :L2{id:72}) SET n0.k=NULL MERGE (n1{id:73})<-[r0 :T4{id:74}]-( :L3{id:75}) RETURN n1 AS a0;
MERGE ( n0 : L2 { id : 72 } ) CREATE (c0{id:-1}) DELETE (c0) SET n0 . k = NULL WITH * UNWIND [1] as l0 MERGE ( n1 { id : reduce(a=73 ,b IN []|a) } ) < - [ r0 : T4 { id : 74 } ] - ( : L3 { id : 75 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN n1 AS a0 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
CALL{WITH * FOREACH(a0 IN NULL|MERGE p0=(n0{id:76}) CREATE ( :L2{id:77}) MERGE (n1 :L1{k8:true, id:78})) MERGE ({id:79}) RETURN 1 AS a1, 1 AS a2} MATCH (n2) DETACH DELETE n2  RETURN *, 1 AS a3;
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) FOREACH ( a0 IN NULL | MERGE p0 = ( n0 { id : 76 } ) CREATE ( : L2 { id : 77 } ) MERGE pp0=( n1 : L1 { k8 : reduce(a=true ,b IN []|a) , id : 78 } ) ) SET (NULL).NULL=1 MERGE ( { id : 79 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a1 , 1 AS a2 } OPTIONAL MATCH ()-[:TYPE]-() MATCH (n2) WITH * DETACH DELETE n2 DELETE NULL RETURN DISTINCT * , CASE WHEN FALSE THEN NULL ELSE 1 END AS a3 SKIP 1 ;
MATCH (a) RETURN a;
MATCH (a) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
MATCH (b)-[a]->(c) RETURN a;
OPTIONAL MATCH ( :L1) OPTIONAL MATCH () MERGE ({id:80}) RETURN 1 AS a0;
OPTIONAL MATCH ( : L1 ) REMOVE (NULL).NULL WITH * OPTIONAL MATCH ( ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( { id : 80 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 ;
