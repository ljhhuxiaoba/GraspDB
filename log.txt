1、 EXCEPTIONS in:memgraph_database0
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[]->(n1 :L4)|(n1.k25)]|MERGE (n2{id:60}) MERGE (n3{k27:302316186, id:61})-[r0 :T4{id:62}]->(n4{id:63})-[r1 :T4{k63:false, id:64}]-( :L4{k24:-47495107, id:65}) MERGE ( :L2 :L0{id:66})) MERGE (n5 :L4{k28:1113972693, id:67}) CREATE (n6{id:68})-[ :T6{id:69}]->({k13:(n5.k26), id:70})-[r2 :T0{id:71}]->({id:72}), ({k24:round(round((n5.k25))), id:73}) RETURN 1 AS a1
FOREACH ( a0 IN [ ( n0 ) - [ ] - > ( n1 : L4 ) | ( n1 . k25 ) ] | MERGE ( n2 { id : CASE WHEN FALSE THEN NULL ELSE 60 END } ) MERGE ( n3 { k27 : 302316186 , id : 61 } ) - [ r0 : T4 { id : 62 } ] - > ( n4 { id : 63 } ) - [ r1 : T4 { k63 : false , id : 64 } ] - ( : L4 { k24 : -47495107 , id : 65 } ) MERGE ( : L2 : L0 { id : 66 } ) ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( n5 : L4 { k28 : 1113972693 , id : 67 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n6 { id : 68 } ) - [ : T6 { id : CASE WHEN FALSE THEN NULL ELSE 69 END } ] - > ( { k13 : ( n5 . k26 ) , id : CASE WHEN FALSE THEN NULL ELSE 70 END } ) - [ r2 : T0 { id : 71 } ] - > ( { id : 72 } ) CREATE ( { k24 : round ( round ( ( n5 . k25 ) ) ) , id : 73 } ) CREATE (c1{id:-1}) DELETE (c1) RETURN CASE WHEN TRUE THEN 1 END AS a1 
***********************
2、 EXCEPTIONS in:memgraph_database0
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * MATCH (), (n0)<-[ :T6{k82:(880145080 >= -539628197)}]-() MERGE (n1 :L4{id:108}) RETURN n0 AS a0} UNWIND [NULL] AS a1 DETACH DELETE a0,a0  RETURN *
CALL { WITH * UNWIND [1] as l0 MATCH ( ) ,(n0)-[*0..0]-( n0 ) < - [ : T6 { k82 : ( 880145080 >= -539628197 ) } ] - ( ) WITH * MERGE ( n1 : L4 { id : 108 } ) RETURN n0 AS a0 LIMIT 1 } UNWIND [ NULL ] AS a1 WITH * DETACH DELETE a0 , reduce(a=a0 ,b IN []|a) RETURN * SKIP 1 LIMIT 1 
***********************
3、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (anon1.k28)!
FOREACH(a0 IN [[endNode(NULL), CASE WHEN false THEN NULL END], NULL]|CREATE ({k28:NULL, id:174})-[ :T4{k67:-1453455931, id:175}]->(n0 :L4{k23:-1674601463, id:176})-[ :T4{id:177}]->(n1 :L4{id:178}), (n2 :L4{id:179})-[ :T6{id:180}]->(n3{id:181}) MERGE ({k23:418604752, id:182})-[r0 :T4{id:183}]->({id:184}) CREATE ({id:185}), ({k24:NULL, id:186})) MERGE ({k29:'jGOT3', id:187})-[r1 :T6{k81:true, id:188}]-( :L0{id:189})-[r2 :T0{k41:'XUGD', id:190}]->({id:191}) DETACH DELETE r2,r1  RETURN 1 AS a1
FOREACH ( a0 IN reduce(a=[ [ reduce(a=endNode ( NULL ) ,b IN []|a) , CASE WHEN false THEN NULL END ] , NULL ] ,b IN []|a) | CREATE ( { k28 : CASE WHEN TRUE THEN NULL END , id : 174 } ) - [ : T4 { k67 : -1453455931 , id : 175 } ] - > ( n0 : L4 { k23 : CASE WHEN TRUE THEN -1674601463 END , id : reduce(a=176 ,b IN []|a) } ) - [ : T4 { id : 177 } ] - > ( n1 : L4 { id : 178 } ) CREATE ( n2 : L4 { id : 179 } ) - [ : T6 { id : 180 } ] - > ( n3 { id : 181 } ) MERGE ( { k23 : 418604752 , id : CASE WHEN TRUE THEN 182 END } ) - [ r0 : T4 { id : 183 } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 184 END } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( { id : 185 } ) CREATE ( { k24 : CASE WHEN TRUE THEN NULL END , id : 186 } ) SET (NULL).NULL=1 ) MERGE ( { k29 : reduce(a='jGOT3' ,b IN []|a) , id : 187 } ) - [ r1 : T6 { k81 : reduce(a=true ,b IN []|a) , id : 188 } ] - ( : L0 { id : 189 } ) - [ r2 : T0 { k41 : 'XUGD' , id : 190 } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 191 END } ) CREATE (c1{id:-1}) DELETE (c1) DETACH DELETE r2 , r1 CREATE (c2{id:-1}) DELETE (c2) RETURN 1 AS a1 
***********************
4、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (n1.k3)!
CREATE p0=(n0{id:192})<-[r0 :T0{id:193}]-(n1{k3:NULL, id:194}) MERGE (n2{id:195})<-[r1 :T0{id:196}]-(n3{id:197}) MERGE ({k29:'XsxPA4', id:198}) RETURN n3 AS a0, CASE WHEN (r1.k36) THEN n3 END AS a1
CREATE p0 = ( n0 { id : 192 } ) < - [ r0 : T0 { id : 193 } ] - ( n1 { k3 : NULL , id : 194 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n2 { id : 195 } ) < - [ r1 : T0 { id : 196 } ] - ( n3 { id : 197 } ) MERGE ( { k29 : 'XsxPA4' , id : 198 } ) RETURN n3 AS a0 , CASE WHEN ( r1 . k36 ) THEN CASE WHEN FALSE THEN NULL ELSE n3 END END AS a1 LIMIT 1 
***********************
5、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (n1.k33)!
CREATE p0=(n0 :L0{id:220}), (n1{k33:NULL, id:221})<-[ :T0{k37:NULL, id:222}]-( :L2{k15:NULL, id:223})<-[r0 :T6{k80:(((('Ru' ENDS WITH 'l') OR (('S' <= '4') OR (-1446498788 >= -153176425))) OR (true AND NULL)) AND NULL), id:224}]-(n2 :L4{k29:'2VS', id:225}) MERGE (n3{k13:true, id:226}) MERGE ({id:227}) RETURN 1 AS a0
CREATE p0 = ( n0 : L0 { id : 220 } ) CREATE ( n1 { k33 : NULL , id : 221 } ) < - [ : T0 { k37 : NULL , id : 222 } ] - ( : L2 { k15 : NULL , id : 223 } ) < - [ r0 : T6 { k80 : ( ( reduce(a=( CASE WHEN TRUE THEN ( 'Ru' ENDS WITH 'l' ) OR ( ( 'S' <= '4' ) OR ( -1446498788 >= -153176425 ) ) END ) OR ( true AND NULL ) ,b IN []|a) ) AND NULL ) , id : CASE WHEN TRUE THEN 224 END } ] - ( n2 : L4 { k29 : (''+'2VS' ), id : CASE WHEN TRUE THEN 225 END } ) MERGE ( n3 { k13 : true , id : 226 } ) MERGE ( { id : reduce(a=227 ,b IN []|a) } ) CREATE (c0{id:-1}) DELETE (c0) RETURN 1 AS a0 
***********************
6、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (r0.k82)!
CREATE p0=( :L4{id:234}), (n0{id:235})-[r0 :T6{k82:NULL, id:236}]->( :L0{id:237}) CREATE ({id:238})-[r1 :T4{id:239}]->(n1{id:240}) MERGE ({k28:832797096, id:241})-[r2 :T6{id:242}]->({k15:false, id:243})-[r3 :T0{id:244}]->({k30:-1827311664, id:245}) RETURN collect(nodes(NULL)[abs(629299779)])[abs(2116155571)] AS a0
CREATE p0 = ( : L4 { id : 234 } ) CREATE ( :L0{id:237})<-[ r0 : T6 { k82 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 236 END } ] -( n0 { id : 235 } ) CREATE ( { id : 238 } ) - [ r1 : T4 { id : 239 } ] - > ( n1 { id : 240 } ) DETACH DELETE (NULL) MERGE ( { k28 : CASE WHEN FALSE THEN NULL ELSE 832797096 END , id : 241 } ) - [ r2 : T6 { id : 242 } ] - > ( { k15 : false , id : 243 } ) - [ r3 : T0 { id : 244 } ] - > ( { k30 : -1827311664 , id : 245 } ) SET (NULL).FALSE=1 RETURN collect ( nodes ( NULL ) [ abs ( 629299779 ) ] ) [ abs ( CASE WHEN TRUE THEN 2116155571 END ) ] AS a0 
***********************
7、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (n0.k14)!
UNWIND [relationships(NULL)[abs(NULL)]] AS a0 CREATE ({id:299})-[r0 :T6{id:300}]->(n0{k14:NULL, id:301})-[ :T0{id:302}]->(n1 :L5{id:303}), ({k24:NULL, id:304}) MERGE ({id:305})-[r1 :T4{k62:'f', id:306}]->(n2{id:307}) RETURN n2 AS a1, 1 AS a2
UNWIND reduce(a=[ relationships ( NULL ) [ abs ( NULL ) ] ] ,b IN []|a) AS a0 DETACH DELETE NULL CREATE ( { id : 299 } ) - [ r0 : T6 { id : 300 } ] - > ( n0 { k14 : NULL , id : reduce(a=301 ,b IN []|a) } ) - [ : T0 { id : 302 } ] - > ( n1 : L5 { id : 303 } ) CREATE ( { k24 : NULL , id : 304 } ) MERGE ( { id : 305 } ) - [ r1 : T4 { k62 : reduce(a='f' ,b IN []|a) , id : 306 } ] - > ( n2 { id : 307 } ) WITH * UNWIND [1] as l0 RETURN n2 AS a1 , 1 AS a2 
***********************
8、 EXCEPTIONS in:memgraph_database0
Can't have null literal properties inside merge (anon2.k27)!
CREATE p0=(n3{id:317})-[ :T6{id:318}]->(n4{k14:'saI7', id:319}), ( :L4{k27:NULL, id:320})-[r2 :T6{id:321}]->({id:322}) MERGE ({id:323})-[ :T6{id:324}]->(n5{k16:reduce(a=true,b IN [(reverse('2EgF75pE') STARTS WITH 's'), true]|a), k4:596054406, id:325})-[r3 :T0{id:326}]-({id:327}) CREATE (n6{id:328}) RETURN (r3.k37) AS a6
CREATE p0 = ( n3 { id : reduce(a=317 ,b IN []|a) } ) - [ : T6 { id : 318 } ] - > ( n4 { k14 : (''+'saI7' ), id : 319 } ) CREATE ( : L4 { k27 : NULL , id : 320 } ) - [ r2 : T6 { id : 321 } ] - > ( { id : 322 } ) SET (NULL).NULL=1 MERGE ( { id : 323 } ) - [ : T6 { id : 324 } ] - > ( n5 { k16 : reduce ( a = true , b IN ([]+[ ( reverse ( '2EgF75pE' ) STARTS WITH 's' ) , true ] )| a ) , k4 : 596054406 , id : 325 } ) - [ r3 : T0 { id : CASE WHEN FALSE THEN NULL ELSE 326 END } ] - ( { id : 327 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n6 { id : 328 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN ( r3 . k37 ) AS a6 
***********************
9、 EXCEPTIONS in:memgraph_database0
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * WITH * WHERE (NULL <= NULL) MERGE ({id:374})-[r0 :T4{id:375}]-(n0{id:376})-[r1 :T6{id:377}]->({k16:false, id:378}) RETURN n0 AS a2 LIMIT 1} UNWIND NULL AS a3 DETACH DELETE a2,a2  RETURN 1 AS a4 LIMIT 0
CALL { WITH * WITH * WITH * WHERE ( NULL <= NULL ) UNWIND [NULL] as l0 MERGE ( { id : 374 } ) - [ r0 : T4 { id : 375 } ] - ( n0 { id : 376 } ) - [ r1 : T6 { id : 377 } ] - > ( { k16 : false , id : CASE WHEN FALSE THEN NULL ELSE 378 END } ) RETURN n0 AS a2 LIMIT 1 } CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND NULL AS a3 OPTIONAL MATCH ()-[:TYPE]-() FOREACH(f in [1]|DETACH DELETE a2 , a2 ) WITH * RETURN 1 AS a4 LIMIT 0 
***********************
10、 EXCEPTIONS in:memgraph_database5
Can't have null literal properties inside merge (n0.k22)!
CREATE ({id:35}) CREATE (n0 :L3{k22:NULL, id:36})<-[r0 :T4{id:37}]-({id:38}), p0=({id:39}) MERGE (n1{k15:'j', id:40}) RETURN n1 AS a0
CREATE ( { id : 35 } ) REMOVE (NULL).NULL CREATE ( n0 : L3 { k22 : NULL , id : 36 } ) < - [ r0 : T4 { id : reduce(a=37 ,b IN []|a) } ] - ( { id : 38 } ) CREATE p0 = ( { id : reduce(a=39 ,b IN []|a) } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n1 { k15 : 'j' , id : CASE WHEN TRUE THEN 40 END } ) DETACH DELETE (NULL) RETURN reduce(a=n1 ,b IN []|a) AS a0 SKIP 1 
***********************
11、 EXCEPTIONS in:memgraph_database5
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH (), (n4{k5:-2021618638}) SET n4.k=NULL RETURN *} OPTIONAL MATCH (n5)<-[r3]-(), (n4)-[r4 :T5{k60:NULL}]->()-[]-() DETACH DELETE n5,n4  RETURN 1 AS a0
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) WITH * OPTIONAL MATCH ( ) ,( n4 { k5 : -2021618638 } ) DELETE (NULL) SET n4 . k = NULL WITH * UNWIND [1] as l0 RETURN * } CREATE (c1{id:-1}) DELETE (c1) WITH * OPTIONAL MATCH ( n5 ) < - [ r3 ] - ( ) ,( n4 ) - [ r4 : T5 { k60 : NULL } ] - > ( ) - [ ] - ( ) DETACH DELETE n5 , n4 WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN CASE WHEN TRUE THEN 1 END AS a0 
***********************
12、 EXCEPTIONS in:memgraph_database5
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * MERGE p0=(n3{id:104}) DETACH DELETE p0,NULL  RETURN NULL AS a0, 1 AS a1} UNWIND [relationships(NULL)[abs(a1)], NULL] AS a2 MERGE (n4{id:105}) RETURN 1 AS a3 SKIP 0
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) MERGE p0 = ( n3 { id : 104 } ) WITH * UNWIND [1] as l0 FOREACH(f in nodes(p0)|DETACH DELETE f) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN NULL AS a0 , 1 AS a1 } UNWIND [ relationships ( NULL ) [ reduce(a=abs ( a1 ) ,b IN []|a) ] , NULL ] AS a2 OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n4 { id : 105 } ) RETURN CASE WHEN TRUE THEN 1 END AS a3 SKIP 0 
***********************
13、 EXCEPTIONS in:memgraph_database6
Can't have null literal properties inside merge (anon4.k42)!
CREATE ({k18:(reduce(a=reverse('B'),b IN [NULL]|a) STARTS WITH 'P'), id:13}), p0=(n0{id:14}) CREATE p1=( :L1 :L6{id:15}), ( :L6{k10:-2058924040, k42:NULL, id:16})<-[ :T0{id:17}]-(n1{id:18}) MERGE (n2 :L2{id:19})-[r0 :T3{k65:false, id:20}]->(n3{k16:1340589462, id:21})-[r1 :T4{id:22}]-(n4{id:23}) RETURN n4 AS a0, n3 AS a1
CREATE ( { k18 : ( reduce(a=reduce ( a = reverse ( 'B' ) , b IN [ NULL ] | a ) STARTS WITH 'P' ,b IN []|a) ) , id : 13 } ) CREATE p0 = ( n0 { id : 14 } ) WITH * UNWIND [NULL] as l0 CREATE p1 = ( : L1 : L6 { id : 15 } ) CREATE ( : L6 { k10 : reduce(a=-2058924040 ,b IN []|a) , k42 : NULL , id : 16 } ) < - [ : T0 { id : 17 } ] - ( n1 { id : 18 } ) REMOVE (NULL).TRUE MERGE ( n2 : L2 { id : CASE WHEN TRUE THEN 19 END } ) - [ r0 : T3 { k65 : false , id : CASE WHEN TRUE THEN 20 END } ] - > ( n3 { k16 : 1340589462 , id : 21 } ) - [ r1 : T4 { id : CASE WHEN FALSE THEN NULL ELSE 22 END } ] - ( n4 { id : 23 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN DISTINCT n4 AS a0 , n3 AS a1 
***********************
14、 EXCEPTIONS in:memgraph_database6
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[ :T4{k71:1908657125}]-(n1)|NULL]|MERGE (n4{k8:false, id:55})<-[ :T4{id:56}]-({id:57}) MERGE ({id:58})<-[ :T1{id:59}]-(n5{id:60}) MERGE (n6 :L2{id:61})-[r1 :T3{k66:round(1536975929), id:62}]->({id:63})) MERGE p0=( :L5{k38:1, id:64}) CREATE (n7{id:65}), ( :L1{id:66})<-[ :T4{k74:NULL, id:67}]-(n8{id:68}) RETURN DISTINCT 1 AS a1, NULL AS a2
FOREACH ( a0 IN [ ( n0 ) - [ : T4 { k71 : CASE WHEN FALSE THEN NULL ELSE 1908657125 END } ] - ( n1 ) | NULL ] | MERGE pp0=( n4 { k8 : false , id : 55 } ) < - [ : T4 { id : CASE WHEN TRUE THEN 56 END } ] - ( { id : 57 } ) MERGE ( { id : 58 } ) < - [ : T1 { id : reduce(a=59 ,b IN []|a) } ] - ( n5 { id : 60 } ) MERGE ( n6 : L2 { id : 61 } ) - [ r1 : T3 { k66 : round ( 1536975929 ) , id : 62 } ] - > ( { id : 63 } ) ) WITH * UNWIND [1] as l0 MERGE p0 = ( : L5 { k38 : 1 , id : 64 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n7 { id : 65 } ) CREATE ( : L1 { id : CASE WHEN TRUE THEN 66 END } ) < - [ : T4 { k74 : NULL , id : 67 } ] - ( n8 { id : 68 } ) RETURN DISTINCT 1 AS a1 , NULL AS a2 
***********************
15、 EXCEPTIONS in:memgraph_database6
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
CREATE ({id:69}) MERGE ( :L1 :L6{id:70})-[r0 :T4{id:71}]-(n0 :L2{id:72}) MERGE p0=( :L6{k10:789965028, id:73})-[ :T4{k72:'a8KBVM', id:74}]-( :L2{k16:279285762, id:75}) RETURN r0 AS a0 SKIP 1 UNION ALL UNWIND [NULL, [relationships(NULL)[abs(1848494657)]]] AS a0 UNWIND [(n0 :L5{k37:NULL})-[r0 :T0{k52:reduce(a=NULL,b IN [565421149]|a)}]-(n1)<-[r1]-(n2)|(r0.k47)] AS a1 MERGE ({k37:'vkmCDu', id:76}) RETURN 1 AS a0 SKIP 0
CREATE ( { id : 69 } ) DELETE (NULL) MERGE ( : L1 : L6 { id : 70 } ) - [ r0 : T4 { id : reduce(a=71 ,b IN []|a) } ] - ( n0 : L2 { id : 72 } ) MERGE p0 = ( : L6 { k10 : 789965028 , id : 73 } ) - [ : T4 { k72 : 'a8KBVM' , id : 74 } ] - ( : L2 { k16 : 279285762 , id : 75 } ) SET (NULL).TRUE=1 RETURN r0 AS a0 ORDER BY 1 SKIP 1 UNION ALL UNWIND [ NULL , [ CASE WHEN TRUE THEN relationships ( NULL ) [ abs ( 1848494657 ) ] END ] ] AS a0 CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND [ ( n0 : L5 { k37 : NULL } ) - [ r0 : T0 { k52 : reduce ( a = NULL , b IN [ reduce(a=565421149 ,b IN []|a) ] | a ) } ] - ( n1 ) < - [ r1 ] - ( n2 ) | ( r0 . k47 ) ] AS a1 MERGE ( { k37 : 'vkmCDu' , id : CASE WHEN FALSE THEN NULL ELSE 76 END } ) RETURN reduce(a=1 ,b IN []|a) AS a0 SKIP CASE WHEN TRUE THEN 0 END 
***********************
16、 EXCEPTIONS in:memgraph_database6
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
OPTIONAL MATCH ()-[r0]->({k34:reverse('kCJGDuZ')})-[]->(n0) UNWIND [[(n1)-[]-(n2{k7:NULL}) WHERE CASE WHEN false THEN false END|NULL]] AS a0 DETACH DELETE n0  RETURN 1 AS a1, 1 AS a2
OPTIONAL MATCH ( ) - [ r0 ] - > ( { k34 : CASE WHEN TRUE THEN reverse ( 'kCJGDuZ' ) END } ) - [ ] - > ( n0 ) CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND ([ [ ( n1 ) - [ ] - ( n2 { k7 : NULL } ) WHERE CASE WHEN false THEN false END | NULL ] ] +[]) AS a0 WITH * DETACH DELETE n0 WITH * UNWIND [1] as l0 RETURN 1 AS a1 , 1 AS a2 
***********************
17、 EXCEPTIONS in:memgraph_database6
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH (n0 :L2{k16:683052111}), ()-[r0 :T3{k68:'7'}]->(n0)-[r1]-(n0) WHERE (r0.k67) SET n0.k=(r0.k65) RETURN r1 AS a0} MATCH (n1{k18:true}), (n0)-[a0]->( :L5) CREATE p0=(n2{k10:NULL, id:158}), p1=(n3{k12:866262424, id:159})<-[ :T4{k72:NULL, id:160}]-(n4{k18:true, id:161}) RETURN 1 AS a1, n1 AS a2
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH ( n0 : L2 { k16 : reduce(a=683052111 ,b IN []|a) } ) ,( ) - [ r0 : T3 { k68 : '7' } ] - > ( n0 ) - [ r1 ] - ( n0 ) WHERE ( reduce(a=r0 . k67 ,b IN []|a) ) CREATE (c0{id:-1}) DELETE (c0) SET n0 . k = ( r0 . k65 ) RETURN r1 AS a0 } MATCH ( n1 { k18 : true } ) ,(n0)-[*0..0]-( n0 ) - [ a0 ] - > ( : L5 ) CREATE p0 = ( n2 { k10 : NULL , id : 158 } ) CREATE p1 = ( n3 { k12 : 866262424 , id : 159 } ) < - [ : T4 { k72 : reduce(a=NULL ,b IN []|a) , id : reduce(a=160 ,b IN []|a) } ] - ( n4 { k18 : true , id : 161 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN reduce(a=1 ,b IN []|a) AS a1 , n1 AS a2 
***********************
18、 EXCEPTIONS in:memgraph_database6
Can't have null literal properties inside merge (n0.k10)!
CREATE ({k17:1014737099, id:162})-[ :T0{id:163}]->({id:164})-[r0 :T4{k71:NULL, id:165}]->(n0{k10:NULL, id:166}) CREATE ( :L2{k14:NULL, id:167})-[ :T0{k52:NULL, id:168}]->({id:169}) MERGE (n1{k9:reverse(('W'+'icjDBrt')), id:170})<-[r1 :T4{id:171}]-({id:172}) RETURN [n1, n1] AS a0 SKIP 0
CREATE ( { k17 : 1014737099 , id : reduce(a=162 ,b IN []|a) } ) - [ : T0 { id : 163 } ] - > ( { id : 164 } ) - [ r0 : T4 { k71 : reduce(a=NULL ,b IN []|a) , id : 165 } ] - > ( n0 { k10 : NULL , id : 166 } ) CREATE ({id:169})<-[ : T0 { k52 : NULL , id : 168 } ] -( : L2 { k14 : reduce(a=NULL ,b IN []|a) , id : 167 } ) WITH * MERGE ( n1 { k9 : CASE WHEN TRUE THEN reverse ( CASE WHEN TRUE THEN ( 'W' + 'icjDBrt' ) END ) END , id : 170 } ) < - [ r1 : T4 { id : 171 } ] - ( { id : CASE WHEN FALSE THEN NULL ELSE 172 END } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN ([ n1 , n1 ] +[]) AS a0 SKIP 0 LIMIT 1 
***********************
19、 EXCEPTIONS in:memgraph_database7
Can't have null literal properties inside merge (anon2.k1)!
CREATE (n0{id:38}) CREATE ({k1:NULL, id:39}) MERGE p0=(n1 :L4{k29:true, id:40})-[r0 :T2{k51:'7g', id:41}]-({id:42})-[r1 :T1{id:43}]-(n2 :L5{id:44}) RETURN 1 AS a0
CREATE ( n0 { id : 38 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { k1 : CASE WHEN FALSE THEN NULL ELSE NULL END , id : 39 } ) WITH * MERGE p0 = ( n1 : L4 { k29 : true , id : 40 } ) - [ r0 : T2 { k51 : '7g' , id : 41 } ] - ( { id : 42 } ) - [ r1 : T1 { id : reduce(a=43 ,b IN []|a) } ] - ( n2 : L5 { id : reduce(a=44 ,b IN []|a) } ) SET (NULL).NULL=1 RETURN 1 AS a0 ORDER BY 1 DESC 
***********************
20、 EXCEPTIONS in:memgraph_database8
Can't have null literal properties inside merge (r0.k66)!
CREATE ({id:61})-[ :T6{id:62}]->(n0{id:63})-[r0 :T3{k66:NULL, id:64}]->(n1{id:65}) MERGE (n2{id:66})-[r1 :T3{id:67}]->(n3 :L0 :L3{id:68}) DETACH DELETE n2  RETURN 1 AS a0, n3 AS a1
CREATE ( { id : 61 } ) - [ : T6 { id : 62 } ] - > ( n0 { id : 63 } ) - [ r0 : T3 { k66 : NULL , id : 64 } ] - > ( n1 { id : CASE WHEN FALSE THEN NULL ELSE 65 END } ) WITH * MERGE ( n2 { id : 66 } ) - [ r1 : T3 { id : 67 } ] - > ( n3 : L0 : L3 { id : 68 } ) WITH * UNWIND [1] as l0 DETACH DELETE n2 WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 , n3 AS a1 
***********************
21、 EXCEPTIONS in:memgraph_database8
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH p1=(n1)-[]-()<-[r0]-() CREATE (n3{id:123})<-[r2 :T1{k51:CASE WHEN false THEN -805771931 END, id:124}]-(n4{k0:round(size([(n1)-[]-()|NULL])), k23:NULL, id:125})<-[r3 :T3{id:126}]-(n5{id:127}) RETURN DISTINCT n1 AS a3, 1 AS a4} MATCH p2=(n6) SET n6.k=round(a4) RETURN a3 AS a5, 1 AS a6
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) WITH * MATCH p1 = ( n1 ) - [ ] - ( ) < - [ r0 ] - ( ) CREATE (c1{id:-1}) DELETE (c1) CREATE ( n3 { id : 123 } ) < - [ r2 : T1 { k51 : CASE WHEN false THEN -805771931 END , id : 124 } ] - ( n4 { k0 : round ( size ( [ ( n1 ) - [ ] - ( ) | NULL ] ) ) , k23 : NULL , id : 125 } ) < - [ r3 : T3 { id : 126 } ] - ( n5 { id : 127 } ) CREATE (c2{id:-1}) DELETE (c2) RETURN DISTINCT n1 AS a3 , 1 AS a4 } MATCH p2 = ( n6 ) WITH * SET n6 . k = round ( a4 ) WITH * RETURN a3 AS a5 , 1 AS a6 
***********************
22、 EXCEPTIONS in:memgraph_database9
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE ({k3:'p', k17:'9', id:8})-[r0 :T5{k64:'EsiZKOxQH', id:9}]->({id:10}) MERGE ( :L2{k14:'l', id:11}) RETURN 1 AS a1} MATCH (n1), (n0)-[*..2]->( :L0{k3:reverse(NULL)}) SET n1.k=NULL RETURN DISTINCT 1 AS a2, a1 AS a3
CALL { WITH * MERGE ( { k3 : reduce(a='p' ,b IN []|a) , k17 : '9' , id : 8 } ) - [ r0 : T5 { k64 : (''+'EsiZKOxQH' ), id : 9 } ] - > ( { id : 10 } ) MERGE ( : L2 { k14 : 'l' , id : 11 } ) SET (NULL).FALSE=1 RETURN 1 AS a1 } CREATE (c0{id:-1}) DELETE (c0) WITH * MATCH ( n1 ) ,( n0 ) - [ * .. 2 ] - > ( : L0 { k3 : reverse ( CASE WHEN TRUE THEN NULL END ) } ) REMOVE (NULL).k SET n1 . k = NULL RETURN DISTINCT 1 AS a2 , a1 AS a3 SKIP 1 
***********************
23、 EXCEPTIONS in:memgraph_database10
Can't have null literal properties inside merge (anon7.k12)!
CREATE ({k16:reduce(a=433517556,b IN [1851218845]|a), k34:false, id:13})-[ :T2{k52:'k', id:14}]->(n0 :L1{k8:'VmC8', id:15})<-[ :T2{id:16}]-({k1:-394979682, id:17}) CREATE (n1{id:18})-[ :T2{id:19}]->({k12:NULL, id:20})<-[ :T2{id:21}]-(n2{k16:NULL, id:22}), ( :L0{id:23})-[ :T2{k51:NULL, id:24}]->( :L3{k24:'H', id:25})<-[r0 :T2{id:26}]-({k14:reduce(a=NULL,b IN [true]|a), id:27}) MERGE (n3{id:28})-[r1 :T1{id:29}]->( :L1{k38:reverse('0Ip'), id:30})<-[r2 :T3{k55:'i', id:31}]-(n4 :L0{id:32}) RETURN *
CREATE ( { k16 : reduce ( a = 433517556 , b IN [ 1851218845 ] | a ) , k34 : false , id : 13 } ) - [ : T2 { k52 : reduce(a='k' ,b IN []|a) , id : 14 } ] - > ( n0 : L1 { k8 : (''+'VmC8' ), id : 15 } ) < - [ : T2 { id : 16 } ] - ( { k1 : -394979682 , id : 17 } ) REMOVE (NULL).FALSE CREATE ( n1 { id : 18 } ) - [ : T2 { id : CASE WHEN FALSE THEN NULL ELSE 19 END } ] - > ( { k12 : NULL , id : 20 } ) < - [ : T2 { id : 21 } ] - ( n2 { k16 : NULL , id : 22 } ) CREATE ( : L0 { id : 23 } ) - [ : T2 { k51 : NULL , id : 24 } ] - > ( : L3 { k24 : 'H' , id : 25 } ) < - [ r0 : T2 { id : 26 } ] - ( { k14 : reduce ( a = NULL , b IN [ true ] | a ) , id : 27 } ) MERGE ( n3 { id : 28 } ) - [ r1 : T1 { id : CASE WHEN FALSE THEN NULL ELSE 29 END } ] - > ( : L1 { k38 : reverse ( '0Ip' ) , id : 30 } ) < - [ r2 : T3 { k55 : CASE WHEN TRUE THEN 'i' END , id : 31 } ] - ( n4 : L0 { id : 32 } ) WITH * RETURN * 
***********************
24、 EXCEPTIONS in:memgraph_database10
Can't have null literal properties inside merge (n0.k5)!
FOREACH(a0 IN [NULL]|CREATE (n0 :L0{k5:NULL, id:33})-[r0 :T3{id:34}]->({id:35}), ( :L1{k9:NULL, id:36})<-[ :T5{id:37}]-( :L5{k35:'B', id:38})-[r1 :T1{id:39}]->(n1{k7:NULL, id:40}) MERGE p0=(n2 :L1{k11:false, k22:'7', id:41}) MERGE p1=({id:42})) MERGE ( :L1{k12:true, id:43})-[r2 :T3{id:44}]-(n3{id:45}) CREATE (n4{id:46}), ({id:47})<-[ :T1{id:48}]-({id:49}) RETURN n3 AS a1 ORDER BY ('P' ENDS WITH substring((r2.k61), abs(1482643933), abs((558880372-(514397760+-990212450))))), a1 DESC SKIP 0 LIMIT 1 UNION ALL CREATE ({id:50})-[ :T5{id:51}]->( :L1{k8:'AUzkc6', k21:NULL, id:52})-[r0 :T4{id:53}]->(n0 :L3{id:54}), (n1{id:55})<-[r1 :T1{id:56}]-(n2{k16:NULL, id:57})-[ :T3{id:58}]->(n3 :L3{k22:NULL, id:59}) CREATE ( :L1{k6:NULL, id:60}) CREATE (n4{k12:false, k26:round(1460561639), id:61})<-[r2 :T3{id:62}]-(n5{id:63})-[ :T2{id:64}]->(n6 :L1{id:65}), (n7 :L3{k6:(NULL*2052196382), k23:'Z', id:66})<-[ :T3{k61:'f', id:67}]-(n8 :L2 :L5{id:68})-[ :T1{id:69}]->( :L1{k38:NULL, id:70}) RETURN collect(endNode(CASE WHEN true THEN NULL END))[abs(1968693032)] AS a1
FOREACH ( a0 IN ([ NULL ] +[]) | CREATE ( n0 : L0 { k5 : NULL , id : 33 } ) - [ r0 : T3 { id : 34 } ] - > ( { id : 35 } ) CREATE ( : L1 { k9 : NULL , id : 36 } ) < - [ : T5 { id : CASE WHEN TRUE THEN 37 END } ] - ( : L5 { k35 : CASE WHEN FALSE THEN NULL ELSE 'B' END , id : 38 } ) - [ r1 : T1 { id : reduce(a=39 ,b IN []|a) } ] - > ( n1 { k7 : NULL , id : 40 } ) SET (NULL).FALSE=1 MERGE p0 = ( n2 : L1 { k11 : false , k22 : '7' , id : CASE WHEN TRUE THEN 41 END } ) CREATE (c0{id:-1}) DELETE (c0) MERGE p1 = ( { id : 42 } ) ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( : L1 { k12 : reduce(a=true ,b IN []|a) , id : 43 } ) - [ r2 : T3 { id : reduce(a=44 ,b IN []|a) } ] - ( n3 { id : 45 } ) CREATE ( n4 { id : 46 } ) CREATE (m0{ id : 47 } )CREATE (m0)< - [ : T1 { id : 48 } ] - ( { id : 49 } ) DELETE NULL RETURN DISTINCT n3 AS a1 ORDER BY ('P' ENDS WITH substring((r2.k61), abs(1482643933), abs((558880372-(514397760+-990212450))))), a1 DESC SKIP 0 LIMIT 1 UNION ALL CREATE ( { id : 50 } ) - [ : T5 { id : 51 } ] - > ( : L1 { k8 : ('AUzkc6' +'') , k21 : NULL , id : 52 } ) - [ r0 : T4 { id : reduce(a=53 ,b IN []|a) } ] - > ( n0 : L3 { id : 54 } ) CREATE ( n1 { id : 55 } ) < - [ r1 : T1 { id : 56 } ] - ( n2 { k16 : NULL , id : CASE WHEN TRUE THEN 57 END } ) - [ : T3 { id : reduce(a=58 ,b IN []|a) } ] - > ( n3 : L3 { k22 : NULL , id : 59 } ) CREATE ( : L1 { k6 : NULL , id : reduce(a=60 ,b IN []|a) } ) CREATE (c1{id:-1}) DELETE (c1) CREATE ( n4 { k12 : false , k26 : reduce(a=round ( 1460561639 ) ,b IN []|a) , id : 61 } ) < - [ r2 : T3 { id : 62 } ] - ( n5 { id : 63 } ) - [ : T2 { id : 64 } ] - > ( n6 : L1 { id : 65 } ) CREATE ( n7 : L3 { k6 : reduce(a=( NULL * 2052196382 ) ,b IN []|a) , k23 : 'Z' , id : reduce(a=66 ,b IN []|a) } ) < - [ : T3 { k61 : 'f' , id : 67 } ] - ( n8 : L2 : L5 { id : 68 } ) - [ : T1 { id : 69 } ] - > ( : L1 { k38 : CASE WHEN TRUE THEN NULL END , id : 70 } ) RETURN CASE WHEN FALSE THEN NULL ELSE collect ( reduce(a=endNode ( reduce(a=CASE WHEN true THEN CASE WHEN FALSE THEN NULL ELSE NULL END END ,b IN []|a) ) ,b IN []|a) ) [ abs ( reduce(a=1968693032 ,b IN []|a) ) ] END AS a1 ORDER BY NULL 
***********************
25、 EXCEPTIONS in:memgraph_database10
Can't have null literal properties inside merge (anon1.k2)!
FOREACH(a0 IN [(849051213-1465558634)]|CREATE p0=({k2:NULL, id:93}), p1=(n0{k5:NULL, id:94}) CREATE ( :L1{k9:NULL, k38:reverse('D'), id:95})<-[ :T3{id:96}]-(n1{id:97}), p2=( :L1{k7:('CP'+(NULL+'I')), k21:'ZN1oRl', id:98}) MERGE ( :L1{k12:true, id:99})-[r0 :T3{id:100}]-(n2{id:101})) MERGE ({id:102})-[ :T3{id:103}]->(n3 :L5{k36:'x', id:104}) DETACH DELETE n3  RETURN 1 AS a1, CASE WHEN false THEN NULL END AS a2
FOREACH ( a0 IN ([ CASE WHEN FALSE THEN NULL ELSE ( 849051213 -1465558634 ) END ] +[]) | CREATE p0 = ( { k2 : NULL , id : 93 } ) CREATE p1 = ( n0 { k5 : NULL , id : 94 } ) REMOVE (NULL).NULL CREATE ( : L1 { k9 : NULL , k38 : CASE WHEN TRUE THEN reverse ( 'D' ) END , id : 95 } ) < - [ : T3 { id : 96 } ] - ( n1 { id : 97 } ) CREATE p2 = ( : L1 { k7 : ( ('CP' +'') + ( NULL + 'I' ) ) , k21 : 'ZN1oRl' , id : 98 } ) DETACH DELETE (NULL) MERGE ( : L1 { k12 : true , id : 99 } ) - [ r0 : T3 { id : 100 } ] - ( n2 { id : CASE WHEN TRUE THEN 101 END } ) CREATE (c0{id:-1}) DELETE (c0) ) MERGE pp0=( { id : 102 } ) - [ : T3 { id : reduce(a=103 ,b IN []|a) } ] - > ( n3 : L5 { k36 : CASE WHEN TRUE THEN 'x' END , id : 104 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE n3 RETURN CASE WHEN FALSE THEN NULL ELSE 1 END AS a1 , CASE WHEN reduce(a=false ,b IN []|a) THEN NULL END AS a2 
***********************
26、 EXCEPTIONS in:memgraph_database12
Can't have null literal properties inside merge (n0.k37)!
CREATE ( :L4{id:53})-[ :T4{id:54}]->(n0 :L4{k37:NULL, id:55}) MERGE ({k35:'Y7A', id:56})-[r0 :T4{id:57}]->(n1{id:58}) DETACH DELETE r0  RETURN DISTINCT *, n1 AS a0
CREATE ( : L4 { id : 53 } ) - [ : T4 { id : 54 } ] - > ( n0 : L4 { k37 : reduce(a=NULL ,b IN []|a) , id : 55 } ) MERGE ( { k35 : 'Y7A' , id : 56 } ) - [ r0 : T4 { id : CASE WHEN FALSE THEN NULL ELSE 57 END } ] - > ( n1 { id : reduce(a=58 ,b IN []|a) } ) DETACH DELETE r0 RETURN DISTINCT * , reduce(a=n1 ,b IN []|a) AS a0 LIMIT 1 
***********************
27、 EXCEPTIONS in:memgraph_database12
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
MERGE (n0{id:59}) SET n0.k=251882534 SET n0.k=NULL RETURN 1 AS a0, 1 AS a1 SKIP 1 UNION UNWIND [(n0)-[]-()|CASE WHEN NULL THEN NULL END] AS a0 MATCH ()-[]-() CREATE (n1{id:60})<-[ :T4{id:61}]-({id:62}) RETURN 1 AS a0, a0 AS a1 ORDER BY nodes(NULL)[abs(-1096838922)], a0
MERGE ( n0 { id : 59 } ) SET n0 . k = reduce(a=251882534 ,b IN []|a) CREATE (c0{id:-1}) DELETE (c0) SET n0 . k = NULL SET (NULL).k=1 RETURN 1 AS a0 , CASE WHEN TRUE THEN 1 END AS a1 SKIP reduce(a=1 ,b IN []|a) UNION UNWIND [ ( n0 ) - [ ] - ( ) | CASE WHEN NULL THEN NULL END ] AS a0 WITH * MATCH (nn0),()<-[m1]-(),(nn2) WHERE exists((nn0)-[m1]-(nn2)) REMOVE (NULL).NULL CREATE ( n1 { id : 60 } ) < - [ : T4 { id : CASE WHEN FALSE THEN NULL ELSE 61 END } ] - ( { id : 62 } ) RETURN 1 AS a0 , a0 AS a1 ORDER BY nodes(NULL)[abs(-1096838922)], a0 
***********************
28、 EXCEPTIONS in:memgraph_database12
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * UNWIND CASE WHEN reduce(a=NULL,b IN [('GG' ENDS WITH 'R'), exists(()-[]-())]|a AND b) THEN NULL END AS a1 CREATE (n0{id:109}) RETURN 1 AS a2} OPTIONAL MATCH (n1), p0=() MERGE ({id:110}) RETURN DISTINCT 1 AS a3 ORDER BY {k1: NULL, k2: [endNode(NULL), endNode(NULL)]}, a3 LIMIT 1
CALL { WITH * UNWIND CASE WHEN CASE WHEN TRUE THEN reduce ( a = NULL , b IN [ CASE WHEN FALSE THEN NULL ELSE ( CASE WHEN TRUE THEN 'GG' ENDS WITH 'R' END ) END , exists ( ( ) - [ ] - ( ) ) ] | a AND b ) END THEN NULL END AS a1 CREATE ( n0 { id : 109 } ) RETURN 1 AS a2 SKIP 1 } WITH * OPTIONAL MATCH ( n1 ) ,p0 = ( ) OPTIONAL MATCH ()-[:TYPE]-() MERGE ( { id : 110 } ) WITH * RETURN DISTINCT 1 AS a3 ORDER BY {k1: NULL, k2: [endNode(NULL), endNode(NULL)]}, a3 LIMIT 1 
***********************
29、 EXCEPTIONS in:memgraph_database14
Can't have null literal properties inside merge (anon5.k51)!
OPTIONAL MATCH () CREATE ({id:6})-[ :T6{id:7}]->(n0{id:8})-[ :T4{k51:round(NULL), id:9}]->(n1{id:10}) MERGE p0=(n2{id:11})-[r0 :T6{id:12}]->(n3{id:13}) RETURN 1 AS a0, n3 AS a1
OPTIONAL MATCH ( ) OPTIONAL MATCH ()-[:TYPE]-() CREATE (m0{ id : CASE WHEN FALSE THEN NULL ELSE 6 END } )CREATE (m0)- [ : T6 { id : 7 } ] - > ( n0 { id : 8 } ) - [ : T4 { k51 : round ( NULL ) , id : 9 } ] - > ( n1 { id : reduce(a=10 ,b IN []|a) } ) SET (NULL).TRUE=1 MERGE p0 = ( n2 { id : 11 } ) - [ r0 : T6 { id : CASE WHEN FALSE THEN NULL ELSE 12 END } ] - > ( n3 { id : 13 } ) RETURN reduce(a=1 ,b IN []|a) AS a0 , n3 AS a1 
***********************
30、 EXCEPTIONS in:memgraph_database15
Can't have null literal properties inside merge (anon10.k33)!
FOREACH(a0 IN NULL|CREATE (n0 :L1{id:36})<-[r0 :T1{k44:'eIS5dkv', id:37}]-(n1{id:38}) CREATE ( :L1{id:39})<-[ :T1{id:40}]-({id:41}), (n2{id:42}) MERGE (n3{k33:'3bj', id:43})-[r1 :T3{id:44}]-(n4{id:45})-[r2 :T2{k49:1283422276, id:46}]-({k31:-32324246, id:47})) CREATE p0=( :L5{id:48})-[r3 :T2{id:49}]->({k33:NULL, id:50}), ( :L5{id:51}) MERGE (n5{id:52})-[r4 :T1{id:53}]-(n6{id:54})-[r5 :T1{id:55}]-(n7{k28:false, id:56}) RETURN 1 AS a1, NULL AS a2 SKIP 1
FOREACH ( a0 IN NULL | CREATE ( n0 : L1 { id : 36 } ) < - [ r0 : T1 { k44 : 'eIS5dkv' , id : 37 } ] - ( n1 { id : CASE WHEN FALSE THEN NULL ELSE 38 END } ) CREATE ({id:41})-[ : T1 { id : 40 } ] ->( : L1 { id : 39 } ) CREATE ( n2 { id : CASE WHEN FALSE THEN NULL ELSE 42 END } ) MERGE ( n3 { k33 : ('3bj' +'') , id : 43 } ) - [ r1 : T3 { id : 44 } ] - ( n4 { id : 45 } ) - [ r2 : T2 { k49 : 1283422276 , id : 46 } ] - ( { k31 : -32324246 , id : 47 } ) ) WITH * CREATE p0 = ( : L5 { id : 48 } ) - [ r3 : T2 { id : 49 } ] - > ( { k33 : NULL , id : 50 } ) CREATE ( : L5 { id : 51 } ) MERGE ( n5 { id : 52 } ) - [ r4 : T1 { id : 53 } ] - ( n6 { id : 54 } ) - [ r5 : T1 { id : 55 } ] - ( n7 { k28 : false , id : 56 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a1 , NULL AS a2 ORDER BY FALSE SKIP 1 
***********************
31、 EXCEPTIONS in:memgraph_database17
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH p0=() CREATE p1=(n0{id:29}) RETURN 1 AS a0, 1 AS a1} OPTIONAL MATCH (), p2=() DETACH DELETE p2  RETURN 1 AS a2, 1 AS a3
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) WITH * OPTIONAL MATCH p0 = ( ) CREATE p1 = ( n0 { id : 29 } ) WITH * RETURN 1 AS a0 , 1 AS a1 } DELETE (NULL) WITH * OPTIONAL MATCH ( ) ,p2 = ( ) UNWIND [NULL] as l0 DETACH DELETE p2 RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a2 , 1 AS a3 SKIP 1 
***********************
32、 EXCEPTIONS in:memgraph_database20
Can't have null literal properties inside merge (n1.k0)!
CREATE (n0{k16:1903054366, k25:false, id:53})-[r0 :T1{id:54}]->(n1{k22:('95o' ENDS WITH (('4xZ'+('EkaV'+'O'))+NULL)), k0:NULL, id:55}), (n2 :L3 :L0{id:56}) CREATE ( :L3{id:57}), p0=(n3{k23:NULL, id:58})<-[ :T0{k33:'o', id:59}]-( :L2{id:60}) MERGE ({k21:'i', k5:295240619, id:61})-[r1 :T3{id:62}]-(n4{k15:false, id:63})-[r2 :T0{id:64}]->( :L3{k13:'qJoLB', id:65}) RETURN 1 AS a0 SKIP 0
CREATE ( n0 { k16 : 1903054366 , k25 : reduce(a=false ,b IN []|a) , id : 53 } ) - [ r0 : T1 { id : 54 } ] - > ( n1 { k22 : ( '95o' ENDS WITH ( reduce(a=( '4xZ' + ( CASE WHEN FALSE THEN NULL ELSE 'EkaV' + 'O' END ) ) + NULL ,b IN []|a) ) ) , k0 : NULL , id : 55 } ) CREATE ( n2 : L3 : L0 { id : reduce(a=56 ,b IN []|a) } ) SET (NULL).NULL=1 CREATE ( : L3 { id : 57 } ) CREATE p0 = ( n3 { k23 : NULL , id : 58 } ) < - [ : T0 { k33 : 'o' , id : 59 } ] - ( : L2 { id : 60 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( { k21 : 'i' , k5 : 295240619 , id : reduce(a=61 ,b IN []|a) } ) - [ r1 : T3 { id : 62 } ] - ( n4 { k15 : false , id : 63 } ) - [ r2 : T0 { id : 64 } ] - > ( : L3 { k13 : 'qJoLB' , id : CASE WHEN FALSE THEN NULL ELSE 65 END } ) WITH * RETURN 1 AS a0 SKIP 0 
***********************
33、 EXCEPTIONS in:memgraph_database20
Can't have null literal properties inside merge (anon2.k19)!
CREATE (n9{k21:'TEs80', id:82})<-[ :T3{id:83}]-(n10 :L0{id:84})-[r3 :T2{id:85}]->({k19:NULL, k14:NULL, id:86}) MERGE p0=( :L3{k2:-134215331, id:87}) CREATE (n11{id:88}) RETURN *
CREATE ( n9 { k21 : 'TEs80' , id : 82 } ) < - [ : T3 { id : CASE WHEN TRUE THEN 83 END } ] - ( n10 : L0 { id : 84 } ) - [ r3 : T2 { id : 85 } ] - > ( { k19 : NULL , k14 : NULL , id : 86 } ) WITH * UNWIND [NULL] as l0 MERGE p0 = ( : L3 { k2 : -134215331 , id : 87 } ) CREATE ( n11 { id : 88 } ) RETURN * 
***********************
34、 EXCEPTIONS in:memgraph_database20
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE p0=( :L3{k18:NULL, id:109})<-[ :T2{id:110}]-(n0 :L0{k18:NULL, k3:reduce(a=NULL,b IN [NULL]|a), id:111})-[r0 :T3{id:112}]->( :L3{id:113}) MERGE (n1 :L3 :L2{id:114})-[r1 :T0{id:115}]->(n2 :L2{id:116})<-[r2 :T2{k47:true, id:117}]-({k25:true, id:118}) RETURN 1 AS a0 ORDER BY (r1.k35), a0 DESC} MATCH ( :L2), (n1) SET n1.k=false RETURN 1 AS a1 LIMIT 0
CALL { WITH * CREATE (m0: L3 { k18 : NULL , id : 109 } )CREATE (m0)< - [ : T2 { id : reduce(a=110 ,b IN []|a) } ] - ( n0 : L0 { k18 : reduce(a=NULL ,b IN []|a) , k3 : reduce ( a = CASE WHEN TRUE THEN NULL END , b IN [ CASE WHEN FALSE THEN NULL ELSE NULL END ] | a ) , id : 111 } ) - [ r0 : T3 { id : 112 } ] - > ( : L3 { id : 113 } ) WITH * MERGE ( n1 : L3 : L2 { id : 114 } ) - [ r1 : T0 { id : 115 } ] - > ( n2 : L2 { id : 116 } ) < - [ r2 : T2 { k47 : true , id : 117 } ] - ( { k25 : reduce(a=true ,b IN []|a) , id : 118 } ) RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a0 ORDER BY (r1.k35), a0 DESC LIMIT 1 } MATCH ( : L2 ) ,( n1 ) SET n1 . k = false RETURN reduce(a=1 ,b IN []|a) AS a1 LIMIT 0 
***********************
35、 EXCEPTIONS in:memgraph_database20
Can't have null literal properties inside merge (n0.k14)!
UNWIND [-950656205] AS a0 CREATE ( :L3 :L0{id:148})-[ :T3{id:149}]->(n0 :L2{k14:NULL, id:150})<-[r0 :T2{k45:true, id:151}]-({id:152}), (n1 :L3 :L0{id:153}) MERGE (n2 :L3{k13:('RcXUAu'+'2OH'), id:154})<-[r1 :T2{id:155}]-(n3 :L2 :L4{k15:true, id:156}) RETURN 1 AS a1
UNWIND [ -950656205 ] AS a0 OPTIONAL MATCH ()-[:TYPE]-() CREATE ( : L3 : L0 { id : 148 } ) - [ : T3 { id : CASE WHEN FALSE THEN NULL ELSE 149 END } ] - > ( n0 : L2 { k14 : NULL , id : 150 } ) < - [ r0 : T2 { k45 : true , id : 151 } ] - ( { id : 152 } ) CREATE ( n1 : L3 : L0 { id : 153 } ) MERGE ( n2 : L3 { k13 : reduce(a=( CASE WHEN FALSE THEN NULL ELSE (''+'RcXUAu' )+ '2OH' END ) ,b IN []|a) , id : 154 } ) < - [ r1 : T2 { id : 155 } ] - ( n3 : L2 : L4 { k15 : true , id : 156 } ) CREATE (c0{id:-1}) DELETE (c0) RETURN 1 AS a1 LIMIT 1 
***********************
36、 EXCEPTIONS in:memgraph_database21
Can't have null literal properties inside merge (r1.k50)!
CREATE ({id:10})<-[r0 :T2{id:11}]-({id:12})<-[r1 :T2{k50:NULL, id:13}]-(n0{id:14}), ( :L5{k31:NULL, id:15}) MERGE (n1{id:16})<-[r2 :T2{k55:156669131, id:17}]-(n2{id:18})-[r3 :T2{id:19}]-({id:20}) DETACH DELETE n1,n2  RETURN 1 AS a0
CREATE ( { id : 10 } ) < - [ r0 : T2 { id : 11 } ] - ( { id : 12 } ) < - [ r1 : T2 { k50 : reduce(a=NULL ,b IN []|a) , id : 13 } ] - ( n0 { id : 14 } ) CREATE ( : L5 { k31 : NULL , id : 15 } ) MERGE pp0=( n1 { id : 16 } ) < - [ r2 : T2 { k55 : 156669131 , id : 17 } ] - ( n2 { id : 18 } ) - [ r3 : T2 { id : 19 } ] - ( { id : 20 } ) DETACH DELETE CASE WHEN TRUE THEN n1 END , n2 SET (NULL).FALSE=1 RETURN 1 AS a0 
***********************
37、 EXCEPTIONS in:memgraph_database23
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE ({id:33}) CREATE ({k38:true, id:34})<-[ :T2{id:35}]-({id:36})-[ :T5{id:37}]->( :L0{k0:reduce(a=NULL,b IN [NULL, '8H']|a+ b), id:38}), (n0 :L0{k3:NULL, id:39})-[r0 :T1{id:40}]->(n1{k1:NULL, id:41}) RETURN 1 AS a0, NULL AS a1} MATCH (), (n2)-[r1]-() WHERE true CREATE (n3{k22:NULL, id:42}), (n4 :L6{k40:a0, id:43})<-[r2 :T2{id:44}]-(n5{id:45})-[r3 :T5{id:46}]->(n6{id:47}) RETURN n2 AS a2, 1 AS a3
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) MERGE ( { id : 33 } ) REMOVE (NULL).TRUE CREATE ( { k38 : true , id : 34 } ) < - [ : T2 { id : 35 } ] - ( { id : CASE WHEN FALSE THEN NULL ELSE 36 END } ) - [ : T5 { id : 37 } ] - > ( : L0 { k0 : reduce(a=reduce ( a = NULL , b IN [ reduce(a=NULL ,b IN []|a) , '8H' ] | a + b ) ,b IN []|a) , id : 38 } ) CREATE ( n0 : L0 { k3 : NULL , id : 39 } ) - [ r0 : T1 { id : 40 } ] - > ( n1 { k1 : NULL , id : 41 } ) RETURN 1 AS a0 , NULL AS a1 } CREATE (c1{id:-1}) DELETE (c1) WITH * MATCH ( ) ,( n2 ) - [ r1 ] - ( ) WHERE true REMOVE (NULL).k CREATE ( n3 { k22 : NULL , id : 42 } ) CREATE ( n4 : L6 { k40 : a0 , id : 43 } ) < - [ r2 : T2 { id : 44 } ] - ( n5 { id : 45 } ) - [ r3 : T5 { id : 46 } ] - > ( n6 { id : 47 } ) WITH * UNWIND [1] as l0 RETURN n2 AS a2 , 1 AS a3 LIMIT 1 
***********************
38、 EXCEPTIONS in:memgraph_database23
Can't have null literal properties inside merge (anon1.k43)!
FOREACH(a0 IN [NULL, NULL]|CREATE ({k43:NULL, id:59})<-[r0 :T2{id:60}]-( :L5{id:61}) CREATE (n0{k6:NULL, id:62})-[r1 :T0{id:63}]->({id:64}) CREATE ({id:65})-[ :T5{k74:reduce(a='TK',b IN [NULL]|a), id:66}]->( :L0{id:67})) MERGE ({id:68})<-[r2 :T2{id:69}]-(n1 :L4{id:70})-[r3 :T5{k76:-1995109724, id:71}]->(n2 :L0{id:72}) MERGE (n3{id:73})-[ :T5{id:74}]-(n4{id:75}) RETURN n4 AS a1, 1 AS a2
FOREACH ( a0 IN [ NULL , NULL ] | CREATE ( :L5{id:61})-[ r0 : T2 { id : 60 } ] ->( { k43 : NULL , id : 59 } ) CREATE (n0{ k6 : NULL , id : 62 } )CREATE (n0)- [ r1 : T0 { id : 63 } ] - > ( { id : reduce(a=64 ,b IN []|a) } ) CREATE ( { id : 65 } ) - [ : T5 { k74 : reduce ( a = 'TK' , b IN [ NULL ] | a ) , id : 66 } ] - > ( : L0 { id : 67 } ) ) MERGE ( { id : 68 } ) < - [ r2 : T2 { id : 69 } ] - ( n1 : L4 { id : reduce(a=70 ,b IN []|a) } ) - [ r3 : T5 { k76 : -1995109724 , id : 71 } ] - > ( n2 : L0 { id : 72 } ) MERGE ( n3 { id : CASE WHEN TRUE THEN 73 END } ) - [ : T5 { id : 74 } ] - ( n4 { id : 75 } ) RETURN n4 AS a1 , 1 AS a2 
***********************
39、 EXCEPTIONS in:memgraph_database24
Can't have null literal properties inside merge (r0.k35)!
FOREACH(a0 IN [NULL]|CREATE ({id:20})<-[ :T1{id:21}]-(n0{id:22}) CREATE (n1 :L3{k21:'y', id:23})<-[r0 :T1{k35:reduce(a=NULL,b IN [true, false]|a), id:24}]-({id:25}) CREATE ({id:26})-[r1 :T1{id:27}]->({id:28})-[ :T3{k48:true, id:29}]->(n2 :L1{id:30})) MERGE p0=(n3{id:31}) DETACH DELETE n3  RETURN p0 AS a1, startNode(relationships(NULL)[abs(NULL)]) AS a2 LIMIT 1 UNION ALL WITH NULL AS a0 UNWIND [relationships(NULL)[abs(NULL)], relationships(NULL)[abs(NULL)]] AS a1 CREATE ( :L0 :L1{id:32}) RETURN 1 AS a1, 1 AS a2 SKIP 0
FOREACH ( a0 IN [ NULL ] | CREATE (m0{ id : 20 } )CREATE (m0)< - [ : T1 { id : 21 } ] - ( n0 { id : reduce(a=22 ,b IN []|a) } ) CREATE ( n1 : L3 { k21 : 'y' , id : 23 } ) < - [ r0 : T1 { k35 : reduce ( a = NULL , b IN [ CASE WHEN TRUE THEN true END , false ] | a ) , id : 24 } ] - ( { id : CASE WHEN TRUE THEN 25 END } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( { id : 26 } ) - [ r1 : T1 { id : 27 } ] - > ( { id : 28 } ) - [ : T3 { k48 : true , id : reduce(a=29 ,b IN []|a) } ] - > ( n2 : L1 { id : CASE WHEN FALSE THEN NULL ELSE 30 END } ) REMOVE (NULL).TRUE ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE p0 = ( n3 { id : 31 } ) DELETE NULL DETACH DELETE CASE WHEN TRUE THEN n3 END WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN p0 AS a1 , startNode ( ([]+relationships ( NULL ) )[ abs ( NULL ) ] ) AS a2 LIMIT CASE WHEN FALSE THEN NULL ELSE 1 END UNION ALL WITH NULL AS a0 UNWIND [ reduce(a=relationships ( NULL ) [ abs ( NULL ) ] ,b IN []|a) , relationships ( NULL ) [ abs ( NULL ) ] ] AS a1 CREATE ( : L0 : L1 { id : 32 } ) REMOVE (NULL).k RETURN 1 AS a1 , reduce(a=1 ,b IN []|a) AS a2 SKIP CASE WHEN TRUE THEN 0 END 
***********************
40、 EXCEPTIONS in:memgraph_database24
Can't have null literal properties inside merge (r0.k47)!
CREATE ({id:49})<-[r0 :T3{k47:type(relationships(NULL)[abs(CASE WHEN true THEN -288001050 END)]), id:50}]-({id:51})<-[ :T1{id:52}]-(n0{id:53}), ({id:54}) CREATE ( :L1{k2:CASE WHEN NULL THEN NULL END, k8:'3', id:55})-[ :T3{id:56}]->(n1 :L1{id:57})<-[r1 :T1{id:58}]-(n2{id:59}), ({id:60}) MERGE ( :L0 :L1{k5:1033743260, id:61}) RETURN 1 AS a0, 1 AS a1
CREATE ( { id : 49 } ) < - [ r0 : T3 { k47 : type ( relationships ( CASE WHEN FALSE THEN NULL ELSE NULL END ) [ abs ( reduce(a=CASE WHEN true THEN -288001050 END ,b IN []|a) ) ] ) , id : 50 } ] - ( { id : reduce(a=51 ,b IN []|a) } ) < - [ : T1 { id : 52 } ] - ( n0 { id : 53 } ) CREATE ( { id : 54 } ) WITH * CREATE (m0: L1 { k2 : CASE WHEN NULL THEN NULL END , k8 : '3' , id : 55 } )CREATE (m0)- [ : T3 { id : 56 } ] - > ( n1 : L1 { id : 57 } ) < - [ r1 : T1 { id : 58 } ] - ( n2 { id : 59 } ) CREATE ( { id : 60 } ) MERGE ( : L0 : L1 { k5 : 1033743260 , id : 61 } ) RETURN 1 AS a0 , reduce(a=1 ,b IN []|a) AS a1 
***********************
41、 EXCEPTIONS in:memgraph_database27
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * WITH * LIMIT 0 CREATE p0=(n0{id:9})-[ :T1{k37:'zNidtdq', id:10}]->(n1{k19:NULL, id:11})-[ :T3{id:12}]->({id:13}) RETURN 1 AS a0, 1 AS a1} OPTIONAL MATCH (n2), (n3)-[r0 :T3{k48:true}]-(n4) MERGE ({id:14}) RETURN *, n4 AS a2
CALL { WITH * WITH * LIMIT 0 WITH * CREATE (n0{ id : 9 } )CREATE (n0)- [ : T1 { k37 : 'zNidtdq' , id : 10 } ] - > ( n1 { k19 : CASE WHEN FALSE THEN NULL ELSE NULL END , id : 11 } ) - [ : T3 { id : CASE WHEN TRUE THEN 12 END } ] - > ( { id : 13 } ) WITH * RETURN 1 AS a0 , 1 AS a1 LIMIT 1 } WITH * OPTIONAL MATCH ( n2 ) ,( n3 ) - [ r0 : T3 { k48 : true } ] - ( n4 ) WHERE TRUE DETACH DELETE (NULL) MERGE pp0=( { id : 14 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN * , n4 AS a2 
***********************
42、 EXCEPTIONS in:memgraph_database27
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH (n0)-[r0 :T1{k40:NULL}]-(n1)<-[ :T6{k71:(r0.k39)}]-() CREATE (n2{k22:-297335143, id:15})<-[ :T1{k37:NULL, id:16}]-(n3{id:17})<-[r1 :T6{id:18}]-({id:19}), (n4{id:20}) RETURN n0 AS a2, 'C' AS a3} OPTIONAL MATCH (a2)-[]-(), ()<-[r0]-(a2) WHERE NULL MERGE ({id:21})-[ :T6{k71:-765206602, id:22}]-({id:23})<-[r2 :T6{id:24}]-( :L3 :L1{id:25}) RETURN a2 AS a4, a2 AS a5 SKIP 1
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() MATCH ( n0 ) - [ r0 : T1 { k40 : reduce(a=NULL ,b IN []|a) } ] - ( n1 ) < - [ : T6 { k71 : reduce(a=( r0 . k39 ) ,b IN []|a) } ] - ( ) UNWIND [1] as l0 CREATE ( n2 { k22 : -297335143 , id : 15 } ) < - [ : T1 { k37 : NULL , id : 16 } ] - ( n3 { id : 17 } ) < - [ r1 : T6 { id : CASE WHEN FALSE THEN NULL ELSE 18 END } ] - ( { id : 19 } ) CREATE ( n4 { id : 20 } ) WITH * UNWIND [1] as l1 RETURN DISTINCT CASE WHEN TRUE THEN n0 END AS a2 , 'C' AS a3 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH ( a2 ) - [ ] - ( ) ,( ) < - [ r0 ] - ( a2 ) WHERE NULL REMOVE (NULL).NULL MERGE ( { id : 21 } ) - [ : T6 { k71 : -765206602 , id : 22 } ] - ( { id : CASE WHEN FALSE THEN NULL ELSE 23 END } ) < - [ r2 : T6 { id : 24 } ] - ( : L3 : L1 { id : 25 } ) RETURN reduce(a=a2 ,b IN []|a) AS a4 , a2 AS a5 ORDER BY NULL DESC SKIP 1 
***********************
43、 EXCEPTIONS in:memgraph_database27
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH p1=()-[r3]-(), (n0)-[r5]->(n11)-[r6 :T1{k39:NULL}]-() DETACH DELETE n11,n0  RETURN 1 AS a4 ORDER BY nodes(p1), a4 DESC} MATCH (), (n12) WHERE NULL MERGE ({id:45}) RETURN DISTINCT n12 AS a5
CALL { WITH * REMOVE (NULL).k WITH * OPTIONAL MATCH p1 = ( ) - [ r3 ] - ( ) ,( n0 ) - [ r5 ] - > ( n11 ) - [ r6 : T1 { k39 : CASE WHEN FALSE THEN NULL ELSE NULL END } ] - ( ) OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE CASE WHEN FALSE THEN NULL ELSE n11 END , n0 SET (NULL).k=1 RETURN 1 AS a4 ORDER BY nodes(p1), a4 DESC } OPTIONAL MATCH ()-[:TYPE]-() MATCH ( ) ,( n12 ) WHERE NULL SET (NULL).NULL=1 MERGE ( { id : 45 } ) WITH * RETURN DISTINCT n12 AS a5 
***********************
44、 EXCEPTIONS in:memgraph_database33
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH ()<-[ :T1{k43:NULL}]-(n0{k6:-2092942455}), (n1)-[]-(n0) SET n1.k=true RETURN 1 AS a2} OPTIONAL MATCH ()-[]-(), ()<-[]-() MERGE ({id:7})-[ :T1{k40:'3', id:8}]-(n2{id:9}) RETURN a2 AS a3, n2 AS a4
CALL { WITH * OPTIONAL MATCH ()-[*0..0]-( ) < - [ : T1 { k43 : NULL } ] - ( n0 { k6 : -2092942455 } ) ,( n1 ) - [ ] - ( n0 ) WHERE TRUE SET n1 . k = CASE WHEN TRUE THEN true END DETACH DELETE NULL RETURN DISTINCT 1 AS a2 LIMIT 1 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH ( ) - [ ] - ( ) ,( ) < - [ ] - ( ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( { id : 7 } ) - [ : T1 { k40 : '3' , id : 8 } ] - ( n2 { id : 9 } ) WITH * UNWIND [NULL] as l0 RETURN a2 AS a3 , n2 AS a4 
***********************
45、 EXCEPTIONS in:memgraph_database37
Can't have null literal properties inside merge (n1.k10)!
CREATE (n0{id:21})<-[r0 :T3{id:22}]-({id:23}), p0=(n1{k10:NULL, id:24})<-[r1 :T4{k54:NULL, id:25}]-(n2{id:26}) MERGE (n3{id:27})<-[r2 :T3{id:28}]-({id:29}) SET n3.k=(r2.k52) RETURN n3 AS a0
CREATE ( n0 { id : reduce(a=21 ,b IN []|a) } ) < - [ r0 : T3 { id : 22 } ] - ( { id : 23 } ) CREATE p0 = ( n1 { k10 : NULL , id : 24 } ) < - [ r1 : T4 { k54 : NULL , id : 25 } ] - ( n2 { id : 26 } ) MERGE ( n3 { id : CASE WHEN FALSE THEN NULL ELSE 27 END } ) < - [ r2 : T3 { id : 28 } ] - ( { id : 29 } ) WITH * UNWIND [NULL] as l0 SET n3 . k = CASE WHEN TRUE THEN ( CASE WHEN TRUE THEN r2 . k52 END ) END RETURN n3 AS a0 
***********************
46、 EXCEPTIONS in:memgraph_database39
Can't have null literal properties inside merge (n0.k8)!
CREATE (n0{k8:NULL, id:56}), (n1 :L4{id:57}) MERGE p0=(n2{id:58}) CREATE (n3{id:59}) RETURN n2 AS a0, p0 AS a1
CREATE ( n0 { k8 : NULL , id : 56 } ) CREATE ( n1 : L4 { id : CASE WHEN FALSE THEN NULL ELSE 57 END } ) WITH * UNWIND [1] as l0 MERGE p0 = ( n2 { id : 58 } ) CREATE ( n3 { id : 59 } ) RETURN n2 AS a0 , p0 AS a1 SKIP 1 
***********************
47、 EXCEPTIONS in:memgraph_database42
Can't have null literal properties inside merge (anon2.k30)!
WITH [properties(NULL), {k1: NULL, k2: NULL}] AS a0 CREATE ( :L2{id:7})-[r0 :T3{k55:NULL, id:8}]->( :L5{k30:NULL, id:9})-[ :T1{k45:NULL, id:10}]->( :L5{id:11}) MERGE (n0{k34:-1575792906, id:12}) RETURN 1 AS a1
WITH [ properties ( NULL ) , { k1 : reduce(a=NULL ,b IN []|a) , k2 : NULL } ] AS a0 CREATE (m0: L2 { id : 7 } )CREATE (m0)- [ r0 : T3 { k55 : NULL , id : 8 } ] - > ( : L5 { k30 : CASE WHEN TRUE THEN NULL END , id : 9 } ) - [ : T1 { k45 : NULL , id : 10 } ] - > ( : L5 { id : 11 } ) MERGE ( n0 { k34 : -1575792906 , id : 12 } ) RETURN 1 AS a1 LIMIT 1 
***********************
48、 EXCEPTIONS in:memgraph_database42
Can't have null literal properties inside merge (n0.k31)!
OPTIONAL MATCH p0=(), () WHERE reduce(a=true,b IN [((735930269-(-705873411/-642401694)) <= 1598217086), true]|a) CREATE (n0{k31:CASE WHEN NULL THEN 1854392564 END, k14:'0', id:13})-[r0 :T3{id:14}]->(n1{k33:NULL, id:15})-[ :T1{id:16}]->(n2{id:17}), (n3{k29:NULL, id:18})-[ :T1{k43:((734454374/(NULL+NULL))--142046559), id:19}]->({id:20})<-[r1 :T3{id:21}]-(n4 :L2{k31:-1144781729, id:22}) MERGE p1=(n5 :L5 :L2{k13:false, id:23}) RETURN n5 AS a0, n5 AS a1
OPTIONAL MATCH p0 = ( ) ,( ) WHERE reduce ( a = true , b IN ([ ( ( reduce(a=735930269 - ( -705873411 / -642401694 ) ,b IN []|a) ) <= 1598217086 ) , CASE WHEN TRUE THEN true END ] +[]) | a ) CREATE (n0{ k31 : CASE WHEN NULL THEN 1854392564 END , k14 : '0' , id : CASE WHEN FALSE THEN NULL ELSE 13 END } )CREATE (n0)- [ r0 : T3 { id : 14 } ] - > ( n1 { k33 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 15 END } ) - [ : T1 { id : 16 } ] - > ( n2 { id : 17 } ) CREATE (n3{ k29 : NULL , id : reduce(a=18 ,b IN []|a) } )CREATE (n3)- [ : T1 { k43 : reduce(a=( ( 734454374 / ( CASE WHEN TRUE THEN NULL + NULL END ) ) - -142046559 ) ,b IN []|a) , id : 19 } ] - > ( { id : 20 } ) < - [ r1 : T3 { id : 21 } ] - ( n4 : L2 { k31 : -1144781729 , id : 22 } ) WITH * MERGE p1 = ( n5 : L5 : L2 { k13 : false , id : 23 } ) SET (NULL).TRUE=1 RETURN n5 AS a0 , n5 AS a1 
***********************
49、 EXCEPTIONS in:memgraph_database42
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE p0=(n0 :L2{id:35})<-[r0 :T3{id:36}]-(n1 :L4 :L3{id:37}) CREATE ({id:38})-[r1 :T3{k55:(n1.k22), id:39}]->(n2{id:40})-[ :T1{id:41}]->({id:42}) RETURN 1 AS a0 SKIP 1} OPTIONAL MATCH p1=( :L5)-[]-() CREATE (n3 :L5{id:43})<-[r2 :T3{id:44}]-({id:45}) RETURN 1 AS a1, a0 AS a2
CALL { WITH * SET (NULL).FALSE=1 MERGE p0 = ( n0 : L2 { id : 35 } ) < - [ r0 : T3 { id : 36 } ] - ( n1 : L4 : L3 { id : 37 } ) DELETE (NULL) CREATE ( { id : 38 } ) - [ r1 : T3 { k55 : ( n1 . k22 ) , id : 39 } ] - > ( n2 { id : 40 } ) - [ : T1 { id : 41 } ] - > ( { id : 42 } ) SET (NULL).TRUE=1 RETURN CASE WHEN TRUE THEN 1 END AS a0 ORDER BY NULL SKIP reduce(a=1 ,b IN []|a) LIMIT 1 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH p1 = ( : L5 ) - [ ] - ( ) CREATE ( n3 : L5 { id : 43 } ) < - [ r2 : T3 { id : 44 } ] - ( { id : 45 } ) REMOVE (NULL).TRUE RETURN 1 AS a1 , a0 AS a2 
***********************
50、 EXCEPTIONS in:memgraph_database44
Can't have null literal properties inside merge (anon5.k19)!
CREATE ({id:31})<-[r0 :T1{id:32}]-({id:33}), (n0{id:34})-[r1 :T1{id:35}]->(n1{k9:'N1', k1:-2003434270, id:36}) CREATE ({k19:reverse(type(relationships(NULL)[abs(920853581)])), id:37})-[ :T0{id:38}]->({id:39})<-[ :T3{id:40}]-(n2{k18:NULL, id:41}) MERGE p1=({id:42})-[r2 :T1{id:43}]->(n3 :L1 :L0{k4:false, id:44})-[r3 :T0{id:45}]-(n4{id:46}) RETURN 1 AS a1
CREATE ( { id : CASE WHEN TRUE THEN 31 END } ) < - [ r0 : T1 { id : 32 } ] - ( { id : reduce(a=33 ,b IN []|a) } ) CREATE ( n0 { id : CASE WHEN TRUE THEN 34 END } ) - [ r1 : T1 { id : 35 } ] - > ( n1 { k9 : reduce(a=('N1' +'') ,b IN []|a) , k1 : CASE WHEN FALSE THEN NULL ELSE -2003434270 END , id : 36 } ) CREATE ( { k19 : reverse ( type ( relationships ( NULL ) [ abs ( reduce(a=920853581 ,b IN []|a) ) ] ) ) , id : 37 } ) - [ : T0 { id : 38 } ] - > ( { id : CASE WHEN TRUE THEN 39 END } ) < - [ : T3 { id : 40 } ] - ( n2 { k18 : NULL , id : 41 } ) DETACH DELETE NULL MERGE p1 = ( { id : reduce(a=42 ,b IN []|a) } ) - [ r2 : T1 { id : CASE WHEN FALSE THEN NULL ELSE 43 END } ] - > ( n3 : L1 : L0 { k4 : false , id : reduce(a=44 ,b IN []|a) } ) - [ r3 : T0 { id : CASE WHEN FALSE THEN NULL ELSE 45 END } ] - ( n4 { id : 46 } ) RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a1 
***********************
51、 EXCEPTIONS in:memgraph_database44
Can't have null literal properties inside merge (anon1.k2)!
CREATE ({k2:NULL, id:93})<-[r0 :T1{id:94}]-({id:95}) CREATE p0=({id:96})-[r1 :T1{id:97}]->( :L1{id:98})<-[ :T0{k34:reduce(a=true,b IN [false]|a), id:99}]-({id:100}) MERGE ({id:101})-[r2 :T1{id:102}]-(n0 :L0{id:103}) RETURN (r2.k46) AS a0, n0 AS a1 ORDER BY reduce(a='2pUlJc0',b IN [(n0.k3)]|b)
CREATE ( { k2 : NULL , id : 93 } ) < - [ r0 : T1 { id : 94 } ] - ( { id : 95 } ) CREATE p0 = ( { id : 96 } ) - [ r1 : T1 { id : 97 } ] - > ( : L1 { id : 98 } ) < - [ : T0 { k34 : reduce ( a = true , b IN [ false ] | a ) , id : CASE WHEN FALSE THEN NULL ELSE 99 END } ] - ( { id : 100 } ) WITH * UNWIND [NULL] as l0 MERGE ( { id : 101 } ) - [ r2 : T1 { id : 102 } ] - ( n0 : L0 { id : 103 } ) RETURN ( r2 . k46 ) AS a0 , n0 AS a1 ORDER BY reduce(a='2pUlJc0',b IN [(n0.k3)]|b) 
***********************
52、 EXCEPTIONS in:memgraph_database44
Can't have null literal properties inside merge (n0.k4)!
MERGE ({id:104})-[r1 :T3{id:105}]-(n2{id:106}) SET n2.k='VGu' SET n2.k=31371496 RETURN CASE WHEN NULL THEN 'M' END AS a0, n2 AS a1 SKIP 0 LIMIT 1 UNION CREATE (n0{k4:NULL, id:107})<-[r0 :T1{id:108}]-(n1{id:109})-[r1 :T3{id:110}]->({id:111}) CREATE ({id:112}) MERGE (n2{id:113})-[r2 :T3{k57:1140787980, id:114}]-({id:115}) RETURN n2 AS a0, n2 AS a1
MERGE ( { id : CASE WHEN TRUE THEN 104 END } ) - [ r1 : T3 { id : reduce(a=105 ,b IN []|a) } ] - ( n2 { id : 106 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() SET n2 . k = reduce(a='VGu' ,b IN []|a) SET (NULL).FALSE=1 SET n2 . k = 31371496 RETURN CASE WHEN NULL THEN 'M' END AS a0 , n2 AS a1 SKIP 0 LIMIT 1 UNION CREATE (n0{ k4 : NULL , id : 107 } )CREATE (n0)< - [ r0 : T1 { id : 108 } ] - ( n1 { id : 109 } ) - [ r1 : T3 { id : 110 } ] - > ( { id : 111 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { id : 112 } ) WITH * MERGE ( n2 { id : 113 } ) - [ r2 : T3 { k57 : reduce(a=1140787980 ,b IN []|a) , id : CASE WHEN FALSE THEN NULL ELSE 114 END } ] - ( { id : 115 } ) WITH * UNWIND [1] as l0 RETURN n2 AS a0 , n2 AS a1 
***********************
53、 EXCEPTIONS in:memgraph_database45
Can't have null literal properties inside merge (n1.k4)!
WITH NULL AS a0 ORDER BY NULL, a0 CREATE (n0{id:24})<-[ :T4{id:25}]-(n1{k4:NULL, id:26})<-[ :T2{id:27}]-(n2{id:28}), p0=({id:29})-[ :T5{k62:false, id:30}]->({k23:15465436, id:31}) MERGE (n3{id:32})<-[r0 :T4{k55:-518808657, id:33}]-(n4{k3:'wDmw', id:34})<-[r1 :T2{id:35}]-(n5 :L3{k20:780256444, id:36}) RETURN 1 AS a1, r0 AS a2
WITH NULL AS a0 ORDER BY NULL , CASE WHEN TRUE THEN a0 END CREATE ( n0 { id : 24 } ) < - [ : T4 { id : 25 } ] - ( n1 { k4 : NULL , id : 26 } ) < - [ : T2 { id : reduce(a=27 ,b IN []|a) } ] - ( n2 { id : 28 } ) CREATE (m0{ id : CASE WHEN FALSE THEN NULL ELSE 29 END } )CREATE (m0)- [ : T5 { k62 : CASE WHEN TRUE THEN false END , id : 30 } ] - > ( { k23 : reduce(a=15465436 ,b IN []|a) , id : 31 } ) WITH * MERGE ( n3 { id : 32 } ) < - [ r0 : T4 { k55 : -518808657 , id : 33 } ] - ( n4 { k3 : reduce(a='wDmw' ,b IN []|a) , id : 34 } ) < - [ r1 : T2 { id : 35 } ] - ( n5 : L3 { k20 : 780256444 , id : 36 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN DISTINCT 1 AS a1 , r0 AS a2 
***********************
54、 EXCEPTIONS in:memgraph_database45
Can't have null literal properties inside merge (n0.k15)!
CREATE ({k18:(-1056091345+-1966034747), id:69}), (n0{k15:NULL, id:70})-[r0 :T5{id:71}]->({id:72}) CREATE ({id:73})-[r1 :T5{k59:'1', id:74}]->({id:75})-[r2 :T5{k62:false, id:76}]->({k20:NULL, id:77}) MERGE ({k14:1616388029, id:78})-[r3 :T5{id:79}]->(n1{id:80}) RETURN * SKIP 1
CREATE ( { k18 : ( reduce(a=-1056091345 + -1966034747 ,b IN []|a) ) , id : 69 } ) CREATE (n0{ k15 : NULL , id : reduce(a=70 ,b IN []|a) } )CREATE (n0)- [ r0 : T5 { id : 71 } ] - > ( { id : 72 } ) CREATE (m0{ id : CASE WHEN FALSE THEN NULL ELSE 73 END } )CREATE (m0)- [ r1 : T5 { k59 : '1' , id : 74 } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 75 END } ) - [ r2 : T5 { k62 : false , id : 76 } ] - > ( { k20 : CASE WHEN TRUE THEN NULL END , id : 77 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( { k14 : CASE WHEN TRUE THEN 1616388029 END , id : 78 } ) - [ r3 : T5 { id : 79 } ] - > ( n1 { id : 80 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN * ORDER BY TRUE SKIP 1 
***********************
55、 EXCEPTIONS in:memgraph_database45
Can't have null literal properties inside merge (anon1.k15)!
FOREACH(a4 IN [NULL]|CREATE ( :L2{k15:NULL, id:89})-[r1 :T5{k58:false, id:90}]->({id:91})-[ :T5{id:92}]->({id:93}) MERGE ( :L3 :L0{k4:990074579, id:94})-[ :T1{id:95}]->( :L4{id:96}) CREATE (n4{id:97})-[ :T1{k37:1595641789, id:98}]->({k27:'Fvs0vAjol', id:99}), (n5{id:100})) MERGE ( :L3 :L0{k1:1926830425, id:101}) MERGE p0=(n7{id:102}) RETURN n7 AS a5 SKIP 1
FOREACH ( a4 IN ([ NULL ] +[]) | CREATE (m0: L2 { k15 : NULL , id : 89 } )CREATE (m0)- [ r1 : T5 { k58 : false , id : 90 } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 91 END } ) - [ : T5 { id : 92 } ] - > ( { id : 93 } ) MERGE pp0=( : L3 : L0 { k4 : 990074579 , id : reduce(a=94 ,b IN []|a) } ) - [ : T1 { id : 95 } ] - > ( : L4 { id : 96 } ) CREATE ( n4 { id : 97 } ) - [ : T1 { k37 : 1595641789 , id : reduce(a=98 ,b IN []|a) } ] - > ( { k27 : ('Fvs0vAjol' +'') , id : 99 } ) CREATE ( n5 { id : 100 } ) ) WITH * UNWIND [1] as l0 MERGE ( : L3 : L0 { k1 : 1926830425 , id : 101 } ) SET (NULL).FALSE=1 MERGE p0 = ( n7 { id : 102 } ) RETURN n7 AS a5 SKIP 1 
***********************
56、 EXCEPTIONS in:memgraph_database45
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH p0=(n0) REMOVE n0.k2 RETURN p0 AS a0, endNode(relationships(p0)[abs(NULL)]) AS a1} OPTIONAL MATCH (a1)<-[r0]-(n0), (n1)-[ :T1{k39:NULL}]-(a1)-[ :T5{k60:NULL}]->(a1) MERGE (n2{id:143})-[ :T1{id:144}]->( :L4{k17:-1618234448, id:145})-[ :T5{k59:'l', id:146}]->(n3{id:147}) RETURN NULL AS a2, n0 AS a3 ORDER BY a2 DESC
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() MATCH p0 = ( n0 ) WITH * REMOVE n0 . k2 WITH * UNWIND [NULL] as l0 RETURN p0 AS a0 , CASE WHEN FALSE THEN NULL ELSE endNode ( relationships ( p0 ) [ abs ( NULL ) ] ) END AS a1 } OPTIONAL MATCH ( a1 ) < - [ r0 ] - ( n0 ) ,( n1 ) - [ : T1 { k39 : CASE WHEN TRUE THEN NULL END } ] - ( a1 ) - [ : T5 { k60 : NULL } ] - > ( a1 ) MERGE ( n2 { id : 143 } ) - [ : T1 { id : 144 } ] - > ( : L4 { k17 : CASE WHEN FALSE THEN NULL ELSE -1618234448 END , id : reduce(a=145 ,b IN []|a) } ) - [ : T5 { k59 : 'l' , id : 146 } ] - > ( n3 { id : CASE WHEN TRUE THEN 147 END } ) RETURN NULL AS a2 , n0 AS a3 ORDER BY a2 DESC 
***********************
57、 EXCEPTIONS in:memgraph_database49
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[r0]-(n1)|NULL]|MERGE (n2 :L0{k6:true, id:105}) CREATE p0=(n3{id:106}), ( :L0{id:107}) CREATE ( :L3{k10:'TARr', id:108}), p1=( :L0{k6:false, id:109})) MERGE p2=({k24:true, id:110})-[r1 :T5{k70:'U', id:111}]-(n4{id:112})-[r2 :T4{id:113}]->({id:114}) CREATE p3=(n5{k25:(r1.k69), id:115})<-[ :T5{id:116}]-(n6 :L1{k20:(-81806484/(r2.k65)), id:117}) RETURN 1 AS a1
FOREACH ( a0 IN [ ( n0 ) - [ r0 ] - ( n1 ) | NULL ] | MERGE ( n2 : L0 { k6 : CASE WHEN TRUE THEN true END , id : 105 } ) CREATE p0 = ( n3 { id : 106 } ) CREATE ( : L0 { id : 107 } ) CREATE ( : L3 { k10 : 'TARr' , id : reduce(a=108 ,b IN []|a) } ) CREATE p1 = ( : L0 { k6 : false , id : 109 } ) ) WITH * UNWIND [NULL] as l0 MERGE p2 = ( { k24 : true , id : 110 } ) - [ r1 : T5 { k70 : 'U' , id : 111 } ] - ( n4 { id : 112 } ) - [ r2 : T4 { id : 113 } ] - > ( { id : CASE WHEN TRUE THEN 114 END } ) CREATE p3 = ( n5 { k25 : ( r1 . k69 ) , id : 115 } ) < - [ : T5 { id : 116 } ] - ( n6 : L1 { k20 : ( -81806484 / ( r2 . k65 ) ) , id : reduce(a=117 ,b IN []|a) } ) RETURN 1 AS a1 
***********************
58、 EXCEPTIONS in:memgraph_database52
Can't have null literal properties inside merge (n0.k0)!
CREATE ({id:13}), p0=(n0 :L1{k0:NULL, id:14})<-[ :T1{k40:true, id:15}]-(n1{id:16}) MERGE ({id:17}) CREATE (n2{id:18})<-[r0 :T1{k38:NULL, id:19}]-(n3{id:20})-[r1 :T2{k48:NULL, id:21}]->({id:22}) RETURN 1 AS a0
CREATE ( { id : 13 } ) CREATE p0 = ( n0 : L1 { k0 : NULL , id : CASE WHEN TRUE THEN 14 END } ) < - [ : T1 { k40 : true , id : 15 } ] - ( n1 { id : 16 } ) WITH * UNWIND [NULL] as l0 MERGE pp0=( { id : 17 } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( n2 { id : 18 } ) < - [ r0 : T1 { k38 : NULL , id : 19 } ] - ( n3 { id : 20 } ) - [ r1 : T2 { k48 : NULL , id : 21 } ] - > ( { id : 22 } ) SET (NULL).FALSE=1 RETURN 1 AS a0 ORDER BY 1 
***********************
59、 EXCEPTIONS in:memgraph_database52
Can't have null literal properties inside merge (anon3.k51)!
CREATE (n0{id:23}), ( :L1{id:24})-[ :T3{k51:((false AND NULL) OR (NULL AND true)), id:25}]->({id:26}) MERGE ({k3:11692564, id:27})-[r0 :T3{id:28}]-(n1{id:29}) CREATE (n2{id:30})<-[ :T6{id:31}]-({id:32}), (n3{id:33})-[r1 :T4{k59:196379202, id:34}]->(n4{id:35}) RETURN n1 AS a0, 1 AS a1
CREATE ( n0 { id : 23 } ) CREATE ( : L1 { id : 24 } ) - [ : T3 { k51 : reduce(a=( ( reduce(a=false AND NULL ,b IN []|a) ) OR ( NULL AND true ) ) ,b IN []|a) , id : CASE WHEN FALSE THEN NULL ELSE 25 END } ] - > ( { id : reduce(a=26 ,b IN []|a) } ) MERGE ( { k3 : 11692564 , id : 27 } ) - [ r0 : T3 { id : 28 } ] - ( n1 { id : CASE WHEN TRUE THEN 29 END } ) CREATE ( n2 { id : 30 } ) < - [ : T6 { id : 31 } ] - ( { id : 32 } ) CREATE ( n3 { id : 33 } ) - [ r1 : T4 { k59 : CASE WHEN FALSE THEN NULL ELSE 196379202 END , id : 34 } ] - > ( n4 { id : 35 } ) REMOVE (NULL).FALSE RETURN n1 AS a0 , 1 AS a1 SKIP 1 LIMIT 1 
***********************
60、 EXCEPTIONS in:memgraph_database53
Can't have null literal properties inside merge (anon1.k54)!
CREATE (n0{id:8})<-[ :T3{k54:round((216877232/NULL)), id:9}]-({id:10}) MERGE (n1{id:11})<-[r0 :T2{id:12}]-(n2{id:13})-[r1 :T3{k55:-586260169, id:14}]-(n3{id:15}) DETACH DELETE n2  RETURN n3 AS a0, 1 AS a1
CREATE ({id:10})-[ : T3 { k54 : round ( ( reduce(a=216877232 / NULL ,b IN []|a) ) ) , id : reduce(a=9 ,b IN []|a) } ] ->( n0 { id : 8 } ) REMOVE (NULL).k MERGE ( n1 { id : 11 } ) < - [ r0 : T2 { id : 12 } ] - ( n2 { id : 13 } ) - [ r1 : T3 { k55 : -586260169 , id : 14 } ] - ( n3 { id : 15 } ) REMOVE (NULL).NULL DETACH DELETE n2 WITH * RETURN DISTINCT n3 AS a0 , 1 AS a1 
***********************
61、 EXCEPTIONS in:memgraph_database54
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH (n0 :L5{k28:-221493787})-[r0]->(n1) CREATE p0=({id:10}) RETURN r0 AS a0} MATCH (n2)-[a0]->(), p1=(n3) WHERE NULL SET n2.k=NULL RETURN a0 AS a1, NULL AS a2
CALL { WITH * MATCH ( n0 : L5 { k28 : CASE WHEN TRUE THEN -221493787 END } ) - [ r0 ] - > ( n1 ) WHERE TRUE WITH * CREATE p0 = ( { id : 10 } ) WITH * RETURN r0 AS a0 } MATCH ( n2 ) - [ a0 ] - > ( ) ,p1 = ( n3 ) WHERE NULL SET n2 . k = NULL RETURN DISTINCT a0 AS a1 , NULL AS a2 
***********************
62、 EXCEPTIONS in:memgraph_database54
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * MERGE (n1{id:39})<-[ :T2{id:40}]-({id:41})-[r1 :T2{id:42}]-({id:43}) SET n1.k=(r1.k55) RETURN 1 AS a2} UNWIND [reduce(a=NULL,b IN [NULL, NULL]|b), NULL] AS a3 CREATE (n2{id:44}), p0=(n3{id:45})<-[r2 :T3{k62:NULL, id:46}]-(n4{id:47}) RETURN DISTINCT 1 AS a4, ((-2010183181+a2)*(a2+a2)) AS a5
CALL { WITH * MERGE ( n1 { id : 39 } ) < - [ : T2 { id : 40 } ] - ( { id : 41 } ) - [ r1 : T2 { id : reduce(a=42 ,b IN []|a) } ] - ( { id : 43 } ) REMOVE (NULL).FALSE SET n1 . k = ( r1 . k55 ) RETURN 1 AS a2 } OPTIONAL MATCH ()-[:TYPE]-() UNWIND [ CASE WHEN FALSE THEN NULL ELSE reduce ( a = NULL , b IN [ NULL , NULL ] | b ) END , NULL ] AS a3 OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n2 { id : 44 } ) CREATE p0=(n4{id:47})-[ r2 : T3 { k62 : NULL , id : CASE WHEN TRUE THEN 46 END } ] ->( n3 { id : 45 } ) RETURN DISTINCT 1 AS a4 , ( ( reduce(a=-2010183181 + a2 ,b IN []|a) ) * ( reduce(a=a2 + a2 ,b IN []|a) ) ) AS a5 SKIP 1 
***********************
63、 EXCEPTIONS in:memgraph_database54
Can't have null literal properties inside merge (anon8.k30)!
MERGE (n0{id:114}) MERGE ({id:115})-[r0 :T3{id:116}]->(n1{id:117}) SET n0.k=false RETURN n1 AS a0, (r0.k59) AS a1 ORDER BY NULL DESC SKIP 1 UNION ALL CREATE (n0{id:118})<-[ :T2{id:119}]-(n1{id:120})<-[ :T2{id:121}]-( :L5{id:122}), p0=({k30:NULL, id:123})-[ :T0{k44:(NOT true), id:124}]->(n2{id:125})-[ :T3{id:126}]->(n3{k11:(substring(NULL, abs(NULL), abs(((981041480/1470424697)-(-626533167*594505879))))+'2'), id:127}) CREATE ({id:128}) MERGE (n4{id:129})<-[r0 :T3{id:130}]-(n5{id:131})-[r1 :T2{k56:'y', id:132}]->({id:133}) RETURN 1 AS a0, n4 AS a1
MERGE ( n0 { id : 114 } ) WITH * UNWIND [NULL] as l0 MERGE ( { id : reduce(a=115 ,b IN []|a) } ) - [ r0 : T3 { id : 116 } ] - > ( n1 { id : 117 } ) SET n0 . k = reduce(a=false ,b IN []|a) WITH * RETURN CASE WHEN TRUE THEN n1 END AS a0 , ( r0 . k59 ) AS a1 ORDER BY NULL DESC ,TRUE SKIP 1 UNION ALL CREATE ( n0 { id : CASE WHEN TRUE THEN 118 END } ) < - [ : T2 { id : 119 } ] - ( n1 { id : 120 } ) < - [ : T2 { id : CASE WHEN TRUE THEN 121 END } ] - ( : L5 { id : 122 } ) CREATE p0 = ( { k30 : NULL , id : reduce(a=123 ,b IN []|a) } ) - [ : T0 { k44 : ( NOT true ) , id : 124 } ] - > ( n2 { id : reduce(a=125 ,b IN []|a) } ) - [ : T3 { id : 126 } ] - > ( n3 { k11 : CASE WHEN FALSE THEN NULL ELSE ( CASE WHEN FALSE THEN NULL ELSE substring ( CASE WHEN FALSE THEN NULL ELSE NULL END , abs ( NULL ) , abs ( ( reduce(a=( 981041480 / 1470424697 ) - ( -626533167 * 594505879 ) ,b IN []|a) ) ) ) + '2' END ) END , id : 127 } ) WITH * CREATE ( { id : 128 } ) MERGE pp0=( n4 { id : 129 } ) < - [ r0 : T3 { id : 130 } ] - ( n5 { id : 131 } ) - [ r1 : T2 { k56 : 'y' , id : reduce(a=132 ,b IN []|a) } ] - > ( { id : 133 } ) WITH * RETURN 1 AS a0 , n4 AS a1 
***********************
64、 EXCEPTIONS in:memgraph_database56
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE ( :L3 :L5{k33:-2071150531, id:91}) CREATE p0=({id:92})-[ :T4{id:93}]->({id:94}), p1=(n1 :L4 :L2{id:95})-[ :T4{id:96}]->({id:97})-[r0 :T1{id:98}]->(n2{id:99}) RETURN properties(nodes(NULL)[abs(867438163)]) AS a2, 1 AS a3} OPTIONAL MATCH ()-[ :T5{k74:NULL}]-(n3) WHERE (NULL ENDS WITH NULL) DETACH DELETE n3,NULL  RETURN 1 AS a4 ORDER BY NULL SKIP 0
CALL { WITH * REMOVE (NULL).TRUE MERGE pp0=( : L3 : L5 { k33 : -2071150531 , id : 91 } ) CREATE (m0{ id : 92 } )CREATE (m0)- [ : T4 { id : 93 } ] - > ( { id : 94 } ) CREATE p1 = ( n1 : L4 : L2 { id : 95 } ) - [ : T4 { id : 96 } ] - > ( { id : 97 } ) - [ r0 : T1 { id : 98 } ] - > ( n2 { id : 99 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN reduce(a=properties ( nodes ( NULL ) [ abs ( reduce(a=867438163 ,b IN []|a) ) ] ) ,b IN []|a) AS a2 , 1 AS a3 } WITH * OPTIONAL MATCH ( ) - [ : T5 { k74 : NULL } ] - ( n3 ) WHERE ( NULL ENDS WITH NULL ) WITH * DETACH DELETE n3 , NULL RETURN 1 AS a4 ORDER BY NULL SKIP reduce(a=0 ,b IN []|a) 
***********************
65、 EXCEPTIONS in:memgraph_database57
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
UNWIND [(n1)-[r1]-(n1 :L3) WHERE (n1.k22)|(n1.k24)] AS a4 MATCH p0=(n3)-[r1]->(n4)<-[r2]-() WHERE (NULL > 'zm') SET n3.k=NULL RETURN 1 AS a5, p0 AS a6
UNWIND [ ( n1 ) - [ r1 ] - ( n1 : L3 ) WHERE ( n1 . k22 ) | CASE WHEN FALSE THEN NULL ELSE ( n1 . k24 ) END ] AS a4 MATCH p0 = (n3)-[*0..0]-( n3 ) - [ r1 ] - > ( n4 ) < - [ r2 ] - ( ) WHERE ( NULL > 'zm' ) OPTIONAL MATCH ()-[:TYPE]-() SET n3 . k = NULL RETURN 1 AS a5 , reduce(a=p0 ,b IN []|a) AS a6 
***********************
66、 EXCEPTIONS in:memgraph_database58
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * FOREACH(a0 IN NULL|MERGE p0=(n2{id:37})-[ :T3{id:38}]-({id:39})<-[r0 :T0{id:40}]-({id:41}) CREATE ({id:42})-[r1 :T3{id:43}]->({id:44})<-[r2 :T0{k43:round(NULL), id:45}]-({id:46}), p1=(n3{k28:NULL, id:47}) CREATE ({id:48}), (n4{id:49})-[r3 :T4{k66:NULL, id:50}]->(n5{k5:(round(2005078092)*445462472), k12:NULL, id:51})<-[ :T1{id:52}]-({id:53})) CREATE (n6{id:54})-[r4 :T3{id:55}]->({id:56}) RETURN 1 AS a1, 1 AS a2 LIMIT 0} UNWIND NULL AS a3 CREATE ( :L1 :L2{id:57})-[ :T4{k64:'S', id:58}]->({id:59})-[ :T3{id:60}]->({id:61}), ({k9:false, id:62})<-[ :T4{id:63}]-({id:64})-[ :T3{id:65}]->(n7{id:66}) RETURN min(NULL) AS a4
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() FOREACH ( a0 IN NULL | MERGE p0 = ( n2 { id : reduce(a=37 ,b IN []|a) } ) - [ : T3 { id : 38 } ] - ( { id : 39 } ) < - [ r0 : T0 { id : 40 } ] - ( { id : 41 } ) REMOVE (NULL).TRUE CREATE ( { id : 42 } ) - [ r1 : T3 { id : 43 } ] - > ( { id : 44 } ) < - [ r2 : T0 { k43 : round ( NULL ) , id : 45 } ] - ( { id : 46 } ) CREATE p1 = ( n3 { k28 : NULL , id : 47 } ) CREATE ( { id : 48 } ) CREATE ( n4 { id : 49 } ) - [ r3 : T4 { k66 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 50 END } ] - > ( n5 { k5 : ( reduce(a=round ( 2005078092 ) * 445462472 ,b IN []|a) ) , k12 : NULL , id : 51 } ) < - [ : T1 { id : reduce(a=52 ,b IN []|a) } ] - ( { id : 53 } ) ) WITH * CREATE ( n6 { id : 54 } ) - [ r4 : T3 { id : 55 } ] - > ( { id : 56 } ) CREATE (c0{id:-1}) DELETE (c0) RETURN CASE WHEN TRUE THEN 1 END AS a1 , 1 AS a2 LIMIT 0 } UNWIND [1] as l0 UNWIND reduce(a=NULL ,b IN []|a) AS a3 OPTIONAL MATCH ()-[:TYPE]-() CREATE ( : L1 : L2 { id : 57 } ) - [ : T4 { k64 : 'S' , id : 58 } ] - > ( { id : reduce(a=59 ,b IN []|a) } ) - [ : T3 { id : 60 } ] - > ( { id : 61 } ) CREATE ( { k9 : reduce(a=false ,b IN []|a) , id : 62 } ) < - [ : T4 { id : 63 } ] - ( { id : 64 } ) - [ : T3 { id : 65 } ] - > ( n7 { id : 66 } ) SET (NULL).k=1 RETURN min ( NULL ) AS a4 
***********************
67、 EXCEPTIONS in:memgraph_database58
Can't have null literal properties inside merge (anon1.k12)!
CREATE p0=( :L1 :L2{k12:NULL, id:96}), ( :L1 :L2{id:97})-[ :T4{id:98}]->(n1{id:99})-[r1 :T3{id:100}]->(n2{id:101}) MERGE ( :L1{k7:false, id:102})<-[ :T4{id:103}]-(n3{id:104})-[r2 :T3{id:105}]->(n4{id:106}) DETACH DELETE n4,n3  RETURN [-1857518806, (1941355633-(NULL+NULL))] AS a1
CREATE p0 = ( : L1 : L2 { k12 : NULL , id : 96 } ) CREATE (m0: L1 : L2 { id : 97 } )CREATE (m0)- [ : T4 { id : 98 } ] - > ( n1 { id : 99 } ) - [ r1 : T3 { id : 100 } ] - > ( n2 { id : CASE WHEN TRUE THEN 101 END } ) WITH * MERGE ( : L1 { k7 : false , id : 102 } ) < - [ : T4 { id : CASE WHEN FALSE THEN NULL ELSE 103 END } ] - ( n3 { id : 104 } ) - [ r2 : T3 { id : CASE WHEN TRUE THEN 105 END } ] - > ( n4 { id : 106 } ) DETACH DELETE n4 , n3 WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN ([ -1857518806 , ( 1941355633 - ( NULL + NULL ) ) ] +[]) AS a1 
***********************
68、 EXCEPTIONS in:memgraph_database64
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * FOREACH(a0 IN NULL|CREATE ({id:15}), ({k28:round(-486507568), id:16}) CREATE p0=({id:17})-[ :T1{id:18}]->({id:19}), (n0{id:20}) MERGE ({id:21})-[r0 :T1{id:22}]-({id:23})-[r1 :T2{id:24}]-(n1{id:25})) MERGE (n2{id:26}) RETURN 1 AS a1, n2 AS a2} MATCH (n3 :L4)-[ :T2{k52:'t'}]-(n4) DETACH DELETE n4  RETURN 1 AS a3, (n3.k24) AS a4
CALL { WITH * FOREACH ( a0 IN NULL | CREATE ( { id : 15 } ) CREATE ( { k28 : round ( -486507568 ) , id : 16 } ) CREATE (c0{id:-1}) DELETE (c0) CREATE p0 = ( { id : CASE WHEN FALSE THEN NULL ELSE 17 END } ) - [ : T1 { id : 18 } ] - > ( { id : 19 } ) CREATE ( n0 { id : 20 } ) MERGE pp0=( { id : 21 } ) - [ r0 : T1 { id : 22 } ] - ( { id : 23 } ) - [ r1 : T2 { id : 24 } ] - ( n1 { id : 25 } ) ) MERGE ( n2 { id : 26 } ) RETURN 1 AS a1 , CASE WHEN FALSE THEN NULL ELSE n2 END AS a2 ORDER BY NULL } WITH * MATCH ( n3 : L4 ) - [ : T2 { k52 : reduce(a='t' ,b IN []|a) } ] - ( n4 ) DELETE (NULL) DETACH DELETE n4 WITH * RETURN reduce(a=1 ,b IN []|a) AS a3 , reduce(a=( n3 . k24 ) ,b IN []|a) AS a4 
***********************
69、 EXCEPTIONS in:memgraph_database64
Can't have null literal properties inside merge (anon1.k26)!
CREATE ( :L4{k26:NULL, id:43}), (n0 :L4 :L5{id:44}) MERGE (n1 :L5{k27:'k', id:45}) DETACH DELETE n1  RETURN 1 AS a0, 1 AS a1
CREATE ( : L4 { k26 : reduce(a=NULL ,b IN []|a) , id : 43 } ) CREATE ( n0 : L4 : L5 { id : 44 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n1 : L5 { k27 : CASE WHEN FALSE THEN NULL ELSE 'k' END , id : reduce(a=45 ,b IN []|a) } ) WITH * UNWIND [NULL] as l0 DETACH DELETE n1 RETURN 1 AS a0 , 1 AS a1 LIMIT 1 
***********************
70、 EXCEPTIONS in:memgraph_database65
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * MERGE (n0{id:52})-[r0 :T3{id:53}]-(n1{id:54}) SET n0.k=(r0.k67) RETURN n1 AS a1, '9' AS a2} UNWIND NULL AS a3 SET a1.k='6qoBvDX0K' RETURN a1 AS a4, 1 AS a5
CALL { WITH * UNWIND [1] as l0 MERGE ( n0 { id : 52 } ) - [ r0 : T3 { id : 53 } ] - ( n1 { id : CASE WHEN TRUE THEN 54 END } ) WITH * UNWIND [NULL] as l1 SET n0 . k = ( CASE WHEN TRUE THEN r0 . k67 END ) RETURN CASE WHEN FALSE THEN NULL ELSE n1 END AS a1 , '9' AS a2 } CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND NULL AS a3 CREATE (c1{id:-1}) DELETE (c1) SET a1 . k = ('6qoBvDX0K' +'') CREATE (c2{id:-1}) DELETE (c2) RETURN a1 AS a4 , reduce(a=1 ,b IN []|a) AS a5 
***********************
71、 EXCEPTIONS in:memgraph_database65
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH (n0)-[*..2]->(n1), ( :L0) CREATE (n2 :L0{id:55})-[r0 :T4{id:56}]->(n3{id:57})-[r1 :T3{id:58}]->({id:59}) RETURN *} UNWIND NULL AS a1 CREATE p0=( :L0{id:60})-[ :T4{id:61}]->({id:62}), p1=({k1:reverse(NULL), id:63})-[r2 :T4{k73:149730194, id:64}]->({id:65}) RETURN 1 AS a2
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) WITH * OPTIONAL MATCH ( n0 ) - [ * .. 2 ] - > ( n1 ) ,( : L0 ) OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n2 : L0 { id : 55 } ) - [ r0 : T4 { id : reduce(a=56 ,b IN []|a) } ] - > ( n3 { id : 57 } ) - [ r1 : T3 { id : CASE WHEN TRUE THEN 58 END } ] - > ( { id : 59 } ) SET (NULL).FALSE=1 RETURN * } WITH * UNWIND reduce(a=NULL ,b IN []|a) AS a1 CREATE p0 = ( : L0 { id : 60 } ) - [ : T4 { id : CASE WHEN TRUE THEN 61 END } ] - > ( { id : CASE WHEN FALSE THEN NULL ELSE 62 END } ) CREATE p1 = ( { k1 : reverse ( NULL ) , id : 63 } ) - [ r2 : T4 { k73 : CASE WHEN TRUE THEN 149730194 END , id : 64 } ] - > ( { id : 65 } ) RETURN 1 AS a2 
***********************
72、 EXCEPTIONS in:memgraph_database65
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * FOREACH(a0 IN NULL|MERGE p0=(n0{id:76}) CREATE ( :L2{id:77}) MERGE (n1 :L1{k8:true, id:78})) MERGE ({id:79}) RETURN 1 AS a1, 1 AS a2} MATCH (n2) DETACH DELETE n2  RETURN *, 1 AS a3
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) FOREACH ( a0 IN NULL | MERGE p0 = ( n0 { id : 76 } ) CREATE ( : L2 { id : 77 } ) MERGE pp0=( n1 : L1 { k8 : reduce(a=true ,b IN []|a) , id : 78 } ) ) SET (NULL).NULL=1 MERGE ( { id : 79 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a1 , 1 AS a2 } OPTIONAL MATCH ()-[:TYPE]-() MATCH (n2) WITH * DETACH DELETE n2 DELETE NULL RETURN DISTINCT * , CASE WHEN FALSE THEN NULL ELSE 1 END AS a3 SKIP 1 
***********************
73、 EXCEPTIONS in:memgraph_database66
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * WITH * MERGE (n2{id:12})-[r0 :T4{id:13}]->(n3{id:14}) RETURN r0 AS a1} MATCH (n4) SET n4.k=NULL RETURN 1 AS a2, n4 AS a3
CALL { WITH * WITH * MERGE ( n2 { id : 12 } ) - [ r0 : T4 { id : 13 } ] - > ( n3 { id : 14 } ) CREATE (c0{id:-1}) DELETE (c0) RETURN DISTINCT r0 AS a1 ORDER BY FALSE } CREATE (c1{id:-1}) DELETE (c1) WITH * MATCH ( n4 ) WITH * OPTIONAL MATCH ()-[:TYPE]-() FOREACH(f in [1]|SET n4 . k = NULL ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a2 , n4 AS a3 LIMIT 1 
***********************
74、 EXCEPTIONS in:memgraph_database67
Can't have null literal properties inside merge (n0.k6)!
CREATE (n0{k6:NULL, id:23})<-[ :T6{k65:reduce(a=-1412563766,b IN [-1536424444, NULL]|b), id:24}]-({id:25}), ({id:26})<-[ :T6{id:27}]-({id:28}) MERGE (n1 :L1{id:29})-[r0 :T1{id:30}]-({id:31}) MERGE ( :L1{id:32})<-[ :T1{id:33}]-({id:34}) RETURN (n1.k6) AS a0, 1 AS a1
CREATE (n0{ k6 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 23 END } )CREATE (n0)< - [ : T6 { k65 : reduce ( a = CASE WHEN TRUE THEN -1412563766 END , b IN ([ -1536424444 , NULL ] +[]) | b ) , id : 24 } ] - ( { id : 25 } ) CREATE ( { id : 26 } ) < - [ : T6 { id : CASE WHEN TRUE THEN 27 END } ] - ( { id : 28 } ) MERGE ( n1 : L1 { id : 29 } ) - [ r0 : T1 { id : 30 } ] - ( { id : 31 } ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( : L1 { id : 32 } ) < - [ : T1 { id : 33 } ] - ( { id : 34 } ) RETURN ( n1 . k6 ) AS a0 , 1 AS a1 ORDER BY FALSE 
***********************
75、 EXCEPTIONS in:memgraph_database68
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE p0=(n0{k5:NULL, k7:reverse(NULL), id:20}) CREATE ({k26:true, id:21}), (n1 :L4{id:22})-[r0 :T4{id:23}]->(n2{id:24})<-[ :T4{id:25}]-( :L4{id:26}) RETURN 1 AS a0} OPTIONAL MATCH (n3)-[r1]-()-[]-(n4) DETACH DELETE n4,n3  RETURN 1 AS a1, 1 AS a2 LIMIT 0
CALL { WITH * CREATE p0 = ( n0 { k5 : NULL , k7 : reverse ( NULL ) , id : 20 } ) CREATE ( { k26 : true , id : 21 } ) CREATE ( n1 : L4 { id : 22 } ) - [ r0 : T4 { id : CASE WHEN FALSE THEN NULL ELSE 23 END } ] - > ( n2 { id : 24 } ) < - [ : T4 { id : 25 } ] - ( : L4 { id : 26 } ) RETURN DISTINCT 1 AS a0 } CREATE (c0{id:-1}) DELETE (c0) WITH * OPTIONAL MATCH ( n3 ) - [ r1 ] - ( ) - [ ] - ( n4 ) OPTIONAL MATCH ()-[:TYPE]-() DETACH DELETE n4 , n3 WITH * RETURN reduce(a=1 ,b IN []|a) AS a1 , 1 AS a2 LIMIT 0 
***********************
76、 EXCEPTIONS in:memgraph_database68
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE (n0{id:40}), (n1 :L4{id:41})<-[r0 :T3{k52:NULL, id:42}]-({id:43})<-[ :T3{id:44}]-({id:45}) CREATE ({k26:(NULL <= NULL), id:46})<-[ :T3{id:47}]-({k6:NULL, id:48}) RETURN 1 AS a0} OPTIONAL MATCH ()<-[*..2]-(n2 :L4), (n3)<-[]-(n4)-[*0..1]->(n5) CREATE ( :L0 :L1{id:49})<-[ :T3{k51:NULL, id:50}]-( :L4{id:51})<-[ :T3{id:52}]-({k3:NULL, id:53}) RETURN (n2.k25) AS a1, n3 AS a2 LIMIT 1
CALL { WITH * UNWIND [1] as l0 CREATE ( n0 { id : 40 } ) CREATE ( n1 : L4 { id : CASE WHEN FALSE THEN NULL ELSE 41 END } ) < - [ r0 : T3 { k52 : NULL , id : 42 } ] - ( { id : 43 } ) < - [ : T3 { id : 44 } ] - ( { id : 45 } ) WITH * CREATE ( { k26 : reduce(a=( reduce(a=NULL <= NULL ,b IN []|a) ) ,b IN []|a) , id : 46 } ) < - [ : T3 { id : reduce(a=47 ,b IN []|a) } ] - ( { k6 : NULL , id : CASE WHEN TRUE THEN 48 END } ) RETURN 1 AS a0 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH ( ) < - [ * .. 2 ] - ( n2 : L4 ) ,( n3 ) < - [ ] - ( n4 ) - [ * 0 .. 1 ] - > ( n5 ) CREATE ( : L0 : L1 { id : 49 } ) < - [ : T3 { k51 : NULL , id : 50 } ] - ( : L4 { id : 51 } ) < - [ : T3 { id : CASE WHEN TRUE THEN 52 END } ] - ( { k3 : NULL , id : 53 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN ( n2 . k25 ) AS a1 , n3 AS a2 LIMIT 1 
***********************
77、 EXCEPTIONS in:memgraph_database68
Can't have null literal properties inside merge (anon1.k53)!
CREATE p0=(n0 :L3 :L4{id:143})-[ :T3{k53:NULL, id:144}]->(n1 :L0 :L1{id:145}), (n2 :L4{id:146}) CREATE ({id:147}), p1=(n3 :L1{k8:reverse('T'), id:148}) MERGE (n4{k26:true, id:149})-[r0 :T4{k59:'JceDQ', id:150}]-(n5{k25:'L', id:151}) RETURN 1 AS a0, 1 AS a1
CREATE p0 = ( n0 : L3 : L4 { id : 143 } ) - [ : T3 { k53 : CASE WHEN FALSE THEN NULL ELSE NULL END , id : 144 } ] - > ( n1 : L0 : L1 { id : 145 } ) CREATE ( n2 : L4 { id : 146 } ) WITH * UNWIND [NULL] as l0 CREATE ( { id : 147 } ) CREATE p1 = ( n3 : L1 { k8 : reduce(a=reverse ( 'T' ) ,b IN []|a) , id : 148 } ) SET (NULL).NULL=1 MERGE ( n4 { k26 : true , id : 149 } ) - [ r0 : T4 { k59 : 'JceDQ' , id : reduce(a=150 ,b IN []|a) } ] - ( n5 { k25 : 'L' , id : 151 } ) WITH * RETURN 1 AS a0 , 1 AS a1 ORDER BY 1 
***********************
78、 EXCEPTIONS in:memgraph_database68
Can't have null literal properties inside merge (n6.k7)!
CREATE ( :L4{id:170})-[r2 :T3{k51:substring('5MOxnggfH', abs(NULL), abs((-743751255+-117612167))), id:171}]->(n6 :L0{k7:reverse(NULL), id:172})-[ :T2{k44:NULL, id:173}]->( :L1{k8:NULL, id:174}), (n7 :L3{id:175})-[r3 :T3{id:176}]->({id:177}) CREATE ( :L4{id:178}) MERGE p0=(n8 :L4{k22:false, k26:false, id:179})-[r4 :T3{id:180}]-(n9 :L1{id:181})-[r5 :T3{id:182}]->( :L3{k22:('v' <> 's2M'), id:183}) RETURN 1 AS a4, 1 AS a5
CREATE ( : L4 { id : reduce(a=170 ,b IN []|a) } ) - [ r2 : T3 { k51 : substring ( '5MOxnggfH' , abs ( NULL ) , reduce(a=abs ( ( -743751255 + -117612167 ) ) ,b IN []|a) ) , id : CASE WHEN FALSE THEN NULL ELSE 171 END } ] - > ( n6 : L0 { k7 : reverse ( NULL ) , id : 172 } ) - [ : T2 { k44 : NULL , id : reduce(a=173 ,b IN []|a) } ] - > ( : L1 { k8 : CASE WHEN TRUE THEN NULL END , id : 174 } ) CREATE ({id:177})<-[ r3 : T3 { id : 176 } ] -( n7 : L3 { id : 175 } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( : L4 { id : 178 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE p0 = ( n8 : L4 { k22 : false , k26 : false , id : reduce(a=179 ,b IN []|a) } ) - [ r4 : T3 { id : 180 } ] - ( n9 : L1 { id : 181 } ) - [ r5 : T3 { id : 182 } ] - > ( : L3 { k22 : ( 'v' <> 's2M' ) , id : reduce(a=183 ,b IN []|a) } ) RETURN 1 AS a4 , CASE WHEN FALSE THEN NULL ELSE 1 END AS a5 ORDER BY FALSE 
***********************
79、 EXCEPTIONS in:memgraph_database70
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0 :L4 :L1)-[]-()|true]|CREATE ( :L4 :L1{id:34}), (n4 :L4 :L1{id:35}) MERGE (n5{k20:true, id:36})-[ :T2{id:37}]-(n6{id:38}) CREATE (n7 :L1{k28:(reduce(a=((266754821+1172060392)/(1513167898/1113203814)),b IN [-702040181, NULL]|a)+1532656823), k7:NULL, id:39})) MERGE ({id:40})<-[ :T2{k45:-1911575207, id:41}]-( :L1{k7:'q', k17:true, id:42})-[ :T0{k34:reduce(a='PEWCIdo',b IN ['SJo4zV']|a+ b), id:43}]->({k27:false, id:44}) MERGE (n8{k7:'0', id:45}) RETURN 1 AS a1, -514494075 AS a2
FOREACH ( a0 IN [ ( n0 : L4 : L1 ) - [ ] - ( ) | true ] | CREATE ( : L4 : L1 { id : reduce(a=34 ,b IN []|a) } ) CREATE ( n4 : L4 : L1 { id : 35 } ) SET (NULL).TRUE=1 MERGE ( n5 { k20 : true , id : 36 } ) - [ : T2 { id : 37 } ] - ( n6 { id : 38 } ) REMOVE (NULL).k CREATE ( n7 : L1 { k28 : ( reduce ( a = ( ( reduce(a=266754821 + 1172060392 ,b IN []|a) ) / ( reduce(a=1513167898 / 1113203814 ,b IN []|a) ) ) , b IN CASE WHEN FALSE THEN NULL ELSE [ reduce(a=-702040181 ,b IN []|a) , reduce(a=NULL ,b IN []|a) ] END | a ) + 1532656823 ) , k7 : NULL , id : 39 } ) SET (NULL).FALSE=1 ) WITH * MERGE ( { id : 40 } ) < - [ : T2 { k45 : -1911575207 , id : CASE WHEN FALSE THEN NULL ELSE 41 END } ] - ( : L1 { k7 : 'q' , k17 : true , id : 42 } ) - [ : T0 { k34 : reduce ( a = 'PEWCIdo' , b IN [ 'SJo4zV' ] | a + b ) , id : reduce(a=43 ,b IN []|a) } ] - > ( { k27 : CASE WHEN TRUE THEN false END , id : 44 } ) SET (NULL).k=1 MERGE ( n8 { k7 : reduce(a='0' ,b IN []|a) , id : reduce(a=45 ,b IN []|a) } ) WITH * UNWIND [1] as l0 RETURN DISTINCT 1 AS a1 , reduce(a=-514494075 ,b IN []|a) AS a2 ORDER BY 1 
***********************
80、 EXCEPTIONS in:memgraph_database72
Can't have null literal properties inside merge (anon2.k41)!
CREATE ({id:8})-[ :T0{k41:NULL, id:9}]->(n0{id:10}), (n1{id:11})<-[r0 :T3{k54:true, id:12}]-(n2{id:13}) CREATE (n3{id:14})-[r1 :T3{k54:(NOT true), id:15}]->(n4{id:16})-[r2 :T0{id:17}]->({id:18}), ( :L2{k16:NULL, id:19}) MERGE ({k15:251175836, id:20}) RETURN 1 AS a0, 1 AS a1
CREATE (m0{ id : reduce(a=8 ,b IN []|a) } )CREATE (m0)- [ : T0 { k41 : NULL , id : reduce(a=9 ,b IN []|a) } ] - > ( n0 { id : 10 } ) CREATE ( n1 { id : 11 } ) < - [ r0 : T3 { k54 : true , id : 12 } ] - ( n2 { id : 13 } ) CREATE ({id:18})<-[ r2 : T0 { id : 17 } ] -(n4{id:16})<-[ r1 : T3 { k54 : ( NOT true ) , id : CASE WHEN FALSE THEN NULL ELSE 15 END } ] -( n3 { id : reduce(a=14 ,b IN []|a) } ) CREATE ( : L2 { k16 : NULL , id : 19 } ) MERGE ( { k15 : reduce(a=251175836 ,b IN []|a) , id : 20 } ) DETACH DELETE NULL RETURN 1 AS a0 , 1 AS a1 
***********************
81、 EXCEPTIONS in:memgraph_database72
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH (n0)-[]->(), ({k33:NULL})-[r0]-(n1)-[r1]->() MERGE (n2 :L5{k30:'p', id:70}) RETURN 1 AS a0, 1 AS a1 ORDER BY NULL, a0} OPTIONAL MATCH ()-[ :T0{k37:'Y'}]-(n3)<-[]-(n2), p0=()-[*0..0]-(n4) WHERE NULL MERGE ({id:71}) RETURN 1 AS a2, n2 AS a3
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() MATCH (n0),()-[m0]->(),(nn1),({k33:NULL})-[r0]-(n1)-[r1]->() WHERE exists((n0)-[m0]->(nn1)) OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n2 : L5 { k30 : 'p' , id : 70 } ) DELETE NULL RETURN 1 AS a0 , CASE WHEN FALSE THEN NULL ELSE 1 END AS a1 ORDER BY NULL, a0 SKIP 1 } WITH * OPTIONAL MATCH ( ) - [ : T0 { k37 : reduce(a='Y' ,b IN []|a) } ] - ( n3 ) < - [ ] - ( n2 ) ,p0 = ( ) - [ * 0 .. 0 ] - ( n4 ) WHERE NULL UNWIND [1] as l0 MERGE pp0=( { id : 71 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a2 , reduce(a=n2 ,b IN []|a) AS a3 
***********************
82、 EXCEPTIONS in:memgraph_database73
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE (n0{id:30})<-[r0 :T1{id:31}]-( :L4{id:32}), (n1{id:33}) CREATE ({id:34})<-[ :T1{id:35}]-(n2{k24:NULL, id:36}) RETURN 1 AS a0} MATCH ()-[r1 :T1{k44:false}]-(n3) WHERE false CREATE (n4{id:37}), (n5{id:38})<-[r2 :T1{id:39}]-({id:40}) RETURN DISTINCT 1 AS a1
CALL { WITH * WITH * CREATE ( n0 { id : 30 } ) < - [ r0 : T1 { id : 31 } ] - ( : L4 { id : 32 } ) CREATE ( n1 { id : reduce(a=33 ,b IN []|a) } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE (n2{k24:NULL, id:36})-[ : T1 { id : CASE WHEN TRUE THEN 35 END } ] ->( { id : 34 } ) WITH * UNWIND [NULL] as l0 RETURN 1 AS a0 SKIP 1 } UNWIND [NULL] as l1 MATCH ( ) - [ r1 : T1 { k44 : false } ] - ( n3 ) WHERE CASE WHEN TRUE THEN false END CREATE ( n4 { id : 37 } ) CREATE ( n5 { id : 38 } ) < - [ r2 : T1 { id : 39 } ] - ( { id : CASE WHEN FALSE THEN NULL ELSE 40 END } ) WITH * UNWIND [1] as l2 RETURN DISTINCT 1 AS a1 SKIP 1 LIMIT 1 
***********************
83、 EXCEPTIONS in:memgraph_database73
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
UNWIND [(n0 :L4)<-[r0]-(n1) WHERE (n0.k24)|n0] AS a0 CREATE (n2 :L4{k25:523140779, id:55}), ({id:56})<-[ :T1{id:57}]-({id:58}) CREATE (n3{id:59}) RETURN (((('jC7'+NULL)+'n')+substring(('z'+'q'), abs(NULL), abs(CASE WHEN false THEN -1938993640 END))) <= 'u') AS a1
UNWIND CASE WHEN TRUE THEN [ ( n0 : L4 ) < - [ r0 ] - ( n1 ) WHERE ( n0 . k24 ) | n0 ] END AS a0 CREATE ( n2 : L4 { k25 : 523140779 , id : 55 } ) CREATE ({id:58})-[ : T1 { id : 57 } ] ->( { id : 56 } ) DELETE NULL CREATE ( n3 { id : reduce(a=59 ,b IN []|a) } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN DISTINCT ( ( ( ( 'jC7' + NULL ) + 'n' ) + substring ( ( reduce(a='z' + 'q' ,b IN []|a) ) , abs ( reduce(a=NULL ,b IN []|a) ) , abs ( CASE WHEN false THEN -1938993640 END ) ) ) <= 'u' ) AS a1 
***********************
84、 EXCEPTIONS in:memgraph_database75
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * CREATE ({k19:'K', k16:CASE WHEN false THEN NULL END, id:9}) MERGE p0=(n3{id:10})-[r0 :T6{id:11}]-(n4{k9:'n', id:12}) RETURN 1 AS a2 SKIP 1} UNWIND relationships(NULL) AS a3 MERGE ( :L2{k21:'C', k13:false, id:13})<-[ :T2{id:14}]-({id:15}) RETURN collect(NULL) AS a4, 1 AS a5
CALL { WITH * SET (NULL).NULL=1 CREATE ( { k19 : 'K' , k16 : CASE WHEN reduce(a=false ,b IN []|a) THEN NULL END , id : 9 } ) MERGE p0 = ( n3 { id : 10 } ) - [ r0 : T6 { id : 11 } ] - ( n4 { k9 : 'n' , id : 12 } ) RETURN 1 AS a2 SKIP 1 } REMOVE (NULL).k WITH * UNWIND relationships ( NULL ) AS a3 CREATE (c0{id:-1}) DELETE (c0) MERGE ( : L2 { k21 : 'C' , k13 : false , id : 13 } ) < - [ : T2 { id : 14 } ] - ( { id : 15 } ) WITH * RETURN collect ( NULL ) AS a4 , 1 AS a5 
***********************
85、 EXCEPTIONS in:memgraph_database75
Can't have null literal properties inside merge (r0.k73)!
CREATE (n0{k14:true, id:64})<-[r0 :T5{k73:reduce(a=NULL,b IN [reverse('VZ4fSADj')]|a), id:65}]-({id:66}) MERGE (n4 :L2{id:67})<-[ :T2{id:68}]-({id:69}) SET n4.k=(n4.k16) RETURN (n4.k12) AS a0, n4 AS a1
CREATE ( n0 { k14 : true , id : CASE WHEN TRUE THEN 64 END } ) < - [ r0 : T5 { k73 : reduce ( a = NULL , b IN [ CASE WHEN TRUE THEN reverse ( 'VZ4fSADj' ) END ] | a ) , id : CASE WHEN TRUE THEN 65 END } ] - ( { id : 66 } ) CREATE (c0{id:-1}) DELETE (c0) MERGE ( n4 : L2 { id : 67 } ) < - [ : T2 { id : 68 } ] - ( { id : reduce(a=69 ,b IN []|a) } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() SET n4 . k = ( n4 . k16 ) WITH * UNWIND [NULL] as l0 RETURN ( n4 . k12 ) AS a0 , CASE WHEN TRUE THEN n4 END AS a1 
***********************
86、 EXCEPTIONS in:memgraph_database76
Can't have null literal properties inside merge (anon2.k81)!
FOREACH(a0 IN [[[{}]], NULL]|CREATE ( :L2{id:48})-[ :T6{k81:NULL, id:49}]->({id:50})-[ :T5{id:51}]->({id:52}), (n0{id:53}) MERGE (n1 :L2{k17:9418500, id:54})-[r0 :T3{k58:'qaXuArvRh', id:55}]-({id:56})-[r1 :T5{id:57}]->(n2{id:58}) CREATE ( :L3{id:59})-[r2 :T6{id:60}]->({k15:reduce(a=NULL,b IN [(NULL STARTS WITH 'k'), false]|a), id:61})-[ :T6{id:62}]->(n3{id:63}), p0=({k16:NULL, id:64})) CREATE (n4{id:65}), ( :L3{id:66})-[r3 :T6{k76:true, id:67}]->(n5{id:68})-[r4 :T6{id:69}]->({id:70}) MERGE ({id:71})<-[ :T3{id:72}]-(n6{id:73})-[ :T5{k71:'ez', id:74}]-(n7{id:75}) RETURN NULL AS a1, 1 AS a2
FOREACH ( a0 IN CASE WHEN TRUE THEN [ ([ CASE WHEN TRUE THEN [ { } ] END ] +[]) , reduce(a=NULL ,b IN []|a) ] END | CREATE ({id:52})<-[ : T5 { id : CASE WHEN FALSE THEN NULL ELSE 51 END } ] -({id:50})<-[ : T6 { k81 : NULL , id : 49 } ] -( : L2 { id : 48 } ) CREATE ( n0 { id : 53 } ) MERGE ( n1 : L2 { k17 : 9418500 , id : 54 } ) - [ r0 : T3 { k58 : 'qaXuArvRh' , id : 55 } ] - ( { id : 56 } ) - [ r1 : T5 { id : 57 } ] - > ( n2 { id : reduce(a=58 ,b IN []|a) } ) CREATE ( : L3 { id : 59 } ) - [ r2 : T6 { id : CASE WHEN FALSE THEN NULL ELSE 60 END } ] - > ( { k15 : reduce ( a = NULL , b IN ([ ( NULL STARTS WITH 'k' ) , false ] +[]) | reduce(a=a ,b IN []|a) ) , id : 61 } ) - [ : T6 { id : CASE WHEN FALSE THEN NULL ELSE 62 END } ] - > ( n3 { id : 63 } ) CREATE p0 = ( { k16 : NULL , id : 64 } ) REMOVE (NULL).k ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( n4 { id : 65 } ) CREATE ( : L3 { id : 66 } ) - [ r3 : T6 { k76 : true , id : 67 } ] - > ( n5 { id : 68 } ) - [ r4 : T6 { id : reduce(a=69 ,b IN []|a) } ] - > ( { id : 70 } ) WITH * UNWIND [NULL] as l0 MERGE ( { id : 71 } ) < - [ : T3 { id : 72 } ] - ( n6 { id : CASE WHEN TRUE THEN 73 END } ) - [ : T5 { k71 : 'ez' , id : 74 } ] - ( n7 { id : 75 } ) RETURN NULL AS a1 , reduce(a=1 ,b IN []|a) AS a2 
***********************
87、 EXCEPTIONS in:memgraph_database76
Can't have null literal properties inside merge (n2.k17)!
CREATE (n0{id:160}) CREATE ({id:161}), ({id:162})<-[ :T6{k80:reduce(a='l',b IN [NULL, substring('f', abs((1721895440+(1533482835+1304762817))), abs(0))]|a), id:163}]-(n1{id:164})-[ :T6{id:165}]->(n2{k17:round(NULL), k18:NULL, id:166}) MERGE (n3{id:167})-[r0 :T6{id:168}]->( :L2{id:169}) RETURN n3 AS a0
CREATE ( n0 { id : 160 } ) WITH * UNWIND [NULL] as l0 CREATE ( { id : 161 } ) CREATE ( { id : 162 } ) < - [ : T6 { k80 : reduce ( a = 'l' , b IN ([]+[ CASE WHEN TRUE THEN NULL END , CASE WHEN TRUE THEN substring ( 'f' , CASE WHEN FALSE THEN NULL ELSE abs ( ( reduce(a=1721895440 + ( 1533482835 + 1304762817 ) ,b IN []|a) ) ) END , abs ( 0 ) ) END ] )| a ) , id : 163 } ] - ( n1 { id : 164 } ) - [ : T6 { id : 165 } ] - > ( n2 { k17 : round ( NULL ) , k18 : reduce(a=NULL ,b IN []|a) , id : 166 } ) WITH * UNWIND [1] as l1 MERGE ( n3 { id : 167 } ) - [ r0 : T6 { id : reduce(a=168 ,b IN []|a) } ] - > ( : L2 { id : 169 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN n3 AS a0 
***********************
88、 EXCEPTIONS in:memgraph_database78
Can't have null literal properties inside merge (anon12.k40)!
FOREACH(a0 IN NULL|MERGE ({id:49})-[r0 :T1{k56:'ZHXL36ik', id:50}]-({id:51})-[r1 :T6{id:52}]-({id:53}) MERGE ({id:54}) CREATE ({id:55})<-[r2 :T4{id:56}]-({id:57})) CREATE (n3{id:58})<-[r3 :T1{id:59}]-({id:60})-[r4 :T6{id:61}]->(n4{id:62}), ( :L6{k40:CASE WHEN NULL THEN (false OR false) END, id:63})<-[r5 :T5{id:64}]-(n5{id:65})<-[r6 :T1{id:66}]-( :L1{k9:NULL, id:67}) MERGE (n6 :L1{id:68})-[ :T1{id:69}]->(n7 :L0{id:70})-[r7 :T5{id:71}]->( :L0{k1:-1855793239, id:72}) RETURN n7 AS a1
FOREACH ( a0 IN NULL | MERGE ( { id : CASE WHEN FALSE THEN NULL ELSE 49 END } ) - [ r0 : T1 { k56 : ('ZHXL36ik' +'') , id : CASE WHEN TRUE THEN 50 END } ] - ( { id : 51 } ) - [ r1 : T6 { id : CASE WHEN TRUE THEN 52 END } ] - ( { id : 53 } ) MERGE ( { id : 54 } ) DETACH DELETE NULL CREATE (m0{ id : CASE WHEN FALSE THEN NULL ELSE 55 END } )CREATE (m0)< - [ r2 : T4 { id : 56 } ] - ( { id : 57 } ) ) WITH * CREATE ( n3 { id : 58 } ) < - [ r3 : T1 { id : 59 } ] - ( { id : 60 } ) - [ r4 : T6 { id : 61 } ] - > ( n4 { id : 62 } ) CREATE ( :L1{k9:NULL, id:67})-[ r6 : T1 { id : 66 } ] ->(n5{id:65})-[ r5 : T5 { id : 64 } ] ->( : L6 { k40 : CASE WHEN NULL THEN ( reduce(a=false OR false ,b IN []|a) ) END , id : 63 } ) WITH * UNWIND [NULL] as l0 MERGE pp0=( n6 : L1 { id : 68 } ) - [ : T1 { id : 69 } ] - > ( n7 : L0 { id : 70 } ) - [ r7 : T5 { id : 71 } ] - > ( : L0 { k1 : CASE WHEN TRUE THEN -1855793239 END , id : 72 } ) RETURN n7 AS a1 
***********************
89、 EXCEPTIONS in:memgraph_database78
Can't have null literal properties inside merge (anon2.k0)!
CREATE p0=( :L1{id:85})<-[r2 :T4{id:86}]-( :L0{k0:NULL, id:87}), ({id:88})-[ :T1{id:89}]->({id:90}) CREATE (n4 :L1{id:91}) MERGE (n5{k0:'u', id:92})<-[ :T5{id:93}]-({id:94})<-[ :T1{k52:'t', id:95}]-(n6{k6:1439032729, id:96}) RETURN 1 AS a1, n5 AS a2 ORDER BY 1084274302, a1 DESC
CREATE p0 = ( : L1 { id : 85 } ) < - [ r2 : T4 { id : CASE WHEN TRUE THEN 86 END } ] - ( : L0 { k0 : NULL , id : 87 } ) CREATE ( { id : 88 } ) - [ : T1 { id : 89 } ] - > ( { id : 90 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( n4 : L1 { id : 91 } ) MERGE ( n5 { k0 : 'u' , id : reduce(a=92 ,b IN []|a) } ) < - [ : T5 { id : CASE WHEN TRUE THEN 93 END } ] - ( { id : 94 } ) < - [ : T1 { k52 : 't' , id : 95 } ] - ( n6 { k6 : 1439032729 , id : 96 } ) WITH * UNWIND [1] as l0 RETURN 1 AS a1 , n5 AS a2 ORDER BY 1084274302, a1 DESC ,TRUE DESC 
***********************
90、 EXCEPTIONS in:memgraph_database78
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH ( :L0) MERGE ( :L1{id:195})<-[r0 :T4{id:196}]-(n0{id:197}) RETURN 1 AS a0} OPTIONAL MATCH ()-[r1 :T5{k79:a0}]-(n1)<-[r2 :T5{k78:(r1.k80)}]-({k17:round(-974033389)}), (n2{k11:round((r1.k77))}) CREATE ({k1:(r2.k83), id:198})<-[r3 :T1{id:199}]-( :L1{id:200}) RETURN ((r2.k80) CONTAINS 'i') AS a1
CALL { WITH * MATCH ( : L0 ) MERGE ( : L1 { id : 195 } ) < - [ r0 : T4 { id : 196 } ] - ( n0 { id : CASE WHEN FALSE THEN NULL ELSE 197 END } ) REMOVE (NULL).FALSE RETURN 1 AS a0 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH ( ) - [ r1 : T5 { k79 : reduce(a=a0 ,b IN []|a) } ] - ( n1 ) < - [ r2 : T5 { k78 : CASE WHEN TRUE THEN ( r1 . k80 ) END } ] - ( { k17 : round ( -974033389 ) } ) ,( n2 { k11 : round ( ( r1 . k77 ) ) } ) WITH * CREATE ( { k1 : ( reduce(a=r2 . k83 ,b IN []|a) ) , id : 198 } ) < - [ r3 : T1 { id : 199 } ] - ( : L1 { id : 200 } ) RETURN ( ( r2 . k80 ) CONTAINS 'i' ) AS a1 LIMIT 1 
***********************
91、 EXCEPTIONS in:memgraph_database78
Can't have null literal properties inside merge (n1.k0)!
CREATE p0=({id:210})<-[ :T1{id:211}]-(n0{k10:-1753277371, id:212})-[ :T6{id:213}]->( :L1{id:214}) CREATE (n1 :L0{k0:NULL, id:215})-[r0 :T4{id:216}]->({id:217}) MERGE p1=(n2 :L1{id:218}) RETURN *, 1 AS a0 ORDER BY (('FY2JBQD'+type(relationships(NULL)[abs(-22563555)]))+(reduce(a=(n2.k7),b IN [CASE WHEN false THEN 'R' END]|b)+(n2.k7))), a0 DESC
CREATE p0 = ( { id : 210 } ) < - [ : T1 { id : 211 } ] - ( n0 { k10 : -1753277371 , id : 212 } ) - [ : T6 { id : 213 } ] - > ( : L1 { id : 214 } ) WITH * CREATE ({id:217})<-[ r0 : T4 { id : 216 } ] -( n1 : L0 { k0 : reduce(a=NULL ,b IN []|a) , id : 215 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE p1 = ( n2 : L1 { id : 218 } ) WITH * RETURN * , reduce(a=1 ,b IN []|a) AS a0 ORDER BY (('FY2JBQD'+type(relationships(NULL)[abs(-22563555)]))+(reduce(a=(n2.k7),b IN [CASE WHEN false THEN 'R' END]|b)+(n2.k7))), a0 DESC 
***********************
92、 EXCEPTIONS in:memgraph_database78
mismatch in nodes
MATCH (n0 :L2), (n1)-[*..2]->()-[r0]-(n2) WHERE true OPTIONAL MATCH ( :L1{k6:1901256701})<-[]-(n3)<-[]-(n4), ()<-[r1 :T4{k71:true}]-(n5)<-[r2]-(n6) DETACH DELETE r0,n4  RETURN n6 AS a0 UNION UNWIND [[NULL], NULL] AS a0 MATCH ()-[*0..]-(n0) CREATE p0=(n1 :L1{k6:1148481373, id:225})-[r0 :T6{id:226}]->({id:227})<-[ :T4{id:228}]-(n2{id:229}), ({id:230}) RETURN 1 AS a0
MATCH (n0 :L2),(n1)-[*..2]->()-[r0]-(n2) WHERE reduce(a=true ,b IN []|a) OPTIONAL MATCH ( : L1 { k6 : 1901256701 } ) < - [ ] - ( n3 ) < - [ ] - ( n4 ) ,( ) < - [ r1 : T4 { k71 : CASE WHEN TRUE THEN true END } ] - ( n5 ) < - [ r2 ] - ( n6 ) WITH * DETACH DELETE r0 , n4 SET (NULL).k=1 RETURN n6 AS a0 UNION UNWIND [ reduce(a=[ NULL ] ,b IN []|a) , reduce(a=NULL ,b IN []|a) ] AS a0 CREATE (c0{id:-1}) DELETE (c0) WITH * MATCH ( ) - [ * 0 .. ] - ( n0 ) WITH * WHERE TRUE CREATE p0 = ( n1 : L1 { k6 : CASE WHEN FALSE THEN NULL ELSE 1148481373 END , id : 225 } ) - [ r0 : T6 { id : 226 } ] - > ( { id : 227 } ) < - [ : T4 { id : 228 } ] - ( n2 { id : 229 } ) CREATE ( { id : reduce(a=230 ,b IN []|a) } ) WITH * RETURN 1 AS a0 
***********************
93、 EXCEPTIONS in:memgraph_database79
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE (n1{id:25}) DETACH DELETE n1  RETURN 1 AS a0, 1 AS a1} OPTIONAL MATCH (n2)<-[r0]-(n3 :L2) SET n2.k=a0 RETURN DISTINCT a1 AS a2
CALL { WITH * WITH * MERGE ( n1 { id : CASE WHEN TRUE THEN 25 END } ) REMOVE (NULL).NULL FOREACH(f in [1]|DETACH DELETE n1 ) CREATE (c0{id:-1}) DELETE (c0) RETURN 1 AS a0 , 1 AS a1 } REMOVE (NULL).NULL WITH * OPTIONAL MATCH ( n2 ) < - [ r0 ] - ( n3 : L2 ) SET n2 . k = a0 RETURN DISTINCT reduce(a=a1 ,b IN []|a) AS a2 
***********************
94、 EXCEPTIONS in:memgraph_database81
Can't have null literal properties inside merge (n0.k13)!
CREATE ({id:54}), (n0{k13:NULL, id:55}) CREATE p0=(n1{k5:NULL, id:56})-[r0 :T4{k66:false, id:57}]->(n2{id:58}), ({id:59}) MERGE ( :L2 :L0{id:60})-[r1 :T1{id:61}]->(n3 :L0{id:62}) RETURN (n3.k3) AS a0
CREATE ( { id : 54 } ) CREATE ( n0 { k13 : NULL , id : 55 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE p0=(n2{id:58})<-[ r0 : T4 { k66 : false , id : 57 } ] -( n1 { k5 : NULL , id : 56 } ) CREATE ( { id : 59 } ) WITH * MERGE ( : L2 : L0 { id : 60 } ) - [ r1 : T1 { id : 61 } ] - > ( n3 : L0 { id : 62 } ) CREATE (c0{id:-1}) DELETE (c0) RETURN ( n3 . k3 ) AS a0 
***********************
95、 EXCEPTIONS in:memgraph_database81
Can't have null literal properties inside merge (anon1.k1)!
CREATE ( :L0 :L1{k1:NULL, k9:NULL, id:94}), ({id:95})-[r0 :T2{id:96}]->(n0{id:97}) MERGE ( :L2{id:98})-[r1 :T3{id:99}]->({id:100}) MERGE (n1{id:101})-[r2 :T2{id:102}]-(n2{id:103})-[r3 :T3{id:104}]-( :L0{k0:'dAhoStL', id:105}) RETURN n2 AS a0 ORDER BY (r2.k50) SKIP 0
CREATE ( : L0 : L1 { k1 : NULL , k9 : NULL , id : 94 } ) CREATE ( { id : 95 } ) - [ r0 : T2 { id : 96 } ] - > ( n0 { id : 97 } ) WITH * MERGE ( : L2 { id : 98 } ) - [ r1 : T3 { id : 99 } ] - > ( { id : 100 } ) WITH * UNWIND [1] as l0 MERGE ( n1 { id : 101 } ) - [ r2 : T2 { id : CASE WHEN TRUE THEN 102 END } ] - ( n2 { id : 103 } ) - [ r3 : T3 { id : 104 } ] - ( : L0 { k0 : reduce(a='dAhoStL' ,b IN []|a) , id : 105 } ) REMOVE (NULL).TRUE RETURN CASE WHEN FALSE THEN NULL ELSE n2 END AS a0 ORDER BY (r2.k50) SKIP 0 
***********************
96、 EXCEPTIONS in:memgraph_database81
Can't have null literal properties inside merge (anon1.k15)!
FOREACH(a0 IN [NULL, 2073425397]|CREATE ( :L0{k15:NULL, id:155}) MERGE p0=(n0{id:156}) MERGE p1=( :L2 :L0{id:157})-[r0 :T3{id:158}]->({id:159})) MERGE (n1{id:160})-[ :T3{id:161}]-(n2{id:162}) SET n1.k=NULL RETURN n1 AS a1, n1 AS a2
FOREACH ( a0 IN [ NULL , 2073425397 ] | CREATE ( : L0 { k15 : NULL , id : 155 } ) DETACH DELETE (NULL) MERGE p0 = ( n0 { id : 156 } ) MERGE p1 = ( : L2 : L0 { id : CASE WHEN FALSE THEN NULL ELSE 157 END } ) - [ r0 : T3 { id : 158 } ] - > ( { id : CASE WHEN TRUE THEN 159 END } ) ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n1 { id : 160 } ) - [ : T3 { id : 161 } ] - ( n2 { id : 162 } ) SET n1 . k = NULL RETURN n1 AS a1 , CASE WHEN TRUE THEN n1 END AS a2 
***********************
97、 EXCEPTIONS in:memgraph_database81
Can't have null literal properties inside merge (r2.k59)!
CREATE ({id:214}), ( :L2{id:215})-[r2 :T3{k59:NULL, id:216}]->({id:217}) MERGE (n5{k4:'M', id:218})-[r3 :T1{id:219}]-( :L2{k0:'8', id:220}) DETACH DELETE n5,NULL  RETURN [('I'+'cp')] AS a0 LIMIT 1 UNION ALL MATCH (n0)-[]->() CREATE (n1{id:221})<-[r0 :T2{id:222}]-(n2{id:223}), (n3{id:224})<-[ :T2{k50:NULL, id:225}]-( :L4{k29:substring(NULL, abs(NULL), abs(((NULL*NULL)-741310917))), id:226})-[r1 :T0{id:227}]->(n4{id:228}) SET n0.k=true RETURN n0 AS a0
CREATE ( { id : 214 } ) CREATE ( : L2 { id : 215 } ) - [ r2 : T3 { k59 : NULL , id : 216 } ] - > ( { id : 217 } ) WITH * UNWIND [NULL] as l0 MERGE ( n5 { k4 : 'M' , id : reduce(a=218 ,b IN []|a) } ) - [ r3 : T1 { id : 219 } ] - ( : L2 { k0 : '8' , id : 220 } ) DETACH DELETE n5 , NULL WITH * UNWIND [NULL] as l1 RETURN CASE WHEN TRUE THEN ([]+[ CASE WHEN FALSE THEN NULL ELSE ( 'I' + 'cp' ) END ] )END AS a0 ORDER BY NULL LIMIT 1 UNION ALL MATCH ( n0 ) - [ ] - > ( ) CREATE ( n1 { id : 221 } ) < - [ r0 : T2 { id : CASE WHEN FALSE THEN NULL ELSE 222 END } ] - ( n2 { id : reduce(a=223 ,b IN []|a) } ) CREATE ( n3 { id : 224 } ) < - [ : T2 { k50 : NULL , id : 225 } ] - ( : L4 { k29 : CASE WHEN TRUE THEN substring ( NULL , abs ( NULL ) , abs ( ( ( NULL * NULL ) -741310917 ) ) ) END , id : reduce(a=226 ,b IN []|a) } ) - [ r1 : T0 { id : CASE WHEN TRUE THEN 227 END } ] - > ( n4 { id : 228 } ) SET n0 . k = true WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN n0 AS a0 
***********************
98、 EXCEPTIONS in:memgraph_database82
Can't have null literal properties inside merge (r0.k59)!
CREATE ({id:61})-[r0 :T2{k59:NULL, id:62}]->(n0{id:63})-[r1 :T4{id:64}]->( :L0{id:65}), ({id:66})<-[ :T2{k57:NULL, id:67}]-({id:68}) MERGE (n1{id:69})-[r2 :T2{id:70}]->({id:71}) MERGE (n2{id:72}) RETURN DISTINCT n1 AS a0
CREATE ( { id : 61 } ) - [ r0 : T2 { k59 : NULL , id : 62 } ] - > ( n0 { id : 63 } ) - [ r1 : T4 { id : reduce(a=64 ,b IN []|a) } ] - > ( : L0 { id : 65 } ) CREATE ( { id : 66 } ) < - [ : T2 { k57 : reduce(a=NULL ,b IN []|a) , id : 67 } ] - ( { id : 68 } ) SET (NULL).TRUE=1 MERGE ( n1 { id : 69 } ) - [ r2 : T2 { id : CASE WHEN TRUE THEN 70 END } ] - > ( { id : 71 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n2 { id : 72 } ) RETURN DISTINCT n1 AS a0 ORDER BY TRUE 
***********************
99、 EXCEPTIONS in:memgraph_database83
Can't have null literal properties inside merge (anon2.k28)!
CREATE (n0{id:11})-[ :T0{k38:round(NULL), id:12}]->({k8:NULL, k28:reverse(NULL), id:13})-[r0 :T5{id:14}]->(n1{id:15}), p0=({id:16}) CREATE (n2{id:17}) MERGE ({id:18})<-[r1 :T2{k49:'Z1kEenuZF', id:19}]-(n3{id:20})-[r2 :T0{id:21}]-({id:22}) RETURN *
CREATE ( n0 { id : 11 } ) - [ : T0 { k38 : reduce(a=round ( reduce(a=NULL ,b IN []|a) ) ,b IN []|a) , id : 12 } ] - > ( { k8 : reduce(a=NULL ,b IN []|a) , k28 : reverse ( reduce(a=NULL ,b IN []|a) ) , id : 13 } ) - [ r0 : T5 { id : 14 } ] - > ( n1 { id : 15 } ) CREATE p0 = ( { id : 16 } ) WITH * UNWIND [NULL] as l0 CREATE ( n2 { id : CASE WHEN FALSE THEN NULL ELSE 17 END } ) MERGE pp0=( { id : 18 } ) < - [ r1 : T2 { k49 : 'Z1kEenuZF' , id : 19 } ] - ( n3 { id : 20 } ) - [ r2 : T0 { id : 21 } ] - ( { id : CASE WHEN TRUE THEN 22 END } ) CREATE (c0{id:-1}) DELETE (c0) RETURN * 
***********************
100、 EXCEPTIONS in:memgraph_database83
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [[(n0)-[r0 :T2{k51:NULL}]-(n1)-[]-(n2)|(r0.k52)]]|MERGE (n3{id:33})-[r1 :T0{id:34}]->( :L1{id:35})-[r2 :T2{id:36}]->({id:37}) MERGE p0=({id:38})-[r3 :T2{k49:'t', id:39}]-(n4{k9:reduce(a=true,b IN [('Gksc' >= 't')]|b), id:40})-[r4 :T1{k42:1940268516, id:41}]-({id:42}) MERGE ({id:43})-[ :T0{id:44}]->(n5 :L4{k6:-1737123261, k30:true, id:45})-[r5 :T5{id:46}]-({id:47})) MERGE ({id:48})-[r6 :T0{k41:'jXKtrty4', id:49}]-(n6 :L4{id:50}) MERGE p1=( :L1 :L4{k26:'k', id:51})-[ :T5{id:52}]->({id:53}) RETURN 1 AS a1
FOREACH ( a0 IN [ [ ( n0 ) - [ r0 : T2 { k51 : NULL } ] - ( n1 ) - [ ] - ( n2 ) | ( reduce(a=r0 . k52 ,b IN []|a) ) ] ] | MERGE pp0=( n3 { id : reduce(a=33 ,b IN []|a) } ) - [ r1 : T0 { id : 34 } ] - > ( : L1 { id : 35 } ) - [ r2 : T2 { id : 36 } ] - > ( { id : 37 } ) MERGE p0 = ( { id : CASE WHEN FALSE THEN NULL ELSE 38 END } ) - [ r3 : T2 { k49 : reduce(a='t' ,b IN []|a) , id : 39 } ] - ( n4 { k9 : reduce ( a = true , b IN [ ( reduce(a=(''+'Gksc' )>= 't' ,b IN []|a) ) ] | b ) , id : 40 } ) - [ r4 : T1 { k42 : 1940268516 , id : 41 } ] - ( { id : 42 } ) MERGE ( { id : 43 } ) - [ : T0 { id : 44 } ] - > ( n5 : L4 { k6 : -1737123261 , k30 : true , id : 45 } ) - [ r5 : T5 { id : 46 } ] - ( { id : 47 } ) CREATE (c0{id:-1}) DELETE (c0) ) MERGE ( { id : 48 } ) - [ r6 : T0 { k41 : 'jXKtrty4' , id : 49 } ] - ( n6 : L4 { id : 50 } ) MERGE p1 = ( : L1 : L4 { k26 : 'k' , id : 51 } ) - [ : T5 { id : 52 } ] - > ( { id : 53 } ) WITH * RETURN 1 AS a1 SKIP 1 
***********************
101、 EXCEPTIONS in:memgraph_database85
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * UNWIND reduce(a=nodes(NULL),b IN [[(n0 :L4{k25:NULL})-[]-(n1 :L0{k3:substring(NULL, abs(1171983841), abs(-1981933635))})-[r0 :T0{k32:NULL}]->(n2)|NULL]]|a) AS a0 MERGE ( :L0{id:32})-[ :T0{id:33}]-(n3{id:34}) RETURN 1 AS a1 SKIP 1} MATCH (n0), (n4) WHERE (((substring('P', abs(1145034004), abs(902358122))+'H')+(NULL+'0df')) STARTS WITH NULL) CREATE ({id:35})-[r1 :T3{id:36}]->({id:37})-[r2 :T4{k55:1646693662, id:38}]->(n5{id:39}), (n6 :L0{k27:(NULL STARTS WITH NULL), id:40}) RETURN 1 AS a2
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() UNWIND reduce ( a = nodes ( NULL ) , b IN [ reduce(a=[ ( n0 : L4 { k25 : NULL } ) - [ ] - ( n1 : L0 { k3 : substring ( NULL , abs ( 1171983841 ) , abs ( -1981933635 ) ) } ) - [ r0 : T0 { k32 : NULL } ] - > ( n2 ) | NULL ] ,b IN []|a) ] | CASE WHEN FALSE THEN NULL ELSE a END ) AS a0 SET (NULL).NULL=1 MERGE ( : L0 { id : CASE WHEN FALSE THEN NULL ELSE 32 END } ) - [ : T0 { id : reduce(a=33 ,b IN []|a) } ] - ( n3 { id : 34 } ) RETURN 1 AS a1 SKIP 1 } WITH * MATCH ( n0 ) ,( n4 ) WITH * WHERE ( ( reduce(a=( (substring ( 'P' , abs ( reduce(a=1145034004 ,b IN []|a) ) , abs ( 902358122 ) ) +'') + 'H' ) + ( reduce(a=NULL + '0df' ,b IN []|a) ) ,b IN []|a) ) STARTS WITH NULL ) WITH * CREATE (n5{id:39})<-[ r2 : T4 { k55 : 1646693662 , id : 38 } ] -({id:37})<-[ r1 : T3 { id : 36 } ] -( { id : 35 } ) CREATE ( n6 : L0 { k27 : CASE WHEN FALSE THEN NULL ELSE ( CASE WHEN TRUE THEN NULL STARTS WITH NULL END ) END , id : 40 } ) WITH * RETURN 1 AS a2 
***********************
102、 EXCEPTIONS in:memgraph_database86
Can't have null literal properties inside merge (anon7.k15)!
FOREACH(a0 IN [NULL]|CREATE ({id:15})<-[ :T1{id:16}]-( :L3{id:17})-[ :T4{id:18}]->({id:19}), ( :L2{k15:NULL, id:20})<-[r0 :T1{k37:NULL, id:21}]-({k22:(reverse('E') CONTAINS NULL), id:22})-[r1 :T4{k56:round(NULL), id:23}]->({id:24}) CREATE (n0{id:25}) MERGE ({id:26})) CREATE ({id:27}), ({id:28}) MERGE p0=({id:29}) RETURN DISTINCT 1 AS a1
FOREACH ( a0 IN [ NULL ] | CREATE (m0{ id : CASE WHEN TRUE THEN 15 END } )CREATE (m0)< - [ : T1 { id : CASE WHEN TRUE THEN 16 END } ] - ( : L3 { id : 17 } ) - [ : T4 { id : 18 } ] - > ( { id : 19 } ) CREATE ( : L2 { k15 : reduce(a=NULL ,b IN []|a) , id : reduce(a=20 ,b IN []|a) } ) < - [ r0 : T1 { k37 : NULL , id : CASE WHEN TRUE THEN 21 END } ] - ( { k22 : ( reduce(a=reverse ( 'E' ) CONTAINS NULL ,b IN []|a) ) , id : 22 } ) - [ r1 : T4 { k56 : round ( reduce(a=NULL ,b IN []|a) ) , id : 23 } ] - > ( { id : 24 } ) CREATE ( n0 { id : 25 } ) MERGE ( { id : 26 } ) ) CREATE ( { id : 27 } ) CREATE ( { id : 28 } ) DELETE (NULL) MERGE p0 = ( { id : 29 } ) RETURN DISTINCT 1 AS a1 
***********************
103、 EXCEPTIONS in:memgraph_database89
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MERGE (n0{id:16}) DETACH DELETE n0,NULL  RETURN 1 AS a0, 1 AS a1} MATCH (), ()-[r0]-(n1) SET n1.k=NULL RETURN collect(NULL) AS a2, 1 AS a3
CALL { WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n0 { id : reduce(a=16 ,b IN []|a) } ) FOREACH(f in [1]|DETACH DELETE n0 , NULL ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 , 1 AS a1 ORDER BY 1 DESC } OPTIONAL MATCH ()-[:TYPE]-() MATCH ( ) ,( ) - [ r0 ] - ( n1 ) WITH * SET n1 . k = NULL RETURN reduce(a=collect ( NULL ) ,b IN []|a) AS a2 , 1 AS a3 SKIP 1 
***********************
104、 EXCEPTIONS in:memgraph_database90
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * MERGE (n8 :L2 :L4{id:15})-[ :T5{id:16}]-({id:17})<-[ :T4{k71:-637638825, id:18}]-(n9{k26:'eIVvgG', id:19}) REMOVE n8.k2 RETURN NULL AS a2, 1 AS a3} UNWIND relationships(NULL) AS a4 CREATE (n10 :L2{k25:exists(()-[a4{k70:NULL}]-( :L4{k14:reduce(a=a3,b IN [a3]|b)})-[{k77:NULL}]->()), id:20})-[r1 :T5{k74:395440912, id:21}]->( :L5{id:22})-[ :T4{id:23}]->(n11 :L5{k31:'Gew', id:24}) RETURN 1 AS a5, CASE WHEN NULL THEN nodes(NULL)[abs(a3)] END AS a6
CALL { WITH * DETACH DELETE (NULL) MERGE ( n8 : L2 : L4 { id : 15 } ) - [ : T5 { id : reduce(a=16 ,b IN []|a) } ] - ( { id : 17 } ) < - [ : T4 { k71 : -637638825 , id : 18 } ] - ( n9 { k26 : CASE WHEN FALSE THEN NULL ELSE 'eIVvgG' END , id : 19 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() REMOVE n8 . k2 WITH * RETURN NULL AS a2 , 1 AS a3 ORDER BY TRUE DESC } SET (NULL).FALSE=1 WITH * UNWIND relationships ( NULL ) AS a4 CREATE ( n10 : L2 { k25 : exists ( ( ) - [ a4 { k70 : NULL } ] - ( : L4 { k14 : reduce ( a = a3 , b IN [ CASE WHEN FALSE THEN NULL ELSE a3 END ] | b ) } ) - [ { k77 : NULL } ] - > ( ) ) , id : CASE WHEN FALSE THEN NULL ELSE 20 END } ) - [ r1 : T5 { k74 : 395440912 , id : 21 } ] - > ( : L5 { id : 22 } ) - [ : T4 { id : 23 } ] - > ( n11 : L5 { k31 : 'Gew' , id : reduce(a=24 ,b IN []|a) } ) RETURN reduce(a=1 ,b IN []|a) AS a5 , CASE WHEN reduce(a=NULL ,b IN []|a) THEN nodes ( NULL ) [ abs ( a3 ) ] END AS a6 
***********************
105、 EXCEPTIONS in:memgraph_database90
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a6 IN [(n5)-[ :T4{k69:'6'}]-(n6)-[]-(n0 :L4)|-2]|MERGE ( :L6{id:42}) CREATE (n7{id:43}), (n8{k14:((NULL--565597896)*(NULL*CASE WHEN NULL THEN 1526372124 END)), id:44})-[ :T5{k78:NULL, id:45}]->(n9{id:46}) MERGE (n10 :L5{k37:false, id:47})) CREATE ({id:48})-[r2 :T4{k68:true, id:49}]->({k30:true, id:50})-[r3 :T4{k70:NULL, id:51}]->(n11{id:52}), ({k24:NULL, id:53})-[r4 :T5{id:54}]->({k30:true, id:55}) CREATE (n12 :L5 :L6{id:56})<-[ :T5{id:57}]-({id:58}) RETURN 1 AS a7, 1 AS a8
FOREACH ( a6 IN [ ( n5 ) - [ : T4 { k69 : '6' } ] - ( n6 ) - [ ] - ( n0 : L4 ) | -2 ] | MERGE pp0=( : L6 { id : 42 } ) DELETE NULL CREATE ( n7 { id : 43 } ) CREATE ( n8 { k14 : ( ( NULL - -565597896 ) * ( reduce(a=NULL * CASE WHEN CASE WHEN TRUE THEN NULL END THEN 1526372124 END ,b IN []|a) ) ) , id : 44 } ) - [ : T5 { k78 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 45 END } ] - > ( n9 { id : 46 } ) MERGE ( n10 : L5 { k37 : false , id : 47 } ) CREATE (c0{id:-1}) DELETE (c0) ) REMOVE (NULL).FALSE CREATE (m0{ id : 48 } )CREATE (m0)- [ r2 : T4 { k68 : true , id : 49 } ] - > ( { k30 : true , id : 50 } ) - [ r3 : T4 { k70 : NULL , id : 51 } ] - > ( n11 { id : 52 } ) CREATE ( { k24 : NULL , id : 53 } ) - [ r4 : T5 { id : 54 } ] - > ( { k30 : true , id : 55 } ) REMOVE (NULL).k CREATE ( n12 : L5 : L6 { id : reduce(a=56 ,b IN []|a) } ) < - [ : T5 { id : 57 } ] - ( { id : 58 } ) REMOVE (NULL).k RETURN 1 AS a7 , 1 AS a8 
***********************
106、 EXCEPTIONS in:memgraph_database90
Can't have null literal properties inside merge (n3.k34)!
CREATE ({id:110}), (n3{k34:NULL, id:111})-[ :T4{id:112}]->(n4 :L5{k29:(substring(reverse('ASLkd'), abs(NULL), abs(reduce(a=-307140166,b IN [-1643380244, -1522849207]|a+ b)))+NULL), id:113}) MERGE ( :L2{k26:'1', id:114})-[ :T5{id:115}]-({id:116}) CREATE ( :L6{k35:NULL, id:117})<-[r2 :T0{id:118}]-( :L4{id:119}) RETURN 1 AS a2
CREATE ( { id : CASE WHEN TRUE THEN 110 END } ) CREATE ( n3 { k34 : NULL , id : CASE WHEN TRUE THEN 111 END } ) - [ : T4 { id : 112 } ] - > ( n4 : L5 { k29 : ( reduce(a=substring ( CASE WHEN FALSE THEN NULL ELSE reverse ( reduce(a='ASLkd' ,b IN []|a) ) END , abs ( NULL ) , abs ( reduce ( a = -307140166 , b IN [ -1643380244 , -1522849207 ] | a + b ) ) ) + NULL ,b IN []|a) ) , id : 113 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( : L2 { k26 : '1' , id : 114 } ) - [ : T5 { id : CASE WHEN TRUE THEN 115 END } ] - ( { id : reduce(a=116 ,b IN []|a) } ) CREATE ( : L6 { k35 : NULL , id : 117 } ) < - [ r2 : T0 { id : 118 } ] - ( : L4 { id : 119 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a2 
***********************
107、 EXCEPTIONS in:memgraph_database91
Can't have null literal properties inside merge (n3.k1)!
FOREACH(a0 IN [properties(endNode(NULL)), NULL]|CREATE (n0{id:6})<-[ :T2{id:7}]-( :L5{k12:(false IS NULL), id:8}), (n1 :L1{id:9})-[ :T2{id:10}]->({k1:size([relationships(NULL)[abs(1167999338)], relationships(NULL)[abs(422866734)]]), id:11}) CREATE (n2 :L1{id:12})-[ :T2{id:13}]->(n3 :L0{k1:(1092110359+(NULL*-116749855)), k7:667082090, id:14}) MERGE ({k1:1318794014, id:15})) CREATE ({id:16}) MERGE (n4{id:17})<-[r0 :T2{id:18}]-(n5 :L5{id:19}) RETURN 1 AS a1 LIMIT 1
FOREACH ( a0 IN ([ properties ( endNode ( NULL ) ) , NULL ] +[]) | CREATE ( n0 { id : 6 } ) < - [ : T2 { id : 7 } ] - ( : L5 { k12 : reduce(a=( false IS NULL ) ,b IN []|a) , id : CASE WHEN TRUE THEN 8 END } ) CREATE ( n1 : L1 { id : 9 } ) - [ : T2 { id : 10 } ] - > ( { k1 : reduce(a=size ( ([ relationships ( NULL ) [ abs ( 1167999338 ) ] , relationships ( NULL ) [ abs ( 422866734 ) ] ] +[]) ) ,b IN []|a) , id : reduce(a=11 ,b IN []|a) } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( n2 : L1 { id : 12 } ) - [ : T2 { id : 13 } ] - > ( n3 : L0 { k1 : ( 1092110359 + ( NULL * -116749855 ) ) , k7 : 667082090 , id : CASE WHEN TRUE THEN 14 END } ) MERGE ( { k1 : 1318794014 , id : 15 } ) CREATE (c1{id:-1}) DELETE (c1) ) SET (NULL).k=1 CREATE ( { id : 16 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE pp0=( n4 { id : 17 } ) < - [ r0 : T2 { id : 18 } ] - ( n5 : L5 { id : 19 } ) WITH * RETURN 1 AS a1 LIMIT CASE WHEN TRUE THEN 1 END 
***********************
108、 EXCEPTIONS in:memgraph_database92
Can't have null literal properties inside merge (anon5.k37)!
CREATE ({id:28})-[r0 :T4{id:29}]->({id:30}), p0=({id:31})<-[ :T0{k37:(NULL <= -1869626736), id:32}]-(n0 :L3{k22:-1864651101, id:33})-[r1 :T5{k64:NULL, id:34}]->(n1{id:35}) MERGE ({id:36})-[r2 :T4{id:37}]->(n2 :L3{k18:1283630753, id:38})-[r3 :T5{id:39}]-(n3 :L4{id:40}) CREATE (n4{id:41})-[ :T5{k66:('a'+(r3.k62)), id:42}]->(n5 :L4{id:43})-[ :T3{k53:(n2.k17), id:44}]->(n6{id:45}) RETURN n3 AS a0
CREATE ( { id : reduce(a=28 ,b IN []|a) } ) - [ r0 : T4 { id : 29 } ] - > ( { id : 30 } ) CREATE (m0{ id : CASE WHEN FALSE THEN NULL ELSE 31 END } )CREATE (m0)< - [ : T0 { k37 : CASE WHEN FALSE THEN NULL ELSE ( NULL <= -1869626736 ) END , id : 32 } ] - ( n0 : L3 { k22 : -1864651101 , id : 33 } ) - [ r1 : T5 { k64 : NULL , id : CASE WHEN FALSE THEN NULL ELSE 34 END } ] - > ( n1 { id : reduce(a=35 ,b IN []|a) } ) MERGE pp0=( { id : 36 } ) - [ r2 : T4 { id : 37 } ] - > ( n2 : L3 { k18 : 1283630753 , id : 38 } ) - [ r3 : T5 { id : 39 } ] - ( n3 : L4 { id : 40 } ) DETACH DELETE NULL CREATE ( n4 { id : reduce(a=41 ,b IN []|a) } ) - [ : T5 { k66 : ( 'a' + ( r3 . k62 ) ) , id : CASE WHEN TRUE THEN 42 END } ] - > ( n5 : L4 { id : 43 } ) - [ : T3 { k53 : ( reduce(a=n2 . k17 ,b IN []|a) ) , id : 44 } ] - > ( n6 { id : reduce(a=45 ,b IN []|a) } ) RETURN CASE WHEN FALSE THEN NULL ELSE n3 END AS a0 
***********************
109、 EXCEPTIONS in:memgraph_database92
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * FOREACH(a0 IN [endNode(NULL), endNode(NULL)]|MERGE ( :L3{id:46}) CREATE (n0 :L4{id:47}) CREATE p0=(n1 :L4{id:48})) CREATE ({id:49}), ({id:50})-[r0 :T4{k56:NULL, id:51}]->({k21:(-860713108+(NULL+NULL)), id:52}) RETURN [NULL] AS a1, 1 AS a2 ORDER BY relationships(NULL)[abs((1409309186+(-2027834887-167292495)))], a2 DESC} UNWIND NULL AS a3 CREATE ( :L3{id:53})-[r1 :T4{id:54}]->(n2{id:55})-[ :T0{id:56}]->(n3{id:57}), (n4{id:58}) RETURN 1 AS a4
CALL { WITH * REMOVE (NULL).k FOREACH ( a0 IN ([]+[ endNode ( NULL ) , endNode ( NULL ) ] )| MERGE ( : L3 { id : 46 } ) CREATE ( n0 : L4 { id : 47 } ) CREATE p0 = ( n1 : L4 { id : 48 } ) ) CREATE ( { id : 49 } ) CREATE ( { id : 50 } ) - [ r0 : T4 { k56 : NULL , id : 51 } ] - > ( { k21 : ( -860713108 + ( reduce(a=NULL + NULL ,b IN []|a) ) ) , id : 52 } ) WITH * RETURN [ NULL ] AS a1 , 1 AS a2 ORDER BY relationships(NULL)[abs((1409309186+(-2027834887-167292495)))], a2 DESC } UNWIND NULL AS a3 WITH * CREATE ( : L3 { id : 53 } ) - [ r1 : T4 { id : 54 } ] - > ( n2 { id : CASE WHEN FALSE THEN NULL ELSE 55 END } ) - [ : T0 { id : 56 } ] - > ( n3 { id : 57 } ) CREATE ( n4 { id : 58 } ) WITH * RETURN CASE WHEN FALSE THEN NULL ELSE 1 END AS a4 
***********************
110、 EXCEPTIONS in:memgraph_database92
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[]-(n1 :L4{k25:-240924004})|properties(n0)]|CREATE ({id:60})-[ :T4{id:61}]->( :L3{id:62}) CREATE (n2 :L3{k22:NULL, id:63})-[ :T4{id:64}]->( :L3{k18:-420071180, id:65}), ({id:66})-[ :T0{k31:false, id:67}]->({id:68})<-[ :T3{id:69}]-({id:70}) MERGE ({k18:1200664783, id:71})) CREATE p0=(n3{k22:1777252822, id:72})-[r0 :T5{id:73}]->(n4{id:74}), ({id:75})-[ :T4{id:76}]->(n5{id:77})-[r1 :T0{id:78}]->({id:79}) CREATE ( :L3{k19:NULL, id:80})-[ :T5{id:81}]->({id:82})-[r2 :T3{k52:NULL, id:83}]->({id:84}), (n6{id:85}) RETURN 1 AS a1, 1 AS a2
FOREACH ( a0 IN [ ( n0 ) - [ ] - ( n1 : L4 { k25 : -240924004 } ) | properties ( n0 ) ] | CREATE (m0{ id : 60 } )CREATE (m0)- [ : T4 { id : 61 } ] - > ( : L3 { id : 62 } ) CREATE ( n2 : L3 { k22 : NULL , id : 63 } ) - [ : T4 { id : CASE WHEN TRUE THEN 64 END } ] - > ( : L3 { k18 : -420071180 , id : CASE WHEN FALSE THEN NULL ELSE 65 END } ) CREATE ( { id : reduce(a=66 ,b IN []|a) } ) - [ : T0 { k31 : false , id : reduce(a=67 ,b IN []|a) } ] - > ( { id : 68 } ) < - [ : T3 { id : 69 } ] - ( { id : 70 } ) MERGE ( { k18 : 1200664783 , id : 71 } ) CREATE (c0{id:-1}) DELETE (c0) ) WITH * CREATE p0 = ( n3 { k22 : CASE WHEN TRUE THEN 1777252822 END , id : reduce(a=72 ,b IN []|a) } ) - [ r0 : T5 { id : 73 } ] - > ( n4 { id : 74 } ) CREATE ( { id : CASE WHEN FALSE THEN NULL ELSE 75 END } ) - [ : T4 { id : 76 } ] - > ( n5 { id : 77 } ) - [ r1 : T0 { id : 78 } ] - > ( { id : 79 } ) CREATE (m1: L3 { k19 : reduce(a=NULL ,b IN []|a) , id : 80 } )CREATE (m1)- [ : T5 { id : 81 } ] - > ( { id : 82 } ) - [ r2 : T3 { k52 : reduce(a=NULL ,b IN []|a) , id : 83 } ] - > ( { id : 84 } ) CREATE ( n6 { id : 85 } ) REMOVE (NULL).NULL RETURN 1 AS a1 , 1 AS a2 
***********************
111、 EXCEPTIONS in:memgraph_database96
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * OPTIONAL MATCH (n2)-[]-(n0) CREATE ({id:10})-[ :T1{k45:((NULL CONTAINS NULL) OR NULL), id:11}]->(n3{id:12})-[r0 :T4{id:13}]->({k9:reverse(NULL), id:14}) RETURN n2 AS a3 SKIP 0} MATCH (a3)-[r1 :T1{k42:NULL}]->(a3), (n0)-[]-() CREATE (n4{id:15})<-[ :T2{k49:reduce(a=(r1.k44),b IN [(r1.k44)]|a), id:16}]-({id:17})-[ :T3{k56:(r1.k40), id:18}]->({id:19}), ({id:20}) RETURN 1 AS a4 SKIP 1
CALL { WITH * UNWIND [NULL] as l0 OPTIONAL MATCH ( n2 ) - [ ] - ( n0 ) CREATE ( { id : 10 } ) - [ : T1 { k45 : ( ( NULL CONTAINS NULL ) OR NULL ) , id : reduce(a=11 ,b IN []|a) } ] - > ( n3 { id : 12 } ) - [ r0 : T4 { id : reduce(a=13 ,b IN []|a) } ] - > ( { k9 : reduce(a=reverse ( NULL ) ,b IN []|a) , id : reduce(a=14 ,b IN []|a) } ) RETURN reduce(a=n2 ,b IN []|a) AS a3 SKIP 0 } REMOVE (NULL).FALSE WITH * MATCH ( a3 ) - [ r1 : T1 { k42 : NULL } ] - > ( a3 ) ,( n0 ) - [ ] - ( ) CREATE ( n4 { id : 15 } ) < - [ : T2 { k49 : reduce(a=reduce ( a = ( r1 . k44 ) , b IN [ ( r1 . k44 ) ] | reduce(a=a ,b IN []|a) ) ,b IN []|a) , id : 16 } ] - ( { id : 17 } ) - [ : T3 { k56 : ( r1 . k40 ) , id : 18 } ] - > ( { id : 19 } ) CREATE ( { id : 20 } ) RETURN DISTINCT 1 AS a4 SKIP 1 
***********************
112、 EXCEPTIONS in:memgraph_database96
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * UNWIND NULL AS a0 CREATE p0=({id:49})<-[r0 :T1{id:50}]-(n0{id:51})<-[ :T2{id:52}]-({id:53}) RETURN 1 AS a1} OPTIONAL MATCH p1=(), ()-[]-(n1 :L1) SET n1.k=round(-1158600635) RETURN p1 AS a2
CALL { WITH * UNWIND NULL AS a0 CREATE p0 = ( { id : 49 } ) < - [ r0 : T1 { id : 50 } ] - ( n0 { id : 51 } ) < - [ : T2 { id : 52 } ] - ( { id : 53 } ) SET (NULL).TRUE=1 RETURN 1 AS a1 } OPTIONAL MATCH ()-[:TYPE]-() OPTIONAL MATCH p1 = ( ) ,( ) - [ ] - ( n1 : L1 ) SET n1 . k = round ( -1158600635 ) RETURN p1 AS a2 
***********************
113、 EXCEPTIONS in:memgraph_database96
Can't have null literal properties inside merge (anon6.k56)!
CREATE ({id:54})-[ :T3{k58:'kglw7b', id:55}]->(n0{id:56})-[ :T2{id:57}]->({id:58}), p0=(n1 :L4{id:59})<-[ :T3{k56:(NULL+((NULL+reverse('pYZlHHKC'))+(NULL+NULL))), id:60}]-({id:61}) CREATE ( :L4{id:62})<-[r0 :T3{id:63}]-(n2{id:64})-[r1 :T4{id:65}]->(n3 :L1{id:66}) MERGE ({id:67})-[r2 :T2{k49:false, id:68}]-(n4{id:69}) RETURN *, n4 AS a0
CREATE ( { id : 54 } ) - [ : T3 { k58 : 'kglw7b' , id : 55 } ] - > ( n0 { id : 56 } ) - [ : T2 { id : 57 } ] - > ( { id : 58 } ) CREATE (n1: L4 { id : 59 } )CREATE (n1)< - [ : T3 { k56 : ( NULL + ( ( NULL + reverse ( CASE WHEN TRUE THEN (''+'pYZlHHKC' )END ) ) + ( NULL + NULL ) ) ) , id : 60 } ] - ( { id : 61 } ) CREATE (n3 :L1{id:66})<-[ r1 : T4 { id : 65 } ] -(n2{id:64})-[ r0 : T3 { id : 63 } ] ->( : L4 { id : 62 } ) WITH * UNWIND [1] as l0 MERGE ( { id : reduce(a=67 ,b IN []|a) } ) - [ r2 : T2 { k49 : false , id : reduce(a=68 ,b IN []|a) } ] - ( n4 { id : reduce(a=69 ,b IN []|a) } ) RETURN * , n4 AS a0 
***********************
114、 EXCEPTIONS in:memgraph_database100
Can't have null literal properties inside merge (n1.k30)!
CREATE p0=(n1{k30:type(relationships(NULL)[abs(size([]))]), k2:false, id:6}), (n2 :L4{id:7}) MERGE (n3{id:8}) SET n3.k=1526061630 RETURN 1 AS a3
CREATE p0 = ( n1 { k30 : type ( relationships ( reduce(a=NULL ,b IN []|a) ) [ abs ( size ( CASE WHEN TRUE THEN ([ ] +[]) END ) ) ] ) , k2 : false , id : 6 } ) CREATE ( n2 : L4 { id : 7 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n3 { id : 8 } ) WITH * UNWIND [1] as l0 SET n3 . k = reduce(a=1526061630 ,b IN []|a) RETURN reduce(a=1 ,b IN []|a) AS a3 LIMIT 1 
***********************
115、 EXCEPTIONS in:memgraph_database101
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[r0]-(n1)|CASE WHEN NULL THEN n1 END]|CREATE ({id:11}), ({id:12}) MERGE (n2{id:13})<-[r1 :T1{id:14}]-({id:15}) CREATE ({id:16})<-[r2 :T1{id:17}]-(n3{id:18})) CREATE ({id:19})-[ :T1{id:20}]->({id:21}) MERGE (n4{id:22})-[r3 :T1{id:23}]-(n5{id:24}) RETURN (697219122 >= reduce(a=1,b IN [((-529639444/1348160485)/(-363400160+2138613362))]|a)) AS a1, 1 AS a2
FOREACH ( a0 IN [ ( n0 ) - [ r0 ] - ( n1 ) | CASE WHEN NULL THEN CASE WHEN TRUE THEN n1 END END ] | CREATE ( { id : 11 } ) CREATE ( { id : 12 } ) SET (NULL).NULL=1 MERGE ( n2 { id : 13 } ) < - [ r1 : T1 { id : 14 } ] - ( { id : 15 } ) CREATE ( { id : CASE WHEN FALSE THEN NULL ELSE 16 END } ) < - [ r2 : T1 { id : 17 } ] - ( n3 { id : 18 } ) ) CREATE ( { id : 19 } ) - [ : T1 { id : reduce(a=20 ,b IN []|a) } ] - > ( { id : 21 } ) MERGE ( n4 { id : CASE WHEN TRUE THEN 22 END } ) - [ r3 : T1 { id : 23 } ] - ( n5 { id : reduce(a=24 ,b IN []|a) } ) RETURN ( 697219122 >= reduce ( a = 1 , b IN reduce(a=[ ( ( -529639444 / 1348160485 ) / ( -363400160 + 2138613362 ) ) ] ,b IN []|a) | reduce(a=a ,b IN []|a) ) ) AS a1 , 1 AS a2 
***********************
116、 EXCEPTIONS in:memgraph_database101
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * CREATE ({k13:(NULL STARTS WITH NULL), id:25}), (n0{k14:true, id:26}) MERGE (n1 :L2{k19:false, id:27}) RETURN (n1.k15) AS a0} UNWIND [(NULL < NULL), ('v' = 'V')] AS a1 MERGE ( :L3{k18:'tdlSM02', id:28}) RETURN a1 AS a2
CALL { WITH * CREATE ( { k13 : ( NULL STARTS WITH NULL ) , id : CASE WHEN FALSE THEN NULL ELSE 25 END } ) CREATE ( n0 { k14 : true , id : 26 } ) WITH * MERGE ( n1 : L2 { k19 : false , id : 27 } ) RETURN ( n1 . k15 ) AS a0 } CREATE (c0{id:-1}) DELETE (c0) WITH * UNWIND CASE WHEN FALSE THEN NULL ELSE ([]+[ ( CASE WHEN TRUE THEN NULL < NULL END ) , CASE WHEN FALSE THEN NULL ELSE ( 'v' = 'V' ) END ] )END AS a1 UNWIND [1] as l0 MERGE ( : L3 { k18 : CASE WHEN TRUE THEN 'tdlSM02' END , id : 28 } ) WITH * UNWIND [1] as l1 RETURN a1 AS a2 
***********************
117、 EXCEPTIONS in:memgraph_database102
Unexpected behavior: Pattern Comprehension expected a list, got null. Please report the problem on GitHub issues
FOREACH(a0 IN [(n0)-[ :T4{k70:'Bw212t'}]-(n1)-[r0]->(n2) WHERE true|NULL]|CREATE ( :L3{id:10})-[ :T2{id:11}]->(n3{k17:-326656683, id:12})-[r1 :T4{id:13}]->(n4{id:14}), ({id:15})-[r2 :T1{k52:-817130147, id:16}]->({k5:('C'+(NULL+NULL)), id:17}) CREATE (n5{id:18}), ({id:19}) MERGE (n6{k20:true, id:20})) MERGE (n7{k21:'OnpUr', id:21})-[r3 :T2{id:22}]->(n8 :L3{k22:'tQS', id:23})-[r4 :T4{k66:true, id:24}]->({id:25}) MERGE (n9{id:26})-[r5 :T2{id:27}]-(n10{id:28})-[r6 :T3{id:29}]->(n11 :L3{id:30}) RETURN NULL AS a1, n8 AS a2 SKIP 0
FOREACH ( a0 IN reduce(a=[ ( n0 ) - [ : T4 { k70 : 'Bw212t' } ] - ( n1 ) - [ r0 ] - > ( n2 ) WHERE true | NULL ] ,b IN []|a) | CREATE ( : L3 { id : CASE WHEN TRUE THEN 10 END } ) - [ : T2 { id : 11 } ] - > ( n3 { k17 : reduce(a=-326656683 ,b IN []|a) , id : 12 } ) - [ r1 : T4 { id : 13 } ] - > ( n4 { id : 14 } ) CREATE ( { id : CASE WHEN FALSE THEN NULL ELSE 15 END } ) - [ r2 : T1 { k52 : CASE WHEN FALSE THEN NULL ELSE -817130147 END , id : 16 } ] - > ( { k5 : ( 'C' + ( NULL + NULL ) ) , id : 17 } ) CREATE ( n5 { id : 18 } ) CREATE ( { id : 19 } ) SET (NULL).TRUE=1 MERGE ( n6 { k20 : true , id : CASE WHEN FALSE THEN NULL ELSE 20 END } ) ) WITH * MERGE ( n7 { k21 : 'OnpUr' , id : 21 } ) - [ r3 : T2 { id : reduce(a=22 ,b IN []|a) } ] - > ( n8 : L3 { k22 : reduce(a='tQS' ,b IN []|a) , id : 23 } ) - [ r4 : T4 { k66 : true , id : 24 } ] - > ( { id : 25 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() MERGE ( n9 { id : 26 } ) - [ r5 : T2 { id : 27 } ] - ( n10 { id : 28 } ) - [ r6 : T3 { id : 29 } ] - > ( n11 : L3 { id : 30 } ) CREATE (c0{id:-1}) DELETE (c0) RETURN NULL AS a1 , reduce(a=n8 ,b IN []|a) AS a2 SKIP 0 
***********************
118、 EXCEPTIONS in:memgraph_database103
Can't have null literal properties inside merge (n3.k10)!
OPTIONAL MATCH (n0 :L1), () CREATE (n1 :L1{k12:(-129674746 = (n0.k8)), id:74})<-[r0 :T1{id:75}]-(n2{id:76})-[r1 :T0{k38:(-2040993546 < CASE WHEN (false OR false) THEN 988158536 END), id:77}]->(n3{k10:NULL, id:78}) MERGE (n4{k0:true, id:79})-[r2 :T1{id:80}]-(n5{id:81}) RETURN r2 AS a0
OPTIONAL MATCH (n0 :L1),() CREATE (n1: L1 { k12 : CASE WHEN TRUE THEN ( -129674746 = ( reduce(a=n0 . k8 ,b IN []|a) ) ) END , id : reduce(a=74 ,b IN []|a) } )CREATE (n1)< - [ r0 : T1 { id : 75 } ] - ( n2 { id : 76 } ) - [ r1 : T0 { k38 : ( -2040993546 < CASE WHEN ( CASE WHEN TRUE THEN false OR false END ) THEN CASE WHEN TRUE THEN 988158536 END END ) , id : 77 } ] - > ( n3 { k10 : NULL , id : 78 } ) DETACH DELETE NULL MERGE ( n4 { k0 : true , id : 79 } ) - [ r2 : T1 { id : 80 } ] - ( n5 { id : 81 } ) RETURN r2 AS a0 ORDER BY FALSE DESC 
***********************
119、 EXCEPTIONS in:memgraph_database103
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE (n0{k5:NULL, id:90})-[r0 :T0{id:91}]->(n1 :L3{k23:true, id:92})-[ :T1{id:93}]->({id:94}), p0=(n2{id:95}) CREATE (n3{id:96})<-[r1 :T1{k44:reverse(NULL), id:97}]-(n4{id:98})<-[ :T1{id:99}]-({k1:true, id:100}), ({id:101}) RETURN DISTINCT 1 AS a0} MATCH ()-[]-(n5) DETACH DELETE n5,NULL  RETURN 1 AS a1, 1 AS a2
CALL { WITH * REMOVE (NULL).k CREATE (n0{ k5 : reduce(a=NULL ,b IN []|a) , id : 90 } )CREATE (n0)- [ r0 : T0 { id : 91 } ] - > ( n1 : L3 { k23 : true , id : 92 } ) - [ : T1 { id : 93 } ] - > ( { id : 94 } ) CREATE p0 = ( n2 { id : 95 } ) CREATE (n3{ id : 96 } )CREATE (n3)< - [ r1 : T1 { k44 : reverse ( NULL ) , id : 97 } ] - ( n4 { id : 98 } ) < - [ : T1 { id : 99 } ] - ( { k1 : true , id : 100 } ) CREATE ( { id : CASE WHEN TRUE THEN 101 END } ) WITH * UNWIND [1] as l0 RETURN DISTINCT CASE WHEN TRUE THEN 1 END AS a0 } SET (NULL).TRUE=1 WITH * MATCH ( ) - [ ] - ( n5 ) WITH * UNWIND [NULL] as l1 DETACH DELETE n5 , NULL WITH * UNWIND [NULL] as l2 RETURN CASE WHEN FALSE THEN NULL ELSE 1 END AS a1 , 1 AS a2 SKIP 1 
***********************
120、 EXCEPTIONS in:memgraph_database103
UNWIND can't be put after RETURN clause or after an update.
CALL{WITH * FOREACH(a5 IN reduce(a=[('W' ENDS WITH 'GF'), NULL],b IN [NULL]|a)|MERGE (n2{id:102}) MERGE p1=(n3{id:103})-[ :T0{id:104}]-(n4 :L3{id:105}) CREATE ({id:106})<-[r1 :T1{id:107}]-(n5 :L1{k24:false, id:108})<-[r2 :T1{id:109}]-({id:110})) CREATE (n6{id:111})<-[ :T0{k39:NULL, id:112}]-( :L3{id:113}) RETURN 1 AS a6, collect(relationships(NULL)[abs(-692747011)])[abs(1046053236)] AS a7} UNWIND NULL AS a8 MERGE (n7 :L3 :L1{id:114})-[r3 :T0{id:115}]-(n8{id:116}) RETURN r3 AS a9, -1559928619 AS a10 UNION ALL CALL{WITH * MATCH (), (n0) WHERE true REMOVE n0.k2 RETURN n0 AS a0 ORDER BY NULL, a0 DESC} OPTIONAL MATCH p0=(a0), () WHERE NULL MERGE (n1{id:117}) RETURN DISTINCT 1 AS a9, a0 AS a10
CALL { WITH * DETACH DELETE NULL FOREACH ( a5 IN reduce ( a = [ ( reduce(a='W' ENDS WITH 'GF' ,b IN []|a) ) , NULL ] , b IN [ CASE WHEN FALSE THEN NULL ELSE NULL END ] | reduce(a=a ,b IN []|a) ) | MERGE ( n2 { id : reduce(a=102 ,b IN []|a) } ) MERGE p1 = ( n3 { id : 103 } ) - [ : T0 { id : 104 } ] - ( n4 : L3 { id : 105 } ) CREATE (c0{id:-1}) DELETE (c0) CREATE ( { id : 106 } ) < - [ r1 : T1 { id : 107 } ] - ( n5 : L1 { k24 : CASE WHEN TRUE THEN false END , id : 108 } ) < - [ r2 : T1 { id : 109 } ] - ( { id : 110 } ) SET (NULL).TRUE=1 ) WITH * CREATE ( n6 { id : 111 } ) < - [ : T0 { k39 : NULL , id : 112 } ] - ( : L3 { id : reduce(a=113 ,b IN []|a) } ) WITH * RETURN reduce(a=1 ,b IN []|a) AS a6 , collect ( CASE WHEN FALSE THEN NULL ELSE ([]+relationships ( NULL ) )[ CASE WHEN TRUE THEN abs ( -692747011 ) END ] END ) [ abs ( 1046053236 ) ] AS a7 } DELETE (NULL) WITH * UNWIND NULL AS a8 SET (NULL).NULL=1 MERGE ( n7 : L3 : L1 { id : 114 } ) - [ r3 : T0 { id : 115 } ] - ( n8 { id : 116 } ) RETURN r3 AS a9 , -1559928619 AS a10 LIMIT 1 UNION ALL CALL { WITH * DETACH DELETE (NULL) WITH * MATCH ( ) ,( n0 ) WHERE reduce(a=true ,b IN []|a) UNWIND [1] as l0 REMOVE n0 . k2 RETURN n0 AS a0 ORDER BY NULL, a0 DESC } WITH * OPTIONAL MATCH p0 = ( a0 ) ,( ) WHERE NULL CREATE (c1{id:-1}) DELETE (c1) MERGE ( n1 { id : reduce(a=117 ,b IN []|a) } ) RETURN DISTINCT CASE WHEN TRUE THEN 1 END AS a9 , reduce(a=a0 ,b IN []|a) AS a10 
***********************
121、 EXCEPTIONS in:memgraph_database103
Can't have null literal properties inside merge (anon8.k3)!
FOREACH(a0 IN reduce(a=NULL,b IN [NULL]|a)|MERGE (n0{k6:'b', id:127}) MERGE ({id:128})-[r0 :T0{k41:false, id:129}]-(n1 :L3{id:130})-[r1 :T1{k44:'5', id:131}]-({id:132}) MERGE (n2{id:133})-[r2 :T1{id:134}]-({k8:388171069, id:135})-[r3 :T0{k39:500481206, id:136}]-({id:137})) CREATE ({k3:(NULL--1706784540), id:138})-[ :T1{id:139}]->(n3 :L1{k24:true, id:140}) MERGE ({k1:false, id:141}) RETURN 1 AS a1
FOREACH ( a0 IN reduce ( a = NULL , b IN [ NULL ] | a ) | MERGE ( n0 { k6 : 'b' , id : 127 } ) MERGE ( { id : 128 } ) - [ r0 : T0 { k41 : false , id : 129 } ] - ( n1 : L3 { id : reduce(a=130 ,b IN []|a) } ) - [ r1 : T1 { k44 : '5' , id : 131 } ] - ( { id : 132 } ) MERGE ( n2 { id : reduce(a=133 ,b IN []|a) } ) - [ r2 : T1 { id : 134 } ] - ( { k8 : 388171069 , id : 135 } ) - [ r3 : T0 { k39 : 500481206 , id : 136 } ] - ( { id : 137 } ) ) CREATE ( { k3 : CASE WHEN TRUE THEN ( NULL - -1706784540 ) END , id : 138 } ) - [ : T1 { id : 139 } ] - > ( n3 : L1 { k24 : reduce(a=true ,b IN []|a) , id : 140 } ) WITH * UNWIND [1] as l0 MERGE ( { k1 : false , id : 141 } ) RETURN 1 AS a1 
***********************
122、 EXCEPTIONS in:memgraph_database103
Can't have null literal properties inside merge (r3.k46)!
WITH NULL AS a0 MERGE p0=(n0{id:148}) SET n0.k=reduce(a=464915374,b IN [NULL]|a) RETURN 1 AS a1, n0 AS a2 UNION CREATE ( :L1{id:161}) CREATE (n8 :L0{id:162})-[r1 :T1{id:163}]->({id:164})<-[r2 :T0{id:165}]-(n9{id:166}), ({id:167})<-[r3 :T1{k46:(939389449/(1106244574+NULL)), id:168}]-(n10{k25:'N', id:169}) MERGE p0=(n11{id:170})-[r4 :T0{k41:(NOT true), id:171}]-( :L0{id:172}) RETURN DISTINCT collect(n11)[abs(-1894438796)] AS a1, n11 AS a2
WITH NULL AS a0 SET (NULL).NULL=1 MERGE p0 = ( n0 { id : 148 } ) WITH * OPTIONAL MATCH ()-[:TYPE]-() SET n0 . k = reduce ( a = 464915374 , b IN [ NULL ] | a ) WITH * RETURN 1 AS a1 , n0 AS a2 UNION CREATE ( : L1 { id : CASE WHEN TRUE THEN 161 END } ) CREATE (n9{id:166})-[ r2 : T0 { id : 165 } ] ->({id:164})<-[ r1 : T1 { id : 163 } ] -( n8 : L0 { id : 162 } ) CREATE ( { id : 167 } ) < - [ r3 : T1 { k46 : ( 939389449 / ( 1106244574 + NULL ) ) , id : 168 } ] - ( n10 { k25 : 'N' , id : 169 } ) WITH * MERGE p0 = ( n11 { id : 170 } ) - [ r4 : T0 { k41 : ( NOT true ) , id : reduce(a=171 ,b IN []|a) } ] - ( : L0 { id : 172 } ) WITH * UNWIND [NULL] as l0 RETURN DISTINCT collect ( n11 ) [ abs ( -1894438796 ) ] AS a1 , n11 AS a2 
***********************
123、 EXCEPTIONS in:memgraph_database104
Can't have null literal properties inside merge (n0.k25)!
CREATE ({id:14}) CREATE (n0{k25:NULL, id:15}) MERGE (n1{id:16}) RETURN properties(n1) AS a0, n1 AS a1
CREATE ( { id : 14 } ) DETACH DELETE (NULL) CREATE ( n0 { k25 : NULL , id : 15 } ) MERGE ( n1 { id : 16 } ) WITH * RETURN properties ( n1 ) AS a0 , n1 AS a1 
***********************
124、 EXCEPTIONS in:memgraph_database104
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * MATCH (n0) WHERE (1225940685 = (NULL/-1530192554)) MERGE p0=(n1 :L2{k13:true, id:17})-[r0 :T6{k73:'v', id:18}]-(n2{id:19}) RETURN (r0.k73) AS a0} MATCH (n3{k25:true}) DETACH DELETE n3  RETURN 1 AS a1, 1 AS a2
CALL { WITH * SET (NULL).NULL=1 WITH * MATCH ( n0 ) WHERE ( 1225940685 = ( NULL / -1530192554 ) ) MERGE p0 = ( n1 : L2 { k13 : true , id : 17 } ) - [ r0 : T6 { k73 : 'v' , id : 18 } ] - ( n2 { id : CASE WHEN TRUE THEN 19 END } ) WITH * RETURN DISTINCT ( r0 . k73 ) AS a0 } CREATE (c0{id:-1}) DELETE (c0) WITH * MATCH ( n3 { k25 : true } ) REMOVE (NULL).FALSE DETACH DELETE n3 WITH * RETURN 1 AS a1 , 1 AS a2 SKIP 1 LIMIT 1 
***********************
125、 EXCEPTIONS in:memgraph_database104
MATCH can't be put after RETURN clause or after an update.
CALL{WITH * CREATE ({id:29}), ({id:30})-[ :T6{id:31}]->({k6:NULL, id:32}) MERGE (n0{id:33})-[r0 :T5{k67:1160635518, id:34}]->(n1{id:35}) RETURN 1 AS a0, n0 AS a1 SKIP 0} MATCH ()-[r0]->(a1)-[]-(a1), p0=(a1)-[*0..]-(a1) DETACH DELETE a1  RETURN DISTINCT NULL AS a2, 1 AS a3
CALL { WITH * CREATE (c0{id:-1}) DELETE (c0) CREATE ( { id : 29 } ) CREATE ( { id : 30 } ) - [ : T6 { id : reduce(a=31 ,b IN []|a) } ] - > ( { k6 : NULL , id : 32 } ) REMOVE (NULL).FALSE MERGE ( n0 { id : CASE WHEN TRUE THEN 33 END } ) - [ r0 : T5 { k67 : 1160635518 , id : CASE WHEN TRUE THEN 34 END } ] - > ( n1 { id : 35 } ) RETURN 1 AS a0 , CASE WHEN FALSE THEN NULL ELSE n0 END AS a1 SKIP CASE WHEN FALSE THEN NULL ELSE 0 END } OPTIONAL MATCH ()-[:TYPE]-() MATCH ( ) - [ r0 ] - > ( a1 ) - [ ] - ( a1 ) ,p0 = (a1)-[*0..0]-( a1 ) - [ * 0 .. ] - ( a1 ) WITH * WITH * FOREACH(f in [1]|DETACH DELETE reduce(a=a1 ,b IN []|a) ) RETURN DISTINCT NULL AS a2 , 1 AS a3 SKIP 1 
***********************
126、 EXCEPTIONS in:memgraph_database104
Can't have null literal properties inside merge (anon1.k13)!
CREATE p0=({k13:NULL, id:91})<-[ :T5{id:92}]-({id:93}) MERGE (n0 :L2{k6:false, id:94}) DETACH DELETE n0  RETURN 1 AS a0, ('t' CONTAINS 'Ypi5S') AS a1 SKIP 0
CREATE p0 = ( { k13 : NULL , id : 91 } ) < - [ : T5 { id : reduce(a=92 ,b IN []|a) } ] - ( { id : 93 } ) WITH * UNWIND [NULL] as l0 MERGE ( n0 : L2 { k6 : reduce(a=false ,b IN []|a) , id : 94 } ) DETACH DELETE n0 WITH * OPTIONAL MATCH ()-[:TYPE]-() RETURN 1 AS a0 , ( 't' CONTAINS (''+'Ypi5S' )) AS a1 ORDER BY 1 DESC SKIP 0 
***********************
127、 EXCEPTIONS in:memgraph_database105
Can't have null literal properties inside merge (anon3.k27)!
FOREACH(a0 IN NULL|MERGE p0=(n0{id:6}) MERGE ({id:7}) CREATE p1=(n1 :L4{id:8})) CREATE ({k27:NULL, id:9}), ( :L4{k25:NULL, id:10}) MERGE ( :L4{id:11}) RETURN 1 AS a1 ORDER BY a1 DESC
FOREACH ( a0 IN NULL | MERGE p0 = ( n0 { id : CASE WHEN TRUE THEN 6 END } ) MERGE pp0=( { id : reduce(a=7 ,b IN []|a) } ) CREATE (c0{id:-1}) DELETE (c0) CREATE p1 = ( n1 : L4 { id : 8 } ) ) WITH * OPTIONAL MATCH ()-[:TYPE]-() CREATE ( { k27 : NULL , id : 9 } ) CREATE ( : L4 { k25 : NULL , id : reduce(a=10 ,b IN []|a) } ) SET (NULL).NULL=1 MERGE pp1=( : L4 { id : 11 } ) RETURN 1 AS a1 ORDER BY a1 DESC 
***********************
128、 EXCEPTIONS in:memgraph_database105
Empty command
WITH [(n0)-[ :T1{k36:NULL}]-(n1) WHERE false|NULL] AS a0 MATCH (n0) WHERE NULL SET n0.k=NULL RETURN DISTINCT 1 AS a1, false AS a2 LIMIT 1 UNION WITH collect(NULL)[abs(1065715386)] AS a0 WHERE NULL MERGE ({id:17})-[r0 :T5{k64:'m', id:18}]-(n0{id:19}) SET n0.k=-1532403067 RETURN 1 AS a1, (NULL/1696122151) AS a2
WITH [ ( n0 ) - [ : T1 { k36 : NULL } ] - ( n1 ) WHERE false | reduce(a=NULL ,b IN []|a) ] AS a0 WITH * MATCH (n0) WHERE NULL FOREACH(f in [1]|SET n0 . k = NULL ) DELETE NULL RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a1 , CASE WHEN TRUE THEN false END AS a2 ORDER BY TRUE SKIP 1 LIMIT 1 UNION WITH collect ( NULL ) [ abs ( 1065715386 ) ] AS a0 WHERE NULL SET (NULL).k=1 MERGE ( { id : CASE WHEN FALSE THEN NULL ELSE 17 END } ) - [ r0 : T5 { k64 : 'm' , id : CASE WHEN TRUE THEN 18 END } ] - ( n0 { id : 19 } ) SET n0 . k = -1532403067 RETURN CASE WHEN TRUE THEN 1 END AS a1 , ( NULL / 1696122151 ) AS a2 
***********************
129、 EXCEPTIONS in:memgraph_database105
Empty command
WITH [(n0)-[ :T1{k36:NULL}]-(n1) WHERE false|NULL] AS a0 MATCH (n0) WHERE NULL SET n0.k=NULL RETURN DISTINCT 1 AS a1, false AS a2 LIMIT 1 UNION WITH collect(NULL)[abs(1065715386)] AS a0 WHERE NULL MERGE ({id:17})-[r0 :T5{k64:'m', id:18}]-(n0{id:19}) SET n0.k=-1532403067 RETURN 1 AS a1, (NULL/1696122151) AS a2
WITH [ ( n0 ) - [ : T1 { k36 : NULL } ] - ( n1 ) WHERE false | reduce(a=NULL ,b IN []|a) ] AS a0 WITH * MATCH (n0) WHERE NULL FOREACH(f in [1]|SET n0 . k = NULL ) DELETE NULL RETURN DISTINCT reduce(a=1 ,b IN []|a) AS a1 , CASE WHEN TRUE THEN false END AS a2 ORDER BY TRUE SKIP 1 LIMIT 1 UNION WITH collect ( NULL ) [ abs ( 1065715386 ) ] AS a0 WHERE NULL SET (NULL).k=1 MERGE ( { id : CASE WHEN FALSE THEN NULL ELSE 17 END } ) - [ r0 : T5 { k64 : 'm' , id : CASE WHEN TRUE THEN 18 END } ] - ( n0 { id : 19 } ) SET n0 . k = -1532403067 RETURN CASE WHEN TRUE THEN 1 END AS a1 , ( NULL / 1696122151 ) AS a2 
***********************
